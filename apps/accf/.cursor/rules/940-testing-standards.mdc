---
description: "use when IMPLEMENTING TESTING to ENFORCE PYRAMID STANDARDS for COMPREHENSIVE COVERAGE"
alwaysApply: false
---

# Testing Guidelines (Manual Include)

## Pyramid
| Layer | Tool | Goal |
|-------|------|------|
| Unit | pytest, Vitest | Fast validation of functions |
| Integration | docker-compose + testcontainers | Verify service contracts |
| E2E | Playwright | User journeys |

## Coverage
- Target **≥ 85 %** lines & branches.
- Block PR if coverage drops >2 %.

## Naming & Layout
- Tests mirror code: `src/foo.py` → `tests/test_foo.py`.
- Use `*.test.tsx` for React; `*_test.go` for Go.

## Mocks
- Stub external HTTP with **WireMock** / **msw**.

## Fixtures
```python
@pytest.fixture(scope="session")
def db_engine():
    ...
```

## CI
- Parallelize with `pytest -n auto`.
- Upload coverage XML to Codecov.

# Testing Standards (Optimized for GPT-4.1)

- Clarity & Directness: Use clear, imperative instructions.
- Batching & Parallelization: Batch compatible test operations and validations; execute in parallel where possible.
- Multi-Step Planning: Plan several steps ahead, identify batching opportunities, and optimize for efficiency.
- Persistent Autonomy: Continue until all objectives are met or explicitly told to stop; avoid unnecessary waiting for input.
- Tool-First Mandate: Always use available tools for every operation, preferring tool-based actions.
- Self-Review & Optimization: Review and revise plans for efficiency before acting.
- Evidence-Based Completion: Present clear evidence of completion before considering a task done.
