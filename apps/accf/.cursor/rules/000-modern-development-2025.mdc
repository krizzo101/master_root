---
description: "use when STARTING DEVELOPMENT to LEVERAGE 2025 TOOLCHAIN for COMPLETE DEVELOPMENT EXCELLENCE"
globs:
alwaysApply: false
---

# MODERN DEVELOPMENT 2025 - OVERVIEW

**Validation**: "Rule 000 Modern Stack Active"

## Complete Development Revolution

**Triggers**: Project setup, development workflow, team onboarding, AI integration
**Principles**: Astral ecosystem dominance, terminal-first trends, vibe coding, agentic AI
**Signatures**: uv + ruff + ty toolchain, LangGraph Platform, Claude Code competition, hybrid workflows
**Validation**: 100x performance gains, zero-config setup, AI-native development
**Integration**: Multi-tool ecosystem, cloud-native deployment, enterprise readiness

## Astral Ecosystem Supremacy (July 2025)

**Complete Python Toolchain**:
```bash
# Single vendor, unified experience
curl -sSfL https://astral.sh/install.sh | sh  # Install uv
uv init my-project                            # Project setup
uv add fastapi pydantic --dev pytest ruff ty # Dependencies
uv sync                                       # 5x faster than pip
uv run ruff format . && uv run ty check .    # Quality check
```

**Performance Revolution**:
- **uv**: 20x faster than pip/poetry (120s → 5s)
- **ruff**: 100x faster than black/flake8 (90s → 0.8s)
- **ty**: 15x faster than mypy (25s → 1.5s)

## AI Development Landscape

**Current Models** (July 2025):
```python
# Modern AI model selection
reasoning = init_chat_model("o3-mini")        # Complex planning
powerful = init_chat_model("claude-sonnet-4") # Most capable
coding = init_chat_model("claude-opus-4")     # Advanced coding
speed = init_chat_model("gpt-4.1-mini")      # Fast responses
```

**Competitive Tools**:
- **Cursor**: Visual IDE with AI integration
- **Claude Code**: Terminal-based development
- **Amazon Kiro**: AWS cloud-native IDE
- **Vibe Coding**: Conversational development

## LangGraph Platform Integration

**Enterprise Deployment** (Available July 2025):
```python
from langgraph.platform import LangGraphPlatform

# AWS Marketplace deployment
platform = LangGraphPlatform(
    deployment="aws-marketplace",
    scaling="auto",
    compliance="enterprise"
)
```

## Modern Workflow

**Daily Development**:
```bash
uv sync                    # Fast dependency management
uv run ruff format .       # Lightning formatting
uv run ruff check . --fix  # Automatic linting
uv run ty check .          # Fast type checking
uv run pytest             # Test execution
```

**AI-Powered Creation**:
```python
# Natural language → Complete implementations
agent = create_react_agent(
    model=init_chat_model("claude-opus-4"),
    tools=[research_tool, code_tool],
    checkpointer=InMemorySaver()
)
```

## Success Validation

- ✅ **Astral ecosystem** (uv + ruff + ty) installed
- ✅ **Current AI models** configured
- ✅ **LangGraph Platform** deployment ready
- ✅ **Terminal-first workflows** optimized
- ✅ **100x performance** improvements achieved

[complete-development-patterns.md](mdc:.cursor/templates/complete-development-patterns.md)
