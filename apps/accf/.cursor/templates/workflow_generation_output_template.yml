# [WORKFLOW NAME] WORKFLOW TEMPLATE

# This template provides a best-practice structure for any workflow.
# Add, remove, or re-order phases as needed for your workflow's purpose.
# Use clear descriptions, tools, steps, and validation gates for each phase.
# If you omit or re-order phases, document the reasoning in comments for auditability.

expectation: [expected_outcome]
completion: [completion_criteria]

directives:
  - "This workflow is an explicit order. All steps must be executed as written. Do not improvise, skip, or treat steps as optional."
  - "The time call is required to ensure the agent is aware of the real current date/time, not its model cutoff."
  - "Load all relevant rules, standards, and compliance requirements before proceeding."

references:
  Profile: .cursor/profiles/[workflow_name]_agent_profile.yml
  Output_Template: .cursor/templates/[workflow_name]_output_template.yml
  Research_Reference_Template: .cursor/templates/research_reference_template.md
  Documentation: [doc_1, doc_2]
  Standards: [standards_file_1, standards_file_2]
  [other_references]

phases:
  profile_initialization:
    description: "Load the workflow agent profile, perform a time check, and any foundational rules or standards."
    tools: [read_file, fetch_rules, mcp_time_current_time]
    steps:
      - tool: mcp_time_current_time
        validation: time_checked
      - tool: read_file
        params:
          target_file: .cursor/profiles/[workflow_name]_agent_profile.yml
        validation: agent_profile_loaded
      - tool: fetch_rules
        params:
          rule_names: [list_relevant_rule_names]
        validation: foundational_rules_loaded
    gates: [time_checked, agent_profile_loaded, foundational_rules_loaded]

  intake:
    description: "Capture the purpose, scope, and requirements for the workflow."
    tools: [prompt_user]
    steps:
      - intention_analysis → workflow_request → workflow_purpose_identified
      - context_capture → use_case_analysis → requirements_documented
    gates: [workflow_purpose_identified, requirements_documented]

  input_validation:
    description: "Validate all required inputs before proceeding."
    tools: [prompt_user]
    steps:
      - [input_validation_step_1]
      - [input_validation_step_2]
    gates: [all_inputs_validated]

  # Optional: include if research/information gathering is needed
  research:
    description: "Gather information or perform research as needed for this workflow. Omit if not required. If research is performed, findings MUST be captured using the research reference template."
    tools: [web_search, api_call, edit_file]
    steps:
      - [research_step_1]
      - [research_step_2]
      - use_research_reference_template_to_capture_findings
      - tool: edit_file
        params:
          target_file: docs/research/[workflow_name]_research_reference.md
          code_edit: captured_research_findings
        validation: research_reference_doc_saved
    gates: [research_complete, research_reference_doc_saved]

  # Add your operational phases here
  [phase_1]:
    description: "[Describe the phase]"
    tools: [tool_1, tool_2]
    steps:
      - [step_1]
      - [step_2]
    gates: [gate_1, gate_2]

  # Optional: include if the workflow generates files/code
  linting:
    description: "Lint and auto-fix any files generated by this workflow, using the appropriate tool for each file type. Manually fix only errors that cannot be auto-fixed. Omit if not required."
    tools: [run_terminal_cmd]
    steps:
      # For each generated or modified file:
      #   - If YAML: prettier --write yourfile.yml
      #   - If Markdown: markdownlint-cli2 --fix yourfile.md
      #   - If Python: black yourfile.py
      #   - If Shell script: shfmt -w yourscript.sh
      #   - If JSON: prettier --write yourfile.json or jq . yourfile.json > tmp.json && mv tmp.json yourfile.json
      #   - [Add other auto-fixers as appropriate]
      # After auto-fix, re-run the linter. Only manually fix errors that cannot be auto-fixed.
      - [linting_and_autofix_step_1]
    gates: [linting_passed]

  # Add as many custom phases as needed

  # ----------------------------------------------------------------------
  # Optional phases you may want to include in your workflow:
  # Uncomment and adapt any of these as needed for your use case.
  #
  # data_validation:
  #   description: "Validate data quality and integrity."
  #   tools: [data_validator]
  #   steps:
  #     - [data_validation_step_1]
  #   gates: [data_validated]
  #
  # approval:
  #   description: "Obtain required approvals before proceeding."
  #   tools: [approval_system]
  #   steps:
  #     - [approval_step_1]
  #   gates: [approval_granted]
  #
  # notification:
  #   description: "Notify stakeholders of workflow progress or completion."
  #   tools: [email, slack]
  #   steps:
  #     - [notification_step_1]
  #   gates: [notification_sent]
  #
  # testing:  # Strongly recommended if your workflow produces code, data, or artifacts
  #   description: "Test outputs or intermediate results to ensure correctness."
  #   tools: [test_runner, validation_script]
  #   steps:
  #     - [testing_step_1]
  #   gates: [tests_passed]
  #
  # documentation:  # Highly recommended for most workflows
  #   description: "Document the workflow, its outputs, and any important findings."
  #   tools: [edit_file]
  #   steps:
  #     - [documentation_step_1]
  #   gates: [documentation_complete]
  #
  # ...add more as needed...

failure_prevention:
  avoid:
    - [common_mistake_1]
    - [common_mistake_2]
  require:
    - [required_action_1]
    - [required_action_2]

success_validation:
  before_completion:
    - [success_gate_1]
    - [success_gate_2]
  output_requirements: [final_output_criteria]

# End of template
