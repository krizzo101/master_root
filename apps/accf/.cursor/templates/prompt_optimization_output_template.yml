# PROMPT OPTIMIZATION WORKFLOW TEMPLATE

expectation: optimized_llm_ready_prompt
completion: optimized_prompt_in_standard_location

directives:
  - "This workflow is an explicit order. All steps must be executed as written. Do not improvise, skip, or treat steps as optional."
  - "The time call is required to ensure the agent is aware of the real current date/time, not its model cutoff."
  - "Load all relevant rules, standards, and compliance requirements before proceeding."

references:
  Profile: .cursor/profiles/prompt_optimization_agent_profile.yml
  Research_Reference_Template: .cursor/templates/research_reference_template.md
  Documentation: [docs/standards/prompt_optimization_workflow.md]
  Standards: [docs/standards/prompt_engineering_best_practices.md, docs/standards/documentation-templates.md]

phases:
  profile_initialization:
    description: "Load the agent profile, perform a time check, and load foundational rules and standards."
    tools: [read_file, fetch_rules, mcp_time_current_time]
    steps:
      - tool: mcp_time_current_time
        validation: time_checked
      - tool: read_file
        params:
          target_file: .cursor/profiles/prompt_optimization_agent_profile.yml
        validation: agent_profile_loaded
      - tool: fetch_rules
        params:
          rule_names: ["002-tool-usage-and-optimize", "200-project-design-and-dev-process", "501-tool-operation-validation", "800-development-best-practices", "300-documentation-standards"]
        validation: foundational_rules_loaded
    gates: [time_checked, agent_profile_loaded, foundational_rules_loaded]

  intake:
    description: "Capture the input prompt, purpose, and requirements for optimization."
    tools: [prompt_user]
    steps:
      - intention_analysis → prompt_request → prompt_purpose_identified
      - context_capture → use_case_analysis → requirements_documented
    gates: [prompt_purpose_identified, requirements_documented]

  idea_formation:
    description: "Extract and expand the core intent and ideas from the input prompt."
    tools: [edit_file]
    steps:
      - idea_extraction → core_intent_documented
      - idea_expansion → expanded_ideas_documented
    gates: [core_intent_documented, expanded_ideas_documented]

  deconstruction:
    description: "Break down the prompt into logical components and modules."
    tools: [edit_file]
    steps:
      - prompt_decomposition → components_documented
      - modularization → modules_documented
    gates: [components_documented, modules_documented]

  enhancement:
    description: "Enhance prompt clarity, specificity, context, and constraints."
    tools: [edit_file]
    steps:
      - clarity_enhancement → clarity_validated
      - specificity_enhancement → specificity_validated
      - context_and_constraints_added → context_validated
    gates: [clarity_validated, specificity_validated, context_validated]

  enrichment:
    description: "Add examples, edge cases, metadata, and domain context to the prompt."
    tools: [edit_file]
    steps:
      - add_examples_and_edge_cases → enrichment_validated
      - add_metadata_and_domain_context → metadata_validated
    gates: [enrichment_validated, metadata_validated]

  optimization:
    description: "Refine the prompt for LLMs: length, ambiguity, structure, formatting."
    tools: [edit_file]
    steps:
      - ambiguity_reduction → ambiguity_validated
      - structure_and_formatting_optimization → formatting_validated
      - length_and_completeness_check → completeness_validated
    gates: [ambiguity_validated, formatting_validated, completeness_validated]

  validation:
    description: "Validate the optimized prompt for completeness, testability, and LLM-readiness."
    tools: [edit_file]
    steps:
      - prompt_validation → validation_report_created
      - testability_check → testability_validated
      - llm_readiness_check → llm_readiness_validated
    gates: [validation_report_created, testability_validated, llm_readiness_validated]

  documentation:
    description: "Document the workflow, agent profile, and all generated prompt artifacts. Commit all changes to git."
    tools: [edit_file, run_terminal_cmd]
    steps:
      - tool: edit_file
        params:
          target_file: docs/standards/prompt_optimization_workflow.md
          code_edit: generated_workflow_doc_from_template
        validation: workflow_doc_created
      - tool: run_terminal_cmd
        params:
          command: "git add . && git commit -m 'Add prompt optimization workflow, agent profile, templates, and documentation.'"
          is_background: false
        validation: git_commit_successful
    gates: [workflow_doc_created, git_commit_successful]

failure_prevention:
  avoid:
    - unclear_purpose
    - missing_phases
    - incomplete_validation
    - undocumented_workflow
    - standards_noncompliance
    - vague_queries
    - ambiguous_paths
    - uncommitted_changes
    - skipped_steps
    - missing_time_call
    - insufficient_iteration
  require:
    - purpose_clearly_defined
    - phases_and_steps_mapped
    - validation_criteria_explicit
    - workflow_documented
    - standards_compliance
    - actionable_queries
    - explicit_paths
    - git_commit_successful
    - workflow_refined_to_point_of_diminishing_returns

success_validation:
  before_completion:
    - optimized_prompt_created
    - validation_report_created
    - workflow_doc_created
    - git_commit_successful
  output_requirements: optimized_prompt_in_standard_location
