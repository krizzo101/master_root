# IMPLEMENT WORKFLOW

keywords: [implement, build, execute, deploy, realize]
expectation: systematic_implementation_with_validation_and_documentation
completion: implemented_solution_tested_documented_operational

protocol_enforcement_activation:
  description: "Load operational enforcement protocols for systematic KB maintenance during implementation"
  steps:
    - load_protocol: ".cursor/protocols/operational-enforcement.md"
      purpose: "Ensure KB consultation before implementation + KB updates after completions"
      validation: enforcement_active_for_implementation

phases:
  context_assessment:
    tools: [mcp_cognitive_tools_arango_search, codebase_search, read_file]
    validation: implementation_context_established
    steps:
      - scope_analysis → implementation_request → [features, fixes, integrations, optimizations]
      - tool: mcp_cognitive_tools_arango_search
        params:
          search_type: content
          collection: research_docs
          content: implementation_patterns_best_practices
          limit: 15
        validation: implementation_knowledge_retrieved
      - requirements_analysis → specifications_constraints → technical_requirements
      - approach_selection → implementation_strategy → development_methodology
    gates: [scope_clear, context_established, requirements_documented, approach_selected]

  pre_validation:
    tools: [mcp_cognitive_tools_arango_search, codebase_search, read_file]
    validation: requirements_understood_impact_assessed
    steps:
      - requirements_analysis → specifications → implementation_plan
      - tool: mcp_cognitive_tools_arango_search
        params:
          search_type: content
          collection: heuristics
          content: similar_implementations implementation
          limit: 15
        validation: implementation_patterns_reviewed
      - impact_assessment → changes_scope → system_effects → risk_analysis
      - dependency_mapping → required_components → integration_points
      - backup_strategy → current_state → restoration_plan
    gates: [requirements_clear, impact_assessed, dependencies_mapped, backup_ready]

  implementation:
    tools: [edit_file, search_replace]
    parallel: when_independent_changes
    validation: incremental_implementation_continuous_validation
    steps:
      - tool_optimization → task_requirements → optimal_tools_selected
      - git_commit → "Pre-implementation: [description]" → baseline_committed
      - incremental_implementation → small_verifiable_steps → progress_safely
      - parallel_coordination → independent_simultaneous + dependent_sequential
      - continuous_validation → test_each_step + rollback_readiness
    gates: [tools_optimal, baseline_secure, progress_incremental, validation_continuous]

  verification:
    tools: [read_file, codebase_search, grep_search]
    validation: comprehensive_testing_before_completion
    steps:
      - functionality_testing → core_requirements → actual_usage_scenarios
      - integration_testing → system_connections + compatibility
      - error_handling → failure_modes → graceful_degradation
      - performance_validation → speed_resources_efficiency → acceptance_criteria
      - regression_testing → existing_functionality → no_breakage
    gates: [functionality_verified, integration_successful, errors_handled, performance_acceptable, no_regressions]

  completion:
    tools: [edit_file, mcp_cognitive_tools_arango_modify]
    validation: changes_committed_documented_knowledge_captured
    steps:
      - git_commit → "Implementation complete: [detailed changes]" → all_files
      - documentation_updates → affected_docs → implementation_impact
      - knowledge_capture → learnings_challenges_patterns → future_reference
      - tool: mcp_cognitive_tools_arango_modify
        params:
          operation: insert
          collection: metrics
          document:
            type: implementation_complete
            metric_type: "implementation"
            implementation_description: detailed_change_summary
            challenges_encountered: problems_and_solutions
            patterns_used: successful_implementation_patterns
            testing_results: verification_outcomes
            performance_impact: performance_changes_observed
            created: current_time
        validation: implementation_documented_in_knowledge_base
      - cleanup → temporary_files + unused_backups → system_clean
    gates: [changes_committed, documentation_updated, knowledge_captured, cleanup_complete]

  completion_validation:
    tools: [edit_file, mcp_cognitive_tools_arango_modify]
    validation: implementation_complete_tested_documented
    steps:
      - final_testing → comprehensive_validation → all_requirements_met
      - documentation_update → implementation_details → maintenance_guidance
      - deployment_verification → production_ready → operational_validation
      - tool: mcp_cognitive_tools_arango_modify
        params:
          operation: insert
          collection: research_docs
          document:
            type: implementation_complete
            content_type: "implementation"
            implementation_target: implemented_system_component
            approach_used: selected_implementation_strategy
            results_achieved: implementation_outcomes
            testing_validation: testing_results
            documentation_updated: documentation_changes
            lessons_learned: implementation_insights
            created: current_time
        validation: implementation_stored_with_id
      - enforcement_compliance: Validate KB consultation occurred + KB update completed per operational-enforcement protocol

  operational_readiness:
    tools: [mcp_cognitive_tools_arango_modify, mcp_cognitive_tools_arango_manage]
    validation: system_operational_knowledge_updated
    steps:
      - system_validation → operational_status → performance_metrics
      - knowledge_integration → implementation_lessons → operational_guidance
      - tool: mcp_cognitive_tools_arango_modify
        params:
          operation: insert
          collection: metrics
          document:
            type: implementation_tracking
            implementation_type: implementation_category
            success_metrics: achievement_measurements
            kb_consultation_completed: true
            kb_update_completed: true
            enforcement_compliance: true
            timestamp: current_time
        validation: implementation_metrics_tracked

implementation_approaches:
  code_modifications:
    tools: [edit_file, search_replace]
    strategy: incremental_changes_immediate_testing
  file_operations:
    tools: [edit_file, delete_file]
    strategy: backup_modify_validate
  database_operations:
    tools: [mcp_cognitive_tools_arango_modify, mcp_cognitive_tools_arango_manage]
    strategy: backup_modify_validate_schema_test

quality_assurance:
  git_workflow: commit_before_major_changes_descriptive_messages_completion
  testing_standards: functionality_integration_performance_regression
  documentation_maintenance: reflect_changes_relevant_docs
  knowledge_management: capture_learnings_patterns_solutions_future_reference

system_configurations:
  tools: [edit_file]
  strategy: configuration_backup_incremental_validation
