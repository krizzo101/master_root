# REQUIREMENTS TO DESIGN SPEC WORKFLOW

expectation: comprehensive_functional_design_spec
completion: design_spec_in_standard_location

directives:
  - "This workflow is an explicit order. All steps must be executed as written. Do not improvise, skip, or treat steps as optional."
  - "The time call is required to ensure the agent is aware of the real current date/time, not its model cutoff."
  - "Load all relevant rules, standards, and compliance requirements before proceeding."

references:
  Profile: .cursor/profiles/requirements_to_design_spec_agent_profile.yml
  Output_Template: .cursor/templates/requirements_to_design_spec_output_template.yml
  Documentation: [docs/standards/requirements_to_design_spec_workflow.md]

phases:
  profile_initialization:
    description: "Load the agent profile, perform a time check, and load foundational rules and standards."
    tools: [read_file, fetch_rules, mcp_time_current_time]
    steps:
      - tool: mcp_time_current_time
        validation: time_checked
      - tool: read_file
        params:
          target_file: .cursor/profiles/requirements_to_design_spec_agent_profile.yml
        validation: agent_profile_loaded
      - tool: fetch_rules
        params:
          rule_names: ["002-tool-usage-and-optimize", "200-project-design-and-dev-process", "501-tool-operation-validation", "800-development-best-practices", "300-documentation-standards"]
        validation: foundational_rules_loaded
    gates: [time_checked, agent_profile_loaded, foundational_rules_loaded]

  intake:
    description: "Capture and validate the requirements documentation (technical, functional, non-functional). Clarify ambiguities and ensure completeness."
    tools: [prompt_user, edit_file]
    steps:
      - requirements_intake → requirements_clarification → requirements_validated
    gates: [requirements_validated]

  analysis:
    description: "Analyze requirements to extract system objectives, constraints, and key features. Identify gaps or conflicts."
    tools: [edit_file]
    steps:
      - requirements_analysis → objectives_and_constraints_documented
      - gap_and_conflict_analysis → issues_documented
    gates: [objectives_and_constraints_documented, issues_documented]

  decomposition:
    description: "Break down requirements into logical modules, components, and interfaces. Map dependencies and interactions."
    tools: [edit_file]
    steps:
      - requirements_decomposition → modules_and_components_documented
      - dependency_mapping → interactions_documented
    gates: [modules_and_components_documented, interactions_documented]

  design_spec_generation:
    description: "Generate the comprehensive functional design specification, including architecture diagrams, interface definitions, and traceability to requirements."
    tools: [edit_file, create_diagram]
    steps:
      - design_spec_drafting → design_spec_draft_created
      - architecture_diagram_generation → diagrams_created
      - requirements_traceability_matrix → traceability_documented
    gates: [design_spec_draft_created, diagrams_created, traceability_documented]

  enrichment:
    description: "Add examples, edge cases, and domain-specific context to the design spec. Ensure clarity and completeness."
    tools: [edit_file]
    steps:
      - add_examples_and_edge_cases → enrichment_validated
      - add_domain_context → domain_context_validated
    gates: [enrichment_validated, domain_context_validated]

  validation:
    description: "Validate the design spec for completeness, testability, standards compliance, and alignment with requirements."
    tools: [edit_file]
    steps:
      - design_spec_validation → validation_report_created
      - testability_check → testability_validated
      - standards_compliance_check → standards_compliance_validated
    gates: [validation_report_created, testability_validated, standards_compliance_validated]

  documentation:
    description: "Document the workflow, agent profile, and all generated artifacts. Commit all changes to git."
    tools: [edit_file, run_terminal_cmd]
    steps:
      - tool: edit_file
        params:
          target_file: docs/standards/requirements_to_design_spec_workflow.md
          code_edit: generated_workflow_doc_from_template
        validation: workflow_doc_created
      - tool: run_terminal_cmd
        params:
          command: "git add . && git commit -m 'Add requirements-to-design-spec workflow, agent profile, templates, and documentation.'"
          is_background: false
        validation: git_commit_successful
    gates: [workflow_doc_created, git_commit_successful]

failure_prevention:
  avoid:
    - unclear_purpose
    - missing_phases
    - incomplete_validation
    - undocumented_workflow
    - standards_noncompliance
    - vague_queries
    - ambiguous_paths
    - uncommitted_changes
    - skipped_steps
    - missing_time_call
    - insufficient_iteration
  require:
    - purpose_clearly_defined
    - phases_and_steps_mapped
    - validation_criteria_explicit
    - workflow_documented
    - standards_compliance
    - actionable_queries
    - explicit_paths
    - git_commit_successful
    - workflow_refined_to_point_of_diminishing_returns

success_validation:
  before_completion:
    - design_spec_draft_created
    - diagrams_created
    - traceability_documented
    - validation_report_created
    - workflow_doc_created
    - git_commit_successful
  output_requirements: design_spec_in_standard_location
