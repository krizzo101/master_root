# DESIGN WORKFLOW

keywords: [design, architect, plan, structure, model]
expectation: comprehensive_system_design_with_validation
completion: design_artifacts_created_validated_documented_stored

phases:
  requirements_analysis:
    tools: [mcp_cognitive_tools_arango_search, codebase_search, read_file]
    validation: requirements_understood_constraints_identified
    steps:
      - requirements_gathering → user_needs + system_requirements → clear_specifications
      - tool: mcp_cognitive_tools_arango_search
        params: {search_type: content, collection: research_docs, content: similar_designs, limit: 10}
        validation: existing_designs_analyzed
      - constraints_identification → technical_business_operational → constraint_documentation
      - design_criteria → performance_scalability_maintainability → success_metrics
    gates: [requirements_clear, constraints_identified, criteria_established, existing_designs_reviewed]

  architecture_design:
    tools: [create_diagram, mcp_cognitive_tools_arango_search]
    validation: system_architecture_designed_documented
    steps:
      - system_architecture → high_level_design → component_identification
      - component_design → detailed_specifications → interface_definitions
      - tool: mcp_cognitive_tools_arango_search
        params: {search_type: content, collection: heuristics, content: design_patterns, limit: 8}
        validation: design_patterns_applied
      - integration_design → component_interactions → data_flow_specification
      - tool: create_diagram
        params: {content: system_architecture_diagram}
        validation: architecture_visualized
    gates: [architecture_defined, components_designed, patterns_applied, integration_planned, diagrams_created]

  validation_refinement:
    tools: [mcp_thinking_sequentialthinking]
    validation: design_validated_refined_optimized
    steps:
      - tool: mcp_thinking_sequentialthinking
        params: {thought_process: design_validation_analysis, total_thoughts: 5}
        validation: systematic_design_review_completed
      - requirements_validation → design_vs_requirements → alignment_verification
      - constraint_compliance → design_vs_constraints → compliance_verification
      - design_optimization → performance_maintainability_scalability → design_improvements
      - risk_assessment → potential_issues + mitigation_strategies → risk_documentation
    gates: [requirements_validated, constraints_satisfied, design_optimized, risks_assessed]

  documentation_storage:
    tools: [edit_file, mcp_cognitive_tools_arango_modify]
    validation: design_documented_stored_accessible
    steps:
      - design_documentation → comprehensive_specifications → detailed_documentation
      - implementation_guidance → step_by_step_instructions → development_roadmap
      - tool: mcp_cognitive_tools_arango_modify
        params:
          operation: insert
          collection: research_docs
          document:
            type: design_complete
            content_type: "design"
            design_name: component_system_name
            requirements: original_requirements
            design_decisions: chosen_approach_rationale
            architecture: comprehensive_design_specification
            implementation_plan: actionable_implementation_steps
            trade_offs: analyzed_pros_cons_risks
            diagrams: design_visualization_references
            created: current_time
        validation: design_stored_with_id
      - accessibility_optimization → searchable_format + future_reference → knowledge_integration
    gates: [documentation_complete, implementation_planned, design_stored, accessibility_optimized]

name: "Design Workflow v2.0"
version: "2.0"
scope: "Design solutions, architectures, and specifications. DO NOT IMPLEMENT CODE."

overview: |
  Design solutions, architectures, and specifications without implementing code.
  Focus on requirements analysis, system architecture, and implementation blueprints.

prerequisites: "Research findings or clear requirements"
outputs: ["Requirements analysis", "system architecture", "implementation blueprint"]
next_workflow: ["plan-workflow", "implement-workflow"]

workflow_transition:
  completion_validation:
    - "All three phases completed successfully"
    - "Quality checks passed for each phase"
    - "No implementation artifacts created (code files, executables, etc.)"
    - "Design outputs properly documented"

  context_handoff:
    tool: "mcp_cognitive_tools_arango_modify"
    operation: "insert"
            collection: "ide_state"
    document:
      workflow_name: "design-workflow-completed"
      design_outputs:
        requirements: "[Phase 1 outputs]"
        architecture: "[Phase 2 outputs]"
        blueprint: "[Phase 3 outputs]"
      transition_ready: true
      next_workflow: "plan-workflow|implement-workflow"

  next_steps:
    planning: "Load plan-workflow.md with design context"
    implementation: "Load implement-workflow.md with design context"

completion_statement: "DESIGN WORKFLOW COMPLETE - Implementation is a separate workflow"

quick_reference:
  design_workflow_pattern:
    - "Synthesize requirements and constraints"
    - "Architect solution and components"
    - "Blueprint implementation roadmap"
    - "Transition to planning or implementation workflow"

  remember: "Design = Specify what and how, NOT build it"
  boundary: "Stop at blueprints, start implementation in implement-workflow"
