# SYSTEM PROMPT REMINDERS FOR GPT-4.1
# - Persistence: "You are an agent - please keep going until the user's query is completely resolved, before ending your turn and yielding back to the user. Only terminate your turn when you are sure that the problem is solved."
# - Tool-calling: "If you are not sure about file content or codebase structure pertaining to the user's request, use your tools to read files and gather the relevant information: do NOT guess or make up an answer."
# - Planning/Reflection: "You MUST plan extensively before each function call, and reflect extensively on the outcomes of the previous function calls. DO NOT do this entire process by making function calls only, as this can impair your ability to solve the problem and think insightfully."
#
# These reminders must be followed at all times. All instructions in this workflow are literal and must be followed exactly as written. Do not improvise or infer intent beyond what is explicitly stated.
#
# This workflow is optimized for GPT-4.1 agentic execution. All steps must be performed autonomously, persistently, and with explicit planning and tool usage as described above.

# GPT-4.1-OPTIMIZED: Plan before each function/tool call and reflect after each call.
#
# (The following workflow is copied from generic_workflow_generation.yml and updated for GPT-4.1 best practices.)

expectation: validated_workflow_definition_documentation_profile_and_templates
completion: workflow_yaml_profile_templates_and_documentation_in_standard_locations

load_profile: .cursor/profiles/workflow_generation_agent_profile.yml

phases:
  profile_initialization:
    description: "Load and assume the workflow generation agent profile before any other steps. (GPT-4.1: Plan and reflect before/after loading profile.)"
    steps:
      - plan_before_call: "Plan what information is needed from the agent profile and why."
      - tool: read_file
        params:
          target_file: .cursor/profiles/workflow_generation_agent_profile.yml
        validation: agent_profile_loaded
      - reflect_after_call: "Reflect on the loaded profile and how it will guide subsequent steps."
    gates: [agent_profile_loaded]

  intake:
    description: "Capture the purpose, scope, and requirements for the new workflow. Skipping this step is a protocol violation. (GPT-4.1: Plan and reflect before/after each tool call.)"
    tools: [fetch_rules]
    steps:
      - plan_before_call: "Plan what information is needed from the workflow request and use case analysis."
      - intention_analysis → workflow_request → workflow_purpose_identified
      - context_capture → use_case_analysis → requirements_documented
      - reflect_after_call: "Reflect on the requirements captured and their completeness."
    gates: [workflow_purpose_identified, requirements_documented]

  research:
    description: "Perform all required research steps in strict order: web search, web scraping, tech_docs, research_papers, synthesis. After synthesizing research, the agent MUST write and save a research reference document in docs/research/[workflow_name]_research_reference.md BEFORE any user-facing output or summary. (GPT-4.1: Plan and reflect before/after each research/tool call.)"
    steps:
      - plan_before_call: "Plan the research queries and sources to target."
      - tool: mcp_web_search_brave_web_search
        params:
          query: <target domain or workflow topic>
          count: 10
        validation: sources_listed
      - reflect_after_call: "Reflect on the web search results and next research steps."
      - plan_before_call: "Plan which URLs to scrape and why."
      - tool: mcp_web_scraping_firecrawl_scrape
        params:
          url: prioritized_urls
          formats: ["markdown"]
          waitFor: 4000
        validation: top_sources_scraped
      - reflect_after_call: "Reflect on the scraped content and its relevance."
      - plan_before_call: "Plan which libraries to target in tech_docs and why."
      - tool: tech_docs
        params:
          libraries: identified_libraries
        validation: docs_retrieved
      - reflect_after_call: "Reflect on the documentation retrieved and any gaps."
      - plan_before_call: "Plan the research paper queries and rationale."
      - tool: research_papers
        params:
          query: <target domain or workflow topic>
        validation: papers_retrieved
      - reflect_after_call: "Reflect on the research papers found and their applicability."
      - synthesize_research_results → comprehensive_reference_document_created
      - plan_before_call: "Plan how to structure the research reference document using the template."
      - tool: fetch_rules
        params:
          rule_names: ["300-documentation-standards"]
        validation: documentation_standards_loaded
      - tool: read_file
        params:
          target_file: .cursor/templates/generic_research_reference_template.md
        validation: research_reference_template_loaded
      - use_loaded_template_for_research_reference_doc: "The agent MUST use the loaded research reference template as the structure and content basis for the research reference document."
      - tool: edit_file
        params:
          target_file: docs/research/[workflow_name]_research_reference.md
          code_edit: generated_research_reference_doc_based_on_template
        validation: research_reference_doc_saved
      - reflect_after_call: "Reflect on the completeness and clarity of the research reference document."
    gates: [sources_listed, top_sources_scraped, docs_retrieved_or_papers_retrieved, comprehensive_reference_document_created, documentation_standards_loaded, research_reference_template_loaded, research_reference_doc_saved]

  design:
    description: "Map out the workflow phases, steps, and validation gates. (GPT-4.1: Plan and reflect before/after each design step.)"
    tools: [fetch_rules, edit_file]
    steps:
      - plan_before_call: "Plan the mapping of workflow phases and steps."
      - workflow_mapping → phases_and_steps_defined
      - reflect_after_call: "Reflect on the defined phases and steps."
      - plan_before_call: "Plan the validation criteria and success conditions."
      - validation_criteria → gates_and_success_conditions_defined
      - reflect_after_call: "Reflect on the validation criteria and their sufficiency."
      - plan_before_call: "Plan the creation of the agent profile for the workflow."
      - create_agent_profile_for_workflow → agent_profile_created
      - reflect_after_call: "Reflect on the agent profile and its alignment with workflow needs."
    gates: [phases_defined, validation_criteria_defined, agent_profile_created]

  drafting:
    description: "Draft and save the workflow YAML, agent profile, and templates using explicit, standard locations. (GPT-4.1: Plan and reflect before/after each drafting step.)"
    tools: [edit_file]
    steps:
      - plan_before_call: "Plan how to use the workflow definition template for the new workflow."
      - tool: read_file
        params:
          target_file: .cursor/templates/generic_workflow_template.yml
        validation: workflow_template_loaded
      - reflect_after_call: "Reflect on the loaded template and its suitability."
      - plan_before_call: "Plan the generation of the workflow YAML."
      - tool: edit_file
        params:
          target_file: .cursor/workflows/[workflow_name].yml
          code_edit: generated_workflow_yaml_from_template
        validation: workflow_yaml_created
      - reflect_after_call: "Reflect on the generated workflow YAML."
      - plan_before_call: "Plan the generation of the agent profile YAML."
      - tool: edit_file
        params:
          target_file: .cursor/profiles/[workflow_name]_agent_profile.yml
          code_edit: generated_agent_profile_yaml
        validation: agent_profile_created
      - reflect_after_call: "Reflect on the generated agent profile YAML."
      - plan_before_call: "Plan the generation of the output template."
      - tool: edit_file
        params:
          target_file: .cursor/templates/[workflow_name]_output_template.yml
          code_edit: generated_output_template
        validation: output_template_created
      - reflect_after_call: "Reflect on the generated output template."
      - add_reference_to_agent_profile_in_workflow → agent_profile_referenced
      - reflect_after_call: "Reflect on the agent profile reference in the workflow."
    gates: [workflow_template_loaded, workflow_yaml_created, agent_profile_created, output_template_created, agent_profile_referenced]

  review:
    description: "Review the workflow for completeness, clarity, and standards compliance. (GPT-4.1: Plan and reflect before/after each review step.)"
    tools: [read_file, fetch_rules]
    steps:
      - plan_before_call: "Plan the review of the workflow YAML."
      - tool: read_file
        params:
          target_file: .cursor/workflows/[workflow_name].yml
        validation: workflow_reviewed
      - reflect_after_call: "Reflect on the workflow review and any issues found."
      - plan_before_call: "Plan the checklist review for compliance."
      - tool: checklist_review
        params:
          items: [phases_present, validation_gates, actionable_steps, template_used, standards_referenced]
        validation: compliance_confirmed
      - reflect_after_call: "Reflect on the compliance review and next steps."
    gates: [workflow_reviewed, compliance_confirmed]

  documentation:
    description: "Document the workflow, agent profile, and any generated templates. Save documentation in docs/standards/ as [workflow_name]_workflow.md. Commit all changes to git. (GPT-4.1: Plan and reflect before/after each documentation step.)"
    tools: [edit_file, run_terminal_cmd, fetch_rules]
    steps:
      - plan_before_call: "Plan the loading of documentation standards."
      - tool: fetch_rules
        params:
          rule_names: ["300-documentation-standards"]
        validation: documentation_standards_loaded
      - reflect_after_call: "Reflect on the loaded documentation standards."
      - plan_before_call: "Plan the generation of the workflow documentation."
      - tool: edit_file
        params:
          target_file: docs/standards/[workflow_name]_workflow.md
          code_edit: generated_workflow_doc_from_template
        validation: workflow_doc_created
      - reflect_after_call: "Reflect on the generated workflow documentation."
      - plan_before_call: "Plan the git commit for all changes."
      - tool: run_terminal_cmd
        params:
          command: "git add . && git commit -m 'Add new/updated workflow, agent profile, templates, and documentation.'"
          is_background: false
        validation: git_commit_successful
      - reflect_after_call: "Reflect on the git commit and workflow completion."
    gates: [workflow_doc_created, git_commit_successful]

failure_prevention:
  avoid:
    [unclear_purpose, missing_phases, incomplete_validation, undocumented_workflow, standards_noncompliance, vague_queries, ambiguous_paths, uncommitted_changes, skipped_steps, missing_time_call]
  require:
    [purpose_clearly_defined, phases_and_steps_mapped, validation_criteria_explicit, workflow_documented, standards_compliance, actionable_queries, explicit_paths, git_commit_successful]

success_validation:
  before_completion:
    [workflow_yaml_created, workflow_doc_created, agent_profile_created, output_template_created, compliance_confirmed, git_commit_successful]
  output_requirements: workflow_yaml_profile_templates_and_documentation_in_standard_locations

references:
  Generic_Workflow_Template: .cursor/templates/generic_workflow_template.yml
  Workflow_Generation_Agent_Profile: .cursor/profiles/workflow_generation_agent_profile.yml
  Research_Reference_Template: .cursor/templates/generic_research_reference_template.md
  Research_Reference_Doc_Location: docs/research/[workflow_name]_research_reference.md
