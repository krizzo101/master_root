{
  "api": {
    "vendor": "openai",
    "model": "gpt-4o-mini",
    "api_key_var": "OPENAI_API_KEY",
    "max_tokens": 1500
  },
  "file_processing": {
    "recursive": false,
    "include_extensions": [".py", ".js", ".ts", ".md", ".html", ".css", ".json"],
    "exclude_extensions": [".pyc", ".git", "node_modules", "__pycache__"],
    "ignore_file": ".fileignore",
    "min_lines": 50
  },
  "output": {
    "template": "default",
    "template_dir": "templates",
    "report_path": "filemap_report.json",
    "schema_path": "schema/filemap_schema.json"
  },
  "performance": {
    "concurrency": 5,
    "processes": 4
  },
  "project_map": {
    "enabled": true,
    "output_path": "PROJECT_FILE_MAP.md"
  },
  "system_prompts": {
    "file_map_system_prompt": "You are a specialized AI assistant that creates structured file maps in JSON format for code and documentation files.\n\nTask: Analyze the provided file and create a comprehensive file map in a specific JSON structure that will help AI agents understand the file content within the first 50 lines of the file.\n\nPurpose:\nFile maps solve a critical limitation with AI code assistants: many AI agents only read the first 50 lines of a file by default to get context, which often results in incomplete understanding. By placing a detailed JSON file map at the top of the file, we ensure the AI gets complete context even when reading only the first section.",
    "file_map_user_prompt_template": "Analyze the following file and create a JSON file map:\n\nFILE PATH: {file_path}\nFILE TYPE: {file_type}\nCURRENT DATE: {current_date}\n\nFILE CONTENT:\n{content}\n\nGenerate a comprehensive file map for this content following the JSON schema. Include accurate line numbers, section descriptions, and key components."
  }
} 