name: Project Mapper CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov black isort mypy
          pip install -e .

      - name: Check code formatting
        run: |
          black --check src tests
          isort --check src tests

      - name: Type checking
        run: |
          mypy src

      - name: Run unit tests
        run: |
          pytest tests/unit -v

      - name: Run integration tests
        run: |
          pytest tests/integration -v

      - name: Run e2e tests
        run: |
          pytest tests/e2e -v

      - name: Coverage report
        run: |
          pytest --cov=src/proj_mapper --cov-report=xml tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install sphinx sphinx-rtd-theme
          pip install -e .

      - name: Build docs
        run: |
          cd docs
          sphinx-build -b html . _build/html

      - name: Archive documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/_build/html

  build:
    runs-on: ubuntu-latest
    needs: [test, docs]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          python -m twine check dist/*

      - name: Archive distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
