# Autonomous Claude Agent Configuration
# Generated: 2025-08-15
# Version: 1.0.0

# Agent Configuration
agent:
  name: "autonomous-claude"
  version: "1.0.0"
  description: "Autonomous Claude agent with multi-tool orchestration"
  
  # Core settings
  core:
    max_iterations: 100
    max_retries: 3
    retry_delay: 1.0  # seconds
    timeout: 3600  # 1 hour total timeout
    checkpoint_interval: 10  # Save state every N iterations
    
  # Execution modes
  modes:
    autonomous: true
    interactive: false
    debug: false
    dry_run: false
    
  # Behavioral settings
  behavior:
    auto_recover: true
    auto_rollback: true
    auto_test: true
    auto_commit: false
    parallel_execution: true
    progressive_loading: true
    
# LLM Provider Configuration
llm:
  default_provider: "anthropic"
  
  providers:
    anthropic:
      api_key: "${ANTHROPIC_API_KEY}"
      model: "claude-3-opus-20240229"
      max_tokens: 4096
      temperature: 0.7
      timeout: 60
      retry_attempts: 3
      rate_limit:
        requests_per_minute: 50
        tokens_per_minute: 100000
        
    openai:
      api_key: "${OPENAI_API_KEY}"
      model: "gpt-4-turbo-preview"
      max_tokens: 4096
      temperature: 0.7
      timeout: 60
      
    local:
      endpoint: "http://localhost:11434"
      model: "llama3:latest"
      max_tokens: 2048
      
# Tool Configuration
tools:
  enabled:
    - file_operations
    - code_execution
    - web_search
    - git_operations
    - database_operations
    - mcp_tools
    
  mcp:
    servers:
      - name: "claude-code"
        enabled: true
      - name: "firecrawl"
        enabled: true
      - name: "git"
        enabled: true
      - name: "research_papers"
        enabled: true
      - name: "time"
        enabled: true
      - name: "shell_exec"
        enabled: true
      - name: "tech_docs"
        enabled: true
        
  file_operations:
    max_file_size: 10485760  # 10MB
    allowed_extensions:
      - ".py"
      - ".js"
      - ".ts"
      - ".json"
      - ".yaml"
      - ".yml"
      - ".txt"
      - ".md"
      - ".sh"
      - ".sql"
      
  code_execution:
    enabled: true
    sandbox: true
    timeout: 30
    max_memory: "512M"
    
  web_search:
    enabled: true
    max_results: 10
    cache_duration: 3600
    
# Memory and Context Management
memory:
  type: "hybrid"  # local, redis, hybrid
  
  local:
    max_size: "1GB"
    ttl: 86400  # 24 hours
    
  redis:
    host: "${REDIS_HOST:-localhost}"
    port: 6379
    db: 0
    password: "${REDIS_PASSWORD}"
    
  vector_store:
    enabled: true
    provider: "chroma"
    dimension: 1536
    collection: "agent_memory"
    
  context:
    max_tokens: 100000
    compression_threshold: 0.7
    summarization_enabled: true
    
# Orchestration Configuration
orchestration:
  strategy: "dynamic"  # static, dynamic, adaptive
  
  parallel:
    max_workers: 10
    queue_size: 100
    
  pipeline:
    enabled: true
    max_depth: 5
    
  delegation:
    enabled: true
    max_agents: 5
    
  coordination:
    method: "message_passing"  # shared_memory, message_passing, hybrid
    
# Monitoring and Logging
monitoring:
  enabled: true
  
  metrics:
    enabled: true
    export_interval: 60
    retention: 604800  # 7 days
    
  logging:
    level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    format: "json"
    file: "logs/agent.log"
    max_size: "100MB"
    max_files: 10
    
  tracing:
    enabled: true
    provider: "opentelemetry"
    endpoint: "${OTEL_ENDPOINT}"
    
  alerts:
    enabled: true
    channels:
      - type: "email"
        enabled: false
      - type: "webhook"
        enabled: true
        url: "${ALERT_WEBHOOK_URL}"
        
# Security Configuration
security:
  authentication:
    enabled: true
    method: "api_key"  # api_key, oauth2, jwt
    
  authorization:
    enabled: true
    rbac: true
    
  encryption:
    at_rest: true
    in_transit: true
    algorithm: "AES-256-GCM"
    
  audit:
    enabled: true
    log_all_actions: true
    retention: 2592000  # 30 days
    
  sandboxing:
    enabled: true
    container: "docker"
    network_isolation: true
    
# Performance Optimization
performance:
  caching:
    enabled: true
    ttl: 3600
    max_size: "500MB"
    
  batching:
    enabled: true
    batch_size: 10
    timeout: 5
    
  compression:
    enabled: true
    algorithm: "gzip"
    level: 6
    
  indexing:
    enabled: true
    update_interval: 300
    
# Deployment Configuration
deployment:
  environment: "${ENVIRONMENT:-development}"
  
  development:
    debug: true
    hot_reload: true
    
  staging:
    debug: false
    monitoring: true
    
  production:
    debug: false
    monitoring: true
    high_availability: true
    auto_scaling: true
    
# Feature Flags
features:
  experimental:
    chain_of_thought: true
    self_reflection: true
    meta_learning: true
    
  beta:
    multi_modal: false
    voice_interface: false
    
  stable:
    file_operations: true
    code_generation: true
    web_search: true