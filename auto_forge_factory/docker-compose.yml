version: '3.8'

services:
  auto-forge-factory:
    build: .
    container_name: auto-forge-factory
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_JOBS=10
      - MAX_AGENTS_PER_JOB=8
    volumes:
      - ./artifacts:/app/artifacts
      - ./logs:/app/logs
      - ./temp:/app/temp
    depends_on:
      - redis
      - postgres
    networks:
      - auto-forge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: auto-forge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auto-forge-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: auto-forge-postgres
    environment:
      - POSTGRES_DB=auto_forge
      - POSTGRES_USER=auto_forge_user
      - POSTGRES_PASSWORD=auto_forge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auto-forge-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: auto-forge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - auto-forge-factory
    networks:
      - auto-forge-network
    restart: unless-stopped

  monitoring:
    image: prom/prometheus:latest
    container_name: auto-forge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - auto-forge-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: auto-forge-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - auto-forge-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  auto-forge-network:
    driver: bridge
