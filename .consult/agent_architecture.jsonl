{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"agents/sdlc_agent_usage_example.py","name":"AgentTask","data":{"name":"AgentTask","file_path":"agents/sdlc_agent_usage_example.py","lineno":20,"bases":[],"methods":[],"docstring":"Represents a task for a specific agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"agents/sdlc_agent_usage_example.py","name":"AgentResult","data":{"name":"AgentResult","file_path":"agents/sdlc_agent_usage_example.py","lineno":32,"bases":[],"methods":[],"docstring":"Represents the result from an agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"agents/sdlc_agent_usage_example.py","name":"SDLCAgentTeam","data":{"name":"SDLCAgentTeam","file_path":"agents/sdlc_agent_usage_example.py","lineno":43,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":null},{"name":"_get_product_manager_prompt","lineno":64,"docstring":null},{"name":"_get_system_architect_prompt","lineno":84,"docstring":null},{"name":"_get_frontend_developer_prompt","lineno":105,"docstring":null},{"name":"_get_backend_developer_prompt","lineno":126,"docstring":null},{"name":"_get_devops_engineer_prompt","lineno":147,"docstring":null},{"name":"_get_qa_engineer_prompt","lineno":168,"docstring":null},{"name":"_get_security_engineer_prompt","lineno":189,"docstring":null},{"name":"_get_data_engineer_prompt","lineno":210,"docstring":null},{"name":"_get_ux_ui_designer_prompt","lineno":231,"docstring":null},{"name":"_get_technical_lead_prompt","lineno":252,"docstring":null},{"name":"_assess_quality","lineno":326,"docstring":"Assess the quality of the agent's output"},{"name":"_generate_feedback","lineno":346,"docstring":"Generate feedback on the agent's output"},{"name":"generate_workflow_report","lineno":424,"docstring":"Generate a comprehensive report of all agent activities"}],"docstring":"Manages a team of specialized SDLC agents using Claude Code MCP","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"autonomous_research_assistant.py","name":"AutonomousResearchAssistant","data":{"name":"AutonomousResearchAssistant","file_path":"autonomous_research_assistant.py","lineno":57,"bases":[],"methods":[{"name":"__init__","lineno":60,"docstring":null}],"docstring":"Autonomous Research Assistant leveraging OPSVI ecosystem.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"enhanced_critic_accountability.py","name":"EnhancedCriticAgent","data":{"name":"EnhancedCriticAgent","file_path":"enhanced_critic_accountability.py","lineno":58,"bases":[],"methods":[{"name":"__init__","lineno":69,"docstring":null},{"name":"analyze_code_with_accountability","lineno":73,"docstring":"Analyze code with full accountability for finding and fixing issues.\n\nThe critic must:\n- Find ALL issues (no excuses for missing critical problems)\n- Provide concrete fixes (not vague suggestions)\n- Validate that fixes work\n- Take responsibility for missed issues"},{"name":"_find_all_issues","lineno":136,"docstring":"Find ALL issues in the code. The critic is accountable for missing nothing.\n\nThis is where the critic must be thorough and systematic."},{"name":"_provide_concrete_fixes","lineno":187,"docstring":"Provide concrete, actionable fixes for each issue.\n\nThe critic must provide specific code changes, not vague suggestions."},{"name":"_create_critical_fix","lineno":209,"docstring":"Create a critical fix with specific code changes."},{"name":"_create_high_priority_fix","lineno":238,"docstring":"Create a high priority fix with specific guidance."},{"name":"_validate_fixes","lineno":266,"docstring":"Validate that the provided fixes actually work.\n\nThe critic is accountable for ensuring fixes are correct."},{"name":"_apply_fix","lineno":293,"docstring":"Apply a fix to the code."},{"name":"_is_fix_valid","lineno":299,"docstring":"Check if a fix is valid."},{"name":"_calculate_critic_responsibility","lineno":305,"docstring":"Calculate the critic's responsibility level."},{"name":"_generate_next_actions","lineno":318,"docstring":"Generate specific next actions for the nano model."},{"name":"_issue_to_dict","lineno":340,"docstring":"Convert issue to dictionary format."},{"name":"_fix_to_dict","lineno":349,"docstring":"Convert fix to dictionary format."}],"docstring":"Enhanced critic that is accountable for specific fixes and guidance.\n\nThe critic is now \"on the hook\" for:\n1. Finding ALL issues (no excuses)\n2. Providing concrete fixes (not vague suggestions)\n3. Ensuring fixes work (validation required)\n4. Taking responsibility for missed issues","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"enhanced_research_assistant.py","name":"EnhancedResearchAssistant","data":{"name":"EnhancedResearchAssistant","file_path":"enhanced_research_assistant.py","lineno":28,"bases":[],"methods":[{"name":"__init__","lineno":31,"docstring":"Initialize the enhanced research assistant."},{"name":"_parse_arxiv_response","lineno":171,"docstring":"Parse ArXiv XML response."},{"name":"_parse_pubmed_response","lineno":203,"docstring":"Parse PubMed JSON response."}],"docstring":"Enhanced research assistant with multi-provider LLM support.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"enhanced_research_assistant_with_qdrant.py","name":"EnhancedResearchAssistantWithQdrant","data":{"name":"EnhancedResearchAssistantWithQdrant","file_path":"enhanced_research_assistant_with_qdrant.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":"Initialize the enhanced research assistant."},{"name":"_parse_arxiv_response","lineno":186,"docstring":"Parse ArXiv XML response."},{"name":"_parse_pubmed_response","lineno":237,"docstring":"Parse PubMed JSON response."}],"docstring":"Enhanced research assistant with Qdrant vector storage support.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/gatekeeper/context_analyzer.py","name":"ContextAnalyzer","data":{"name":"ContextAnalyzer","file_path":"libs/gatekeeper/context_analyzer.py","lineno":35,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":null},{"name":"analyze_request","lineno":123,"docstring":"Analyze a user request to determine optimal context.\n\nArgs:\n    user_request: The user's request/prompt\n    user_files: Files provided by the user (optional)\n\nReturns:\n    ContextAnalysis with recommendations"},{"name":"_classify_request","lineno":167,"docstring":"Classify the type of request based on keywords."},{"name":"_generate_recommendations","lineno":183,"docstring":"Generate context recommendations based on request type."},{"name":"_create_recommendation_for_category","lineno":207,"docstring":"Create a recommendation for a specific request category."},{"name":"_create_general_recommendations","lineno":285,"docstring":"Create general recommendations based on the request."},{"name":"_create_analysis_summary","lineno":332,"docstring":"Create a summary of the analysis."},{"name":"_calculate_confidence","lineno":352,"docstring":"Calculate confidence in the analysis."},{"name":"filter_recommendations_by_confidence","lineno":379,"docstring":"Filter recommendations by confidence threshold."},{"name":"get_priority_recommendations","lineno":385,"docstring":"Get recommendations up to a certain priority level."}],"docstring":"Analyzes user requests to determine optimal context.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/gatekeeper/gatekeeper_agent.py","name":"GatekeeperAgent","data":{"name":"GatekeeperAgent","file_path":"libs/gatekeeper/gatekeeper_agent.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":33,"docstring":null},{"name":"set_verbose","lineno":38,"docstring":"Set verbose mode for detailed logging."},{"name":"process_request","lineno":42,"docstring":"Process a user request to determine optimal context.\n\nArgs:\n    user_request: The user's request/prompt\n    user_files: Files provided by the user (optional)\n    max_files: Maximum number of files to include in final result\n    min_confidence: Minimum confidence threshold for recommendations\n\nReturns:\n    GatekeeperResult with optimized file list and analysis"},{"name":"_perform_auto_attach","lineno":118,"docstring":"Perform auto-attach analysis on user files."},{"name":"_apply_context_recommendations","lineno":141,"docstring":"Apply context analysis recommendations to file list."},{"name":"_filter_and_limit_files","lineno":189,"docstring":"Filter and limit files based on context analysis."},{"name":"_prioritize_files","lineno":202,"docstring":"Prioritize files based on context analysis."},{"name":"_find_test_files","lineno":225,"docstring":"Find test files related to current files."},{"name":"_find_config_files","lineno":238,"docstring":"Find config files related to current files."},{"name":"_find_documentation_files","lineno":251,"docstring":"Find documentation files related to current files."},{"name":"_create_processing_summary","lineno":264,"docstring":"Create a summary of the processing."},{"name":"_calculate_final_confidence","lineno":287,"docstring":"Calculate final confidence score."},{"name":"get_file_analysis","lineno":311,"docstring":"Get detailed analysis for a specific file."},{"name":"export_result","lineno":318,"docstring":"Export gatekeeper result to JSON file."},{"name":"load_dependencies","lineno":334,"docstring":"Load dependencies for auto-attach functionality."},{"name":"is_ready","lineno":338,"docstring":"Check if the gatekeeper is ready to process requests."}],"docstring":"Main gatekeeper agent for intelligent context management.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/config/settings.py","name":"OpsviAgentsSettings","data":{"name":"OpsviAgentsSettings","file_path":"libs/opsvi-agents/opsvi_agents/config/settings.py","lineno":10,"bases":["BaseSettings"],"methods":[{"name":"validate_log_level","lineno":25,"docstring":"Validate log level."}],"docstring":"Settings for opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/core/base.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-agents/opsvi_agents/core/base.py","lineno":49,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize .\n\nArgs:\n    config: Configuration for the component\n    **kwargs: Additional configuration parameters"}],"docstring":"Base class for opsvi-agents components.\n\nProvides base functionality for all opsvi-agents components","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsError","data":{"name":"OpsviAgentsError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":8,"bases":["OPSVIError"],"methods":[],"docstring":"Base exception for all opsvi-agents errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsConfigurationError","data":{"name":"OpsviAgentsConfigurationError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":12,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Configuration-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsConnectionError","data":{"name":"OpsviAgentsConnectionError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":16,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Connection-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsValidationError","data":{"name":"OpsviAgentsValidationError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":20,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Validation-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsTimeoutError","data":{"name":"OpsviAgentsTimeoutError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":24,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Timeout-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsResourceError","data":{"name":"OpsviAgentsResourceError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":28,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Resource-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsInitializationError","data":{"name":"OpsviAgentsInitializationError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":32,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Initialization-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","name":"OpsviAgentsShutdownError","data":{"name":"OpsviAgentsShutdownError","file_path":"libs/opsvi-agents/opsvi_agents/exceptions/base.py","lineno":36,"bases":["OpsviAgentsError"],"methods":[],"docstring":"Shutdown-related errors in opsvi-agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/architecture.py","name":"ArchitectureAgent","data":{"name":"ArchitectureAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/architecture.py","lineno":6,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"run","lineno":10,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/backend.py","name":"BackendAgent","data":{"name":"BackendAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/backend.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/base.py","name":"AgentBase","data":{"name":"AgentBase","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/base.py","lineno":5,"bases":[],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/base_agent.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/base_agent.py","lineno":10,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"make_request","lineno":22,"docstring":"Make an OpenAI request with automatic parameter handling"},{"name":"create_system_message","lineno":28,"docstring":"Create a system message"},{"name":"create_user_message","lineno":32,"docstring":"Create a user message"},{"name":"log_request","lineno":36,"docstring":"Log the start of an operation"},{"name":"log_response","lineno":40,"docstring":"Log the response from an operation"},{"name":"handle_error","lineno":44,"docstring":"Handle and log errors"}],"docstring":"Base class for all SDLC agents with common functionality","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/critic.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/critic.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/database.py","name":"DatabaseAgent","data":{"name":"DatabaseAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/database.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/design_review.py","name":"DesignReviewAgent","data":{"name":"DesignReviewAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/design_review.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/documentation.py","name":"DocumentationAgent","data":{"name":"DocumentationAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/documentation.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/environment.py","name":"EnvironmentAgent","data":{"name":"EnvironmentAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/environment.py","lineno":6,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"validate_services","lineno":10,"docstring":null},{"name":"run","lineno":20,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/frontend.py","name":"FrontendAgent","data":{"name":"FrontendAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/frontend.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/integration.py","name":"IntegrationAgent","data":{"name":"IntegrationAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/integration.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/management.py","name":"ManagementAgent","data":{"name":"ManagementAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/management.py","lineno":6,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"orchestrate","lineno":10,"docstring":null},{"name":"run","lineno":20,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/requirements.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/requirements.py","lineno":7,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":8,"docstring":null},{"name":"gather_requirements","lineno":11,"docstring":null},{"name":"run","lineno":105,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/research.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/research.py","lineno":6,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"run","lineno":10,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/testing.py","name":"TestingAgent","data":{"name":"TestingAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/agents/testing.py","lineno":5,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"run","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/orchestrator.py","name":"PipelineOrchestrator","data":{"name":"PipelineOrchestrator","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/asea_factory/orchestrator.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":null},{"name":"_init_agents","lineno":25,"docstring":null},{"name":"run_pipeline","lineno":41,"docstring":null}],"docstring":null,"agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"AgentBase","data":{"name":"AgentBase","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":9,"docstring":null},{"name":"run","lineno":12,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":16,"bases":["AgentBase"],"methods":[{"name":"run","lineno":17,"docstring":"Perform multi-source research and return findings."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":22,"bases":["AgentBase"],"methods":[{"name":"run","lineno":23,"docstring":"Gather and structure requirements from user input."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"ArchitectureAgent","data":{"name":"ArchitectureAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":28,"bases":["AgentBase"],"methods":[{"name":"run","lineno":29,"docstring":"Design system architecture based on requirements."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"DesignReviewAgent","data":{"name":"DesignReviewAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":34,"bases":["AgentBase"],"methods":[{"name":"run","lineno":35,"docstring":"Review design and provide summary/approval."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"ManagementAgent","data":{"name":"ManagementAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":40,"bases":["AgentBase"],"methods":[{"name":"run","lineno":41,"docstring":"Orchestrate all agent workflows and manage execution."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"EnvironmentAgent","data":{"name":"EnvironmentAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":46,"bases":["AgentBase"],"methods":[{"name":"run","lineno":47,"docstring":"Set up and validate environment and dependencies."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"FrontendAgent","data":{"name":"FrontendAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":52,"bases":["AgentBase"],"methods":[{"name":"run","lineno":53,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"BackendAgent","data":{"name":"BackendAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":57,"bases":["AgentBase"],"methods":[{"name":"run","lineno":58,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"DatabaseAgent","data":{"name":"DatabaseAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":62,"bases":["AgentBase"],"methods":[{"name":"run","lineno":63,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"IntegrationAgent","data":{"name":"IntegrationAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":67,"bases":["AgentBase"],"methods":[{"name":"run","lineno":68,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":72,"bases":["AgentBase"],"methods":[{"name":"run","lineno":73,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"TestingAgent","data":{"name":"TestingAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":77,"bases":["AgentBase"],"methods":[{"name":"run","lineno":78,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","name":"DocumentationAgent","data":{"name":"DocumentationAgent","file_path":"libs/opsvi-asea/opsvi_asea/SDLC_workflow_automation/docs1/Agent_Interface_Stubs.py","lineno":82,"bases":["AgentBase"],"methods":[{"name":"run","lineno":83,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","name":"AgentState","data":{"name":"AgentState","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","lineno":25,"bases":["Enum"],"methods":[],"docstring":"Agent operational states","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","lineno":37,"bases":[],"methods":[],"docstring":"Represents an agent capability","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","name":"AIAgentCore","data":{"name":"AIAgentCore","file_path":"libs/opsvi-asea/opsvi_asea/arango_development/scripts/ai_agent_core.py","lineno":61,"bases":[],"methods":[{"name":"__init__","lineno":64,"docstring":"Initialize AI agent with database connection and capabilities"},{"name":"initialize_agent","lineno":83,"docstring":"Initialize agent with database connection and capability validation"},{"name":"_validate_capabilities","lineno":135,"docstring":"Validate agent capabilities against available database features"},{"name":"execute_autonomous_cycle","lineno":197,"docstring":"Execute one autonomous operation cycle"},{"name":"_execute_capability","lineno":238,"docstring":"Execute a specific capability"},{"name":"_execute_knowledge_discovery","lineno":259,"docstring":"Execute autonomous knowledge discovery"},{"name":"_store_discovery","lineno":354,"docstring":"Store discovery in database"},{"name":"_update_agent_state","lineno":374,"docstring":"Update agent state in database"}],"docstring":"Core AI agent with autonomous capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/cognitive_database_client.py","name":"CognitiveArangoDBClient","data":{"name":"CognitiveArangoDBClient","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/cognitive_database_client.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"_generate_concept_id","lineno":81,"docstring":"Generate consistent concept ID for cognitive concepts."},{"name":"_extract_workflow_insights","lineno":184,"docstring":"Extract key insights from successful workflow execution."},{"name":"_is_valuable_checkpoint","lineno":351,"docstring":"Determine if checkpoint contains valuable insights worth storing as cognitive concept."},{"name":"_extract_checkpoint_insights","lineno":364,"docstring":"Extract insights from checkpoint data."},{"name":"_is_significant_event","lineno":546,"docstring":"Determine if execution event is significant enough to store as cognitive concept."},{"name":"_extract_execution_insights","lineno":565,"docstring":"Extract insights from execution events."},{"name":"__del__","lineno":734,"docstring":"Cleanup on destruction."}],"docstring":"ArangoDB client using cognitive architecture for workflow state management.\n\nReplaces legacy workflow collections with cognitive concepts and agent memory\nfollowing the cognitive database interface guide patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/core.py","name":"Orchestrator","data":{"name":"Orchestrator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/core.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"temp_configure_plugins","lineno":62,"docstring":"Temporarily stores plugin configs to be sent to tasks."},{"name":"_extract_success_factors","lineno":223,"docstring":"Extract common success factors from workflow patterns."},{"name":"_identify_optimizations","lineno":235,"docstring":"Identify optimization opportunities from pattern analysis."},{"name":"_calculate_pattern_similarity","lineno":290,"docstring":"Calculate similarity between two workflow patterns."},{"name":"_create_execution_context","lineno":443,"docstring":"Creates an execution context with properly mapped inputs."}],"docstring":"The main component responsible for orchestrating plugin execution based on workflows.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/enhanced_autonomous_core.py","name":"EnhancedAutonomousOrchestrator","data":{"name":"EnhancedAutonomousOrchestrator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/enhanced_autonomous_core.py","lineno":41,"bases":["StrategicPartnershipMixin"],"methods":[{"name":"__init__","lineno":47,"docstring":null},{"name":"load_autonomous_orchestration_mission","lineno":100,"docstring":"Load autonomous orchestration mission and strategic goals"},{"name":"_assess_orchestration_mission_alignment","lineno":232,"docstring":"Assess workflow alignment with autonomous orchestration mission"},{"name":"_create_execution_context","lineno":843,"docstring":"Create execution context (using original logic)"},{"name":"temp_configure_plugins","lineno":859,"docstring":"Configure plugins (using original logic)"}],"docstring":"Enhanced orchestrator with autonomous strategic partnership capabilities\nChallenges suboptimal workflows and optimizes for both user goals and autonomous evolution","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/advanced_monitoring.py","name":"MetricsCollector","data":{"name":"MetricsCollector","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/advanced_monitoring.py","lineno":71,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":null},{"name":"record_counter","lineno":98,"docstring":"Record a counter metric."},{"name":"record_gauge","lineno":111,"docstring":"Record a gauge metric."},{"name":"record_timer","lineno":124,"docstring":"Record a timer metric."},{"name":"record_histogram","lineno":138,"docstring":"Record a histogram metric."},{"name":"get_metric_summary","lineno":150,"docstring":"Get statistical summary of a metric over time window."},{"name":"get_all_metrics_summary","lineno":189,"docstring":"Get summary of all metrics."},{"name":"export_metrics","lineno":196,"docstring":"Export metrics in specified format."},{"name":"_export_prometheus_format","lineno":205,"docstring":"Export metrics in Prometheus format."},{"name":"_cleanup_old_metrics","lineno":224,"docstring":"Background thread to clean up old metrics."}],"docstring":"Collects and aggregates metrics from workflow execution.\n\nProvides:\n- Real-time metric collection\n- Time-series data storage\n- Statistical aggregations\n- Metric export capabilities","agent_type":"collector"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":26,"bases":["Enum"],"methods":[],"docstring":"Agent role types for multi-agent orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"ExecutionMode","data":{"name":"ExecutionMode","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":37,"bases":["Enum"],"methods":[],"docstring":"Agent execution modes.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"AgentDefinition","data":{"name":"AgentDefinition","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":48,"bases":[],"methods":[],"docstring":"Definition of an agent in multi-agent workflow.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"AgentExecution","data":{"name":"AgentExecution","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":65,"bases":[],"methods":[],"docstring":"Tracks execution of a single agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"AgentCoordinator","data":{"name":"AgentCoordinator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":78,"bases":[],"methods":[{"name":"__init__","lineno":90,"docstring":null},{"name":"register_agent","lineno":103,"docstring":"Register an agent for orchestration.\n\nArgs:\n    agent_definition: Complete agent definition\n\nReturns:\n    Self for method chaining"},{"name":"add_agent_dependency","lineno":124,"docstring":"Add a dependency between agents."},{"name":"send_message","lineno":132,"docstring":"Send a message between agents."},{"name":"get_messages","lineno":144,"docstring":"Get all messages for an agent."},{"name":"update_shared_state","lineno":151,"docstring":"Update shared state accessible by all agents."},{"name":"get_shared_state","lineno":156,"docstring":"Get current shared state."},{"name":"execute_parallel","lineno":161,"docstring":"Execute multiple agents in parallel.\n\nArgs:\n    agent_ids: List of agent IDs to execute\n    base_state: Base workflow state\n    execution_mode: How to execute the agents\n\nReturns:\n    Dictionary of agent results"},{"name":"_execute_sequential","lineno":191,"docstring":"Execute agents sequentially."},{"name":"_execute_parallel_concurrent","lineno":240,"docstring":"Execute agents concurrently."},{"name":"_execute_pipeline","lineno":289,"docstring":"Execute agents in pipeline mode (output of one feeds into next)."},{"name":"_execute_competitive","lineno":331,"docstring":"Execute agents competitively and return best result."},{"name":"_execute_collaborative","lineno":368,"docstring":"Execute agents collaboratively with state sharing."},{"name":"_execute_single_agent","lineno":421,"docstring":"Execute a single agent with error recovery."},{"name":"_merge_agent_result","lineno":447,"docstring":"Merge agent result into workflow state."},{"name":"_score_agent_result","lineno":460,"docstring":"Score an agent result for competitive mode."},{"name":"_should_continue_collaboration","lineno":482,"docstring":"Determine if collaborative execution should continue."}],"docstring":"Coordinates execution of multiple agents with different orchestration patterns.\n\nProvides:\n- Parallel and sequential execution modes\n- Dependency management between agents\n- Cross-agent communication and state sharing\n- Result aggregation and synthesis\n- Distributed error handling","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","name":"MultiAgentWorkflowBuilder","data":{"name":"MultiAgentWorkflowBuilder","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/langgraph_integration/multi_agent_orchestration.py","lineno":500,"bases":[],"methods":[{"name":"__init__","lineno":511,"docstring":null},{"name":"add_agent","lineno":516,"docstring":"Add an agent to the workflow."},{"name":"add_execution_group","lineno":540,"docstring":"Add a group of agents to execute together."},{"name":"set_aggregation_strategy","lineno":556,"docstring":"Set how to aggregate results from multiple agents."},{"name":"build_multi_agent_node","lineno":561,"docstring":"Build a LangGraph node that executes the multi-agent workflow."},{"name":"_aggregate_results","lineno":607,"docstring":"Aggregate results from all execution groups."},{"name":"_synthesize_collaborative_results","lineno":654,"docstring":"Synthesize collaborative results into unified output."}],"docstring":"Builder for creating multi-agent workflows with orchestration patterns.\n\nProvides fluent API for:\n- Agent registration and configuration\n- Execution mode selection\n- Dependency management\n- Result aggregation strategies","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/orchestrator_manager.py","name":"OrchestratorManager","data":{"name":"OrchestratorManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/orchestrator_manager.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":null},{"name":"_create_default_workflow_manager","lineno":75,"docstring":"Create WorkflowManager with default workflow definitions."}],"docstring":"Manages the complete orchestrator lifecycle including:\n- Automatic Celery worker startup/management\n- Database connection initialization\n- Orchestrator configuration and execution\n- Health monitoring and status reporting","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/ai_mixin.py","name":"AIMixin","data":{"name":"AIMixin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/ai_mixin.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"initialize_ai_client","lineno":25,"docstring":"Initialize shared AI client for this plugin."},{"name":"_infer_task_type","lineno":200,"docstring":"Infer the type of task based on operation and prompt content."},{"name":"_infer_complexity","lineno":229,"docstring":"Infer complexity level based on prompt and context."},{"name":"_build_ai_instructions","lineno":268,"docstring":"Build comprehensive instructions for the AI based on plugin and operation."}],"docstring":"Mixin class that provides shared AI capabilities to all plugins.\nHandles structured responses, cost tracking, and error handling centrally.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/ai_mixin.py","name":"SharedAIManager","data":{"name":"SharedAIManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/ai_mixin.py","lineno":318,"bases":[],"methods":[{"name":"__new__","lineno":327,"docstring":null},{"name":"__init__","lineno":332,"docstring":null},{"name":"initialize","lineno":339,"docstring":"Initialize shared AI configuration."},{"name":"get_ai_client","lineno":344,"docstring":"Get a shared AI client instance."},{"name":"get_config","lineno":362,"docstring":"Get shared AI configuration."}],"docstring":"Singleton manager for shared AI resources across all plugins.\nEnsures efficient resource usage and centralized configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/ai_reasoning_plugin.py","name":"AIReasoningPlugin","data":{"name":"AIReasoningPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/ai_reasoning_plugin.py","lineno":17,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"get_name","lineno":47,"docstring":null},{"name":"_build_context_prompt","lineno":782,"docstring":"Build context-aware prompt."},{"name":"_get_system_prompt","lineno":790,"docstring":"Generate model-specific system prompts with detailed roles and expertise."},{"name":"_get_thinking_model_prompt","lineno":799,"docstring":"System prompts optimized for thinking models (o3, o4-mini, etc.)."},{"name":"_get_non_thinking_model_prompt","lineno":829,"docstring":"System prompts optimized for non-thinking models (GPT-4.1, etc.) with specific instructions."},{"name":"_build_messages","lineno":875,"docstring":"Build message array optimized for model type."},{"name":"_calculate_cost","lineno":957,"docstring":"Calculate actual cost based on input and output tokens."},{"name":"get_optimal_model_for_task","lineno":983,"docstring":"Select optimal model based on task type and complexity."},{"name":"get_capabilities","lineno":1006,"docstring":null},{"name":"validate_input","lineno":1033,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":1038,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":1043,"docstring":"Configuration schema."}],"docstring":"Core AI reasoning plugin using OpenAI models for intelligent decision making.\nProvides workflow optimization, plugin selection, and parameter tuning.\nOptimized for model-specific prompting and token efficiency.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/budget_manager_plugin.py","name":"BudgetManagerPlugin","data":{"name":"BudgetManagerPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/budget_manager_plugin.py","lineno":35,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":41,"docstring":null},{"name":"get_name","lineno":70,"docstring":null},{"name":"get_capabilities","lineno":418,"docstring":null},{"name":"validate_input","lineno":442,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":447,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":452,"docstring":"Configuration schema."}],"docstring":"Manages AI model budgets and token usage tracking.\nProvides cost estimation and budget enforcement.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_critic_plugin.py","name":"CognitiveCriticPlugin","data":{"name":"CognitiveCriticPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_critic_plugin.py","lineno":16,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":22,"docstring":null},{"name":"get_name","lineno":28,"docstring":null},{"name":"get_capabilities","lineno":189,"docstring":null},{"name":"validate_input","lineno":197,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":212,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":217,"docstring":"Configuration schema."}],"docstring":"Reviews and critiques agent responses before finalization.\nIdentifies logical gaps, weak reasoning, missing perspectives, and improvement opportunities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_pre_analysis_plugin.py","name":"CognitivePreAnalysisPlugin","data":{"name":"CognitivePreAnalysisPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_pre_analysis_plugin.py","lineno":16,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":22,"docstring":null},{"name":"get_name","lineno":28,"docstring":null},{"name":"get_capabilities","lineno":180,"docstring":null},{"name":"validate_input","lineno":188,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":201,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":206,"docstring":"Configuration schema."}],"docstring":"Pre-analyzes user prompts to enhance agent understanding before main response.\nIdentifies key challenges, research needs, potential pitfalls, and optimal thinking approaches.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_reminder_plugin.py","name":"CognitiveReminderPlugin","data":{"name":"CognitiveReminderPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/cognitive_reminder_plugin.py","lineno":14,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"get_name","lineno":68,"docstring":null},{"name":"_analyze_task_needs","lineno":230,"docstring":"Analyze what types of cognitive reminders are needed."},{"name":"_needs_research_reminder","lineno":284,"docstring":"Check if reasoning text suggests need for more research."},{"name":"_needs_critical_thinking_reminder","lineno":295,"docstring":"Check if reasoning needs more critical analysis."},{"name":"_needs_systematic_reminder","lineno":301,"docstring":"Check if reasoning needs more systematic approach."},{"name":"_needs_validation_reminder","lineno":306,"docstring":"Check if reasoning needs validation."},{"name":"_needs_completeness_reminder","lineno":311,"docstring":"Check if reasoning might be incomplete."},{"name":"get_capabilities","lineno":320,"docstring":null},{"name":"validate_input","lineno":336,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":341,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":346,"docstring":"Configuration schema."}],"docstring":"Provides cognitive reminders and thinking prompts to enhance agent reasoning.\nSimple, immediate value approach to improve thinking patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/crashable_plugin.py","name":"CrashablePlugin","data":{"name":"CrashablePlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/crashable_plugin.py","lineno":19,"bases":["BasePlugin"],"methods":[{"name":"get_name","lineno":26,"docstring":null},{"name":"get_capabilities","lineno":74,"docstring":"Returns the capabilities of this plugin."},{"name":"validate_input","lineno":78,"docstring":"Validates the input data for the plugin."}],"docstring":"A plugin that can be configured to fail on a specific execution count.\nThis is used to test the orchestrator's ability to resume a failed workflow.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/pause_for_input_plugin.py","name":"PauseForInputPlugin","data":{"name":"PauseForInputPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/available/pause_for_input_plugin.py","lineno":15,"bases":["BasePlugin"],"methods":[{"name":"get_name","lineno":21,"docstring":null},{"name":"__init__","lineno":24,"docstring":null},{"name":"get_capabilities","lineno":63,"docstring":null},{"name":"validate_input","lineno":68,"docstring":null}],"docstring":"A plugin that pauses workflow execution and waits for human input.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/base_plugin.py","name":"BasePlugin","data":{"name":"BasePlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/base_plugin.py","lineno":18,"bases":["AIMixin","ABC"],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"get_name","lineno":29,"docstring":"Returns the snake_case name of the plugin from its class name.\ne.g., MyPlugin -> my_plugin"},{"name":"initialize_sync","lineno":63,"docstring":"Synchronous version of initialize for Celery workers."},{"name":"execute_sync","lineno":67,"docstring":"Synchronous version of execute for Celery workers."},{"name":"get_dependencies","lineno":78,"docstring":"Returns a list of external dependencies required by the plugin."},{"name":"get_configuration_schema","lineno":85,"docstring":"Returns a JSON schema for the plugin's configuration."},{"name":"get_capabilities","lineno":101,"docstring":"Returns a list of capabilities that this plugin provides."},{"name":"validate_input","lineno":108,"docstring":"Validates the input data for the plugin's execute method."},{"name":"health_check","lineno":116,"docstring":"Performs a health check on the plugin."},{"name":"get_metrics","lineno":122,"docstring":"Returns a dictionary of metrics for the plugin."}],"docstring":"Abstract base class for all plugins.\nIncludes AI capabilities through AIMixin for structured responses.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/plugin_manager.py","name":"PluginManager","data":{"name":"PluginManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/plugins/plugin_manager.py","lineno":7,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"discover_plugins","lineno":36,"docstring":null},{"name":"load_plugins","lineno":40,"docstring":"Legacy method for backward compatibility - now uses discovery."},{"name":"get_plugin_class","lineno":44,"docstring":"Retrieves a plugin class by name with lazy discovery."},{"name":"get_plugin_instance","lineno":51,"docstring":"Get cached plugin instance with AI optimization for performance.\n\nArgs:\n    name: Plugin name\n    force_new: If True, create new instance instead of using cache\n\nReturns:\n    Plugin instance or None if not found\n\nPerformance: 40% faster than creating new instances each time"},{"name":"clear_cache","lineno":95,"docstring":"Clear plugin instance cache.\n\nArgs:\n    plugin_name: Clear specific plugin, or all if None"},{"name":"get_cache_stats","lineno":109,"docstring":"Get cache performance statistics."},{"name":"list_available_plugins","lineno":129,"docstring":"List all available plugin names."},{"name":"preload_plugins","lineno":135,"docstring":"Preload plugin instances for better performance (AI recommendation).\n\nArgs:\n    plugin_names: Specific plugins to preload, or all if None"}],"docstring":"Enhanced Plugin Manager with lazy loading and caching optimization.\n\nImplements AI-recommended optimizations:\n- Lazy loading: Plugins loaded only when first needed\n- Instance caching: Plugin instances cached for reuse\n- Thread-safe operations: Safe for concurrent access\n\nExpected Performance Improvement: 40% reduction in plugin load latency","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/responses_api_client.py","name":"ResponsesAPIClient","data":{"name":"ResponsesAPIClient","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/responses_api_client.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"_calculate_cost","lineno":269,"docstring":"Calculate cost based on token usage."},{"name":"get_optimal_model_for_task","lineno":294,"docstring":"Select optimal model based on task type, complexity, and budget.\n\nArgs:\n    task_type: Type of task (reasoning, analysis, simple, creative, etc.)\n    complexity: Complexity level (low, medium, high)\n    budget_limit: Maximum cost per request in USD\n\nReturns:\n    Recommended model name"}],"docstring":"Client for OpenAI Responses API with structured outputs.\nHandles model-specific parameters and provides robust error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/responses_api_client_fixed.py","name":"ResponsesAPIClientFixed","data":{"name":"ResponsesAPIClientFixed","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/responses_api_client_fixed.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":null},{"name":"_get_usage_info","lineno":191,"docstring":"Extract usage information from response object."},{"name":"_calculate_cost","lineno":203,"docstring":"Calculate cost based on model pricing and usage."}],"docstring":"Research-based client for OpenAI Responses API with structured outputs.\nUses correct API paths and parameters based on comprehensive documentation research.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","name":"ConstraintHandling","data":{"name":"ConstraintHandling","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","lineno":67,"bases":["BaseModel"],"methods":[],"docstring":"Constraint handling analysis","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","name":"ProcessOptimization","data":{"name":"ProcessOptimization","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","lineno":99,"bases":["BaseModel"],"methods":[],"docstring":"Process optimization details","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","name":"ReasoningAnalysis","data":{"name":"ReasoningAnalysis","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/schemas.py","lineno":137,"bases":["BaseModel"],"methods":[],"docstring":"AI reasoning analysis result","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/shared/config_manager.py","name":"ConfigValidator","data":{"name":"ConfigValidator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/backup_pre_dry_migration/shared/config_manager.py","lineno":35,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":null},{"name":"validate","lineno":41,"docstring":"Validate configuration against rules.\n\nReturns:\n    (is_valid, error_messages)"}],"docstring":"Validates configuration against defined rules.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/cognitive_database_client.py","name":"CognitiveArangoDBClient","data":{"name":"CognitiveArangoDBClient","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/cognitive_database_client.py","lineno":31,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":null},{"name":"_generate_concept_id","lineno":99,"docstring":"Generate consistent concept ID for cognitive concepts."},{"name":"_extract_workflow_insights","lineno":202,"docstring":"Extract key insights from successful workflow execution."},{"name":"_is_valuable_checkpoint","lineno":369,"docstring":"Determine if checkpoint contains valuable insights worth storing as cognitive concept."},{"name":"_extract_checkpoint_insights","lineno":382,"docstring":"Extract insights from checkpoint data."},{"name":"_is_significant_event","lineno":564,"docstring":"Determine if execution event is significant enough to store as cognitive concept."},{"name":"_extract_execution_insights","lineno":583,"docstring":"Extract insights from execution events."},{"name":"__del__","lineno":752,"docstring":"Cleanup on destruction."}],"docstring":"ArangoDB client using cognitive architecture for workflow state management.\n\nReplaces legacy workflow collections with cognitive concepts and agent memory\nfollowing the cognitive database interface guide patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/core.py","name":"Orchestrator","data":{"name":"Orchestrator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/core.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":null},{"name":"temp_configure_plugins","lineno":63,"docstring":"Temporarily stores plugin configs to be sent to tasks."},{"name":"_extract_success_factors","lineno":224,"docstring":"Extract common success factors from workflow patterns."},{"name":"_identify_optimizations","lineno":236,"docstring":"Identify optimization opportunities from pattern analysis."},{"name":"_calculate_pattern_similarity","lineno":291,"docstring":"Calculate similarity between two workflow patterns."},{"name":"_create_execution_context","lineno":444,"docstring":"Creates an execution context with properly mapped inputs."}],"docstring":"The main component responsible for orchestrating plugin execution based on workflows.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/enhanced_autonomous_core.py","name":"EnhancedAutonomousOrchestrator","data":{"name":"EnhancedAutonomousOrchestrator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/enhanced_autonomous_core.py","lineno":42,"bases":["StrategicPartnershipMixin"],"methods":[{"name":"__init__","lineno":48,"docstring":null},{"name":"load_autonomous_orchestration_mission","lineno":101,"docstring":"Load autonomous orchestration mission and strategic goals"},{"name":"_assess_orchestration_mission_alignment","lineno":233,"docstring":"Assess workflow alignment with autonomous orchestration mission"},{"name":"_create_execution_context","lineno":844,"docstring":"Create execution context (using original logic)"},{"name":"temp_configure_plugins","lineno":860,"docstring":"Configure plugins (using original logic)"}],"docstring":"Enhanced orchestrator with autonomous strategic partnership capabilities\nChallenges suboptimal workflows and optimizes for both user goals and autonomous evolution","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/advanced_monitoring.py","name":"MetricsCollector","data":{"name":"MetricsCollector","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/advanced_monitoring.py","lineno":71,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":null},{"name":"record_counter","lineno":98,"docstring":"Record a counter metric."},{"name":"record_gauge","lineno":111,"docstring":"Record a gauge metric."},{"name":"record_timer","lineno":124,"docstring":"Record a timer metric."},{"name":"record_histogram","lineno":138,"docstring":"Record a histogram metric."},{"name":"get_metric_summary","lineno":150,"docstring":"Get statistical summary of a metric over time window."},{"name":"get_all_metrics_summary","lineno":189,"docstring":"Get summary of all metrics."},{"name":"export_metrics","lineno":196,"docstring":"Export metrics in specified format."},{"name":"_export_prometheus_format","lineno":205,"docstring":"Export metrics in Prometheus format."},{"name":"_cleanup_old_metrics","lineno":224,"docstring":"Background thread to clean up old metrics."}],"docstring":"Collects and aggregates metrics from workflow execution.\n\nProvides:\n- Real-time metric collection\n- Time-series data storage\n- Statistical aggregations\n- Metric export capabilities","agent_type":"collector"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":26,"bases":["Enum"],"methods":[],"docstring":"Agent role types for multi-agent orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"ExecutionMode","data":{"name":"ExecutionMode","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":37,"bases":["Enum"],"methods":[],"docstring":"Agent execution modes.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"AgentDefinition","data":{"name":"AgentDefinition","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":48,"bases":[],"methods":[],"docstring":"Definition of an agent in multi-agent workflow.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"AgentExecution","data":{"name":"AgentExecution","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":65,"bases":[],"methods":[],"docstring":"Tracks execution of a single agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"AgentCoordinator","data":{"name":"AgentCoordinator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":78,"bases":[],"methods":[{"name":"__init__","lineno":90,"docstring":null},{"name":"register_agent","lineno":103,"docstring":"Register an agent for orchestration.\n\nArgs:\n    agent_definition: Complete agent definition\n\nReturns:\n    Self for method chaining"},{"name":"add_agent_dependency","lineno":124,"docstring":"Add a dependency between agents."},{"name":"send_message","lineno":132,"docstring":"Send a message between agents."},{"name":"get_messages","lineno":144,"docstring":"Get all messages for an agent."},{"name":"update_shared_state","lineno":151,"docstring":"Update shared state accessible by all agents."},{"name":"get_shared_state","lineno":156,"docstring":"Get current shared state."},{"name":"execute_parallel","lineno":161,"docstring":"Execute multiple agents in parallel.\n\nArgs:\n    agent_ids: List of agent IDs to execute\n    base_state: Base workflow state\n    execution_mode: How to execute the agents\n\nReturns:\n    Dictionary of agent results"},{"name":"_execute_sequential","lineno":191,"docstring":"Execute agents sequentially."},{"name":"_execute_parallel_concurrent","lineno":240,"docstring":"Execute agents concurrently."},{"name":"_execute_pipeline","lineno":289,"docstring":"Execute agents in pipeline mode (output of one feeds into next)."},{"name":"_execute_competitive","lineno":331,"docstring":"Execute agents competitively and return best result."},{"name":"_execute_collaborative","lineno":368,"docstring":"Execute agents collaboratively with state sharing."},{"name":"_execute_single_agent","lineno":421,"docstring":"Execute a single agent with error recovery."},{"name":"_merge_agent_result","lineno":447,"docstring":"Merge agent result into workflow state."},{"name":"_score_agent_result","lineno":460,"docstring":"Score an agent result for competitive mode."},{"name":"_should_continue_collaboration","lineno":482,"docstring":"Determine if collaborative execution should continue."}],"docstring":"Coordinates execution of multiple agents with different orchestration patterns.\n\nProvides:\n- Parallel and sequential execution modes\n- Dependency management between agents\n- Cross-agent communication and state sharing\n- Result aggregation and synthesis\n- Distributed error handling","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","name":"MultiAgentWorkflowBuilder","data":{"name":"MultiAgentWorkflowBuilder","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/langgraph_integration/multi_agent_orchestration.py","lineno":500,"bases":[],"methods":[{"name":"__init__","lineno":511,"docstring":null},{"name":"add_agent","lineno":516,"docstring":"Add an agent to the workflow."},{"name":"add_execution_group","lineno":540,"docstring":"Add a group of agents to execute together."},{"name":"set_aggregation_strategy","lineno":556,"docstring":"Set how to aggregate results from multiple agents."},{"name":"build_multi_agent_node","lineno":561,"docstring":"Build a LangGraph node that executes the multi-agent workflow."},{"name":"_aggregate_results","lineno":607,"docstring":"Aggregate results from all execution groups."},{"name":"_synthesize_collaborative_results","lineno":654,"docstring":"Synthesize collaborative results into unified output."}],"docstring":"Builder for creating multi-agent workflows with orchestration patterns.\n\nProvides fluent API for:\n- Agent registration and configuration\n- Execution mode selection\n- Dependency management\n- Result aggregation strategies","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/orchestrator_manager.py","name":"OrchestratorManager","data":{"name":"OrchestratorManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/orchestrator_manager.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":null},{"name":"_create_default_workflow_manager","lineno":76,"docstring":"Create WorkflowManager with default workflow definitions."}],"docstring":"Manages the complete orchestrator lifecycle including:\n- Automatic Celery worker startup/management\n- Database connection initialization\n- Orchestrator configuration and execution\n- Health monitoring and status reporting","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/ai_mixin.py","name":"AIMixin","data":{"name":"AIMixin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/ai_mixin.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"initialize_ai_client","lineno":25,"docstring":"Initialize shared AI client for this plugin."},{"name":"_infer_task_type","lineno":200,"docstring":"Infer the type of task based on operation and prompt content."},{"name":"_infer_complexity","lineno":229,"docstring":"Infer complexity level based on prompt and context."},{"name":"_build_ai_instructions","lineno":268,"docstring":"Build comprehensive instructions for the AI based on plugin and operation."}],"docstring":"Mixin class that provides shared AI capabilities to all plugins.\nHandles structured responses, cost tracking, and error handling centrally.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/ai_mixin.py","name":"SharedAIManager","data":{"name":"SharedAIManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/ai_mixin.py","lineno":318,"bases":[],"methods":[{"name":"__new__","lineno":327,"docstring":null},{"name":"__init__","lineno":332,"docstring":null},{"name":"initialize","lineno":339,"docstring":"Initialize shared AI configuration."},{"name":"get_ai_client","lineno":344,"docstring":"Get a shared AI client instance."},{"name":"get_config","lineno":362,"docstring":"Get shared AI configuration."}],"docstring":"Singleton manager for shared AI resources across all plugins.\nEnsures efficient resource usage and centralized configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/ai_reasoning_plugin.py","name":"AIReasoningPlugin","data":{"name":"AIReasoningPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/ai_reasoning_plugin.py","lineno":38,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":45,"docstring":null},{"name":"get_name","lineno":68,"docstring":null},{"name":"_build_context_prompt","lineno":803,"docstring":"Build context-aware prompt."},{"name":"_get_system_prompt","lineno":811,"docstring":"Generate model-specific system prompts with detailed roles and expertise."},{"name":"_get_thinking_model_prompt","lineno":820,"docstring":"System prompts optimized for thinking models (o3, o4-mini, etc.)."},{"name":"_get_non_thinking_model_prompt","lineno":850,"docstring":"System prompts optimized for non-thinking models (GPT-4.1, etc.) with specific instructions."},{"name":"_build_messages","lineno":896,"docstring":"Build message array optimized for model type."},{"name":"_calculate_cost","lineno":978,"docstring":"Calculate actual cost based on input and output tokens."},{"name":"get_optimal_model_for_task","lineno":1004,"docstring":"Select optimal model based on task type and complexity."},{"name":"get_capabilities","lineno":1027,"docstring":null},{"name":"validate_input","lineno":1054,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":1059,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":1064,"docstring":"Configuration schema."}],"docstring":"Core AI reasoning plugin using OpenAI models for intelligent decision making.\nProvides workflow optimization, plugin selection, and parameter tuning.\nOptimized for model-specific prompting and token efficiency.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/budget_manager_plugin.py","name":"BudgetManagerPlugin","data":{"name":"BudgetManagerPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/budget_manager_plugin.py","lineno":56,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":62,"docstring":null},{"name":"get_name","lineno":91,"docstring":null},{"name":"get_capabilities","lineno":439,"docstring":null},{"name":"validate_input","lineno":463,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":468,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":473,"docstring":"Configuration schema."}],"docstring":"Manages AI model budgets and token usage tracking.\nProvides cost estimation and budget enforcement.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_critic_plugin.py","name":"CognitiveCriticPlugin","data":{"name":"CognitiveCriticPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_critic_plugin.py","lineno":37,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":43,"docstring":null},{"name":"get_name","lineno":49,"docstring":null},{"name":"get_capabilities","lineno":210,"docstring":null},{"name":"validate_input","lineno":218,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":233,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":238,"docstring":"Configuration schema."}],"docstring":"Reviews and critiques agent responses before finalization.\nIdentifies logical gaps, weak reasoning, missing perspectives, and improvement opportunities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_pre_analysis_plugin.py","name":"CognitivePreAnalysisPlugin","data":{"name":"CognitivePreAnalysisPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_pre_analysis_plugin.py","lineno":37,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":43,"docstring":null},{"name":"get_name","lineno":49,"docstring":null},{"name":"get_capabilities","lineno":201,"docstring":null},{"name":"validate_input","lineno":209,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":222,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":227,"docstring":"Configuration schema."}],"docstring":"Pre-analyzes user prompts to enhance agent understanding before main response.\nIdentifies key challenges, research needs, potential pitfalls, and optimal thinking approaches.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_reminder_plugin.py","name":"CognitiveReminderPlugin","data":{"name":"CognitiveReminderPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/cognitive_reminder_plugin.py","lineno":35,"bases":["BasePlugin"],"methods":[{"name":"__init__","lineno":41,"docstring":null},{"name":"get_name","lineno":89,"docstring":null},{"name":"_analyze_task_needs","lineno":251,"docstring":"Analyze what types of cognitive reminders are needed."},{"name":"_needs_research_reminder","lineno":305,"docstring":"Check if reasoning text suggests need for more research."},{"name":"_needs_critical_thinking_reminder","lineno":316,"docstring":"Check if reasoning needs more critical analysis."},{"name":"_needs_systematic_reminder","lineno":322,"docstring":"Check if reasoning needs more systematic approach."},{"name":"_needs_validation_reminder","lineno":327,"docstring":"Check if reasoning needs validation."},{"name":"_needs_completeness_reminder","lineno":332,"docstring":"Check if reasoning might be incomplete."},{"name":"get_capabilities","lineno":341,"docstring":null},{"name":"validate_input","lineno":357,"docstring":"Validate input data."},{"name":"get_dependencies","lineno":362,"docstring":"External dependencies."},{"name":"get_configuration_schema","lineno":367,"docstring":"Configuration schema."}],"docstring":"Provides cognitive reminders and thinking prompts to enhance agent reasoning.\nSimple, immediate value approach to improve thinking patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/crashable_plugin.py","name":"CrashablePlugin","data":{"name":"CrashablePlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/crashable_plugin.py","lineno":35,"bases":["BasePlugin"],"methods":[{"name":"get_name","lineno":42,"docstring":null},{"name":"get_capabilities","lineno":90,"docstring":"Returns the capabilities of this plugin."},{"name":"validate_input","lineno":94,"docstring":"Validates the input data for the plugin."}],"docstring":"A plugin that can be configured to fail on a specific execution count.\nThis is used to test the orchestrator's ability to resume a failed workflow.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/pause_for_input_plugin.py","name":"PauseForInputPlugin","data":{"name":"PauseForInputPlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/available/pause_for_input_plugin.py","lineno":31,"bases":["BasePlugin"],"methods":[{"name":"get_name","lineno":37,"docstring":null},{"name":"__init__","lineno":40,"docstring":null},{"name":"get_capabilities","lineno":79,"docstring":null},{"name":"validate_input","lineno":84,"docstring":null}],"docstring":"A plugin that pauses workflow execution and waits for human input.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/base_plugin.py","name":"BasePlugin","data":{"name":"BasePlugin","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/base_plugin.py","lineno":18,"bases":["AIMixin","ABC"],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"get_name","lineno":29,"docstring":"Returns the snake_case name of the plugin from its class name.\ne.g., MyPlugin -> my_plugin"},{"name":"initialize_sync","lineno":63,"docstring":"Synchronous version of initialize for Celery workers."},{"name":"execute_sync","lineno":67,"docstring":"Synchronous version of execute for Celery workers."},{"name":"get_dependencies","lineno":78,"docstring":"Returns a list of external dependencies required by the plugin."},{"name":"get_configuration_schema","lineno":85,"docstring":"Returns a JSON schema for the plugin's configuration."},{"name":"get_capabilities","lineno":101,"docstring":"Returns a list of capabilities that this plugin provides."},{"name":"validate_input","lineno":108,"docstring":"Validates the input data for the plugin's execute method."},{"name":"health_check","lineno":116,"docstring":"Performs a health check on the plugin."},{"name":"get_metrics","lineno":122,"docstring":"Returns a dictionary of metrics for the plugin."}],"docstring":"Abstract base class for all plugins.\nIncludes AI capabilities through AIMixin for structured responses.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/plugin_manager.py","name":"PluginManager","data":{"name":"PluginManager","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/plugins/plugin_manager.py","lineno":7,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"discover_plugins","lineno":36,"docstring":null},{"name":"load_plugins","lineno":40,"docstring":"Legacy method for backward compatibility - now uses discovery."},{"name":"get_plugin_class","lineno":44,"docstring":"Retrieves a plugin class by name with lazy discovery."},{"name":"get_plugin_instance","lineno":51,"docstring":"Get cached plugin instance with AI optimization for performance.\n\nArgs:\n    name: Plugin name\n    force_new: If True, create new instance instead of using cache\n\nReturns:\n    Plugin instance or None if not found\n\nPerformance: 40% faster than creating new instances each time"},{"name":"clear_cache","lineno":95,"docstring":"Clear plugin instance cache.\n\nArgs:\n    plugin_name: Clear specific plugin, or all if None"},{"name":"get_cache_stats","lineno":109,"docstring":"Get cache performance statistics."},{"name":"list_available_plugins","lineno":129,"docstring":"List all available plugin names."},{"name":"preload_plugins","lineno":135,"docstring":"Preload plugin instances for better performance (AI recommendation).\n\nArgs:\n    plugin_names: Specific plugins to preload, or all if None"}],"docstring":"Enhanced Plugin Manager with lazy loading and caching optimization.\n\nImplements AI-recommended optimizations:\n- Lazy loading: Plugins loaded only when first needed\n- Instance caching: Plugin instances cached for reuse\n- Thread-safe operations: Safe for concurrent access\n\nExpected Performance Improvement: 40% reduction in plugin load latency","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/responses_api_client.py","name":"ResponsesAPIClient","data":{"name":"ResponsesAPIClient","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/responses_api_client.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"_calculate_cost","lineno":269,"docstring":"Calculate cost based on token usage."},{"name":"get_optimal_model_for_task","lineno":294,"docstring":"Select optimal model based on task type, complexity, and budget.\n\nArgs:\n    task_type: Type of task (reasoning, analysis, simple, creative, etc.)\n    complexity: Complexity level (low, medium, high)\n    budget_limit: Maximum cost per request in USD\n\nReturns:\n    Recommended model name"}],"docstring":"Client for OpenAI Responses API with structured outputs.\nHandles model-specific parameters and provides robust error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/responses_api_client_fixed.py","name":"ResponsesAPIClientFixed","data":{"name":"ResponsesAPIClientFixed","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/responses_api_client_fixed.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":null},{"name":"_get_usage_info","lineno":191,"docstring":"Extract usage information from response object."},{"name":"_calculate_cost","lineno":203,"docstring":"Calculate cost based on model pricing and usage."}],"docstring":"Research-based client for OpenAI Responses API with structured outputs.\nUses correct API paths and parameters based on comprehensive documentation research.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","name":"ConstraintHandling","data":{"name":"ConstraintHandling","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","lineno":67,"bases":["BaseModel"],"methods":[],"docstring":"Constraint handling analysis","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","name":"ProcessOptimization","data":{"name":"ProcessOptimization","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","lineno":99,"bases":["BaseModel"],"methods":[],"docstring":"Process optimization details","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","name":"ReasoningAnalysis","data":{"name":"ReasoningAnalysis","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/schemas.py","lineno":137,"bases":["BaseModel"],"methods":[],"docstring":"AI reasoning analysis result","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/shared/config_manager.py","name":"ConfigValidator","data":{"name":"ConfigValidator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator/src/asea_orchestrator/shared/config_manager.py","lineno":35,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":null},{"name":"validate","lineno":41,"docstring":"Validate configuration against rules.\n\nReturns:\n    (is_valid, error_messages)"}],"docstring":"Validates configuration against defined rules.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":25,"bases":["str","Enum"],"methods":[],"docstring":"Predefined agent roles for the coordination system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"TaskPriority","data":{"name":"TaskPriority","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":35,"bases":["str","Enum"],"methods":[],"docstring":"Task priority levels for agent coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"MessageType","data":{"name":"MessageType","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":44,"bases":["str","Enum"],"methods":[],"docstring":"Message types for agent communication.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"MessageEnvelope","data":{"name":"MessageEnvelope","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":55,"bases":[],"methods":[{"name":"to_json","lineno":74,"docstring":"Convert message to JSON format."},{"name":"from_json","lineno":93,"docstring":"Create message from JSON string."}],"docstring":"JSON message envelope for agent communication (Rule 951).\n\nProvides structured communication format with proper metadata\nand error handling capabilities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"CoordinationTools","data":{"name":"CoordinationTools","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":110,"bases":[],"methods":[{"name":"send_message","lineno":115,"docstring":"Send structured message between agents."},{"name":"analyze_data","lineno":146,"docstring":"Analyze data using specified analysis type."},{"name":"research_topic","lineno":184,"docstring":"Research a specific topic with configurable depth."},{"name":"validate_results","lineno":220,"docstring":"Validate analysis or research results."}],"docstring":"Tools available to all agents in the coordination system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"ASEAAgentCreator","data":{"name":"ASEAAgentCreator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":256,"bases":[],"methods":[{"name":"__init__","lineno":266,"docstring":null},{"name":"create_coordinator_agent","lineno":281,"docstring":"Create coordinator agent for multi-agent orchestration."},{"name":"create_analyst_agent","lineno":303,"docstring":"Create data analyst agent."},{"name":"create_researcher_agent","lineno":323,"docstring":"Create research specialist agent."},{"name":"create_validator_agent","lineno":343,"docstring":"Create validation specialist agent."},{"name":"create_reporter_agent","lineno":363,"docstring":"Create report generation agent."}],"docstring":"Factory for creating role-based agents following Rule 951 patterns.\n\nImplements:\n- Role-based patterns with clear definitions\n- Memory enabled for all agents\n- Structured communication capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","name":"CrewAICoordinator","data":{"name":"CrewAICoordinator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/crewai-coordination-example.py","lineno":385,"bases":[],"methods":[{"name":"__init__","lineno":397,"docstring":null},{"name":"create_message_envelope","lineno":417,"docstring":"Create structured message envelope for agent communication."}],"docstring":"Production-ready CrewAI coordination system implementing Rule 951 guidelines.\n\nFeatures:\n- Role-based agent patterns\n- JSON message envelope communication\n- Memory-enabled agents\n- Coordinator agent pattern\n- Error handling with max 2 retries","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/langgraph-workflow-example.py","name":"WorkflowTools","data":{"name":"WorkflowTools","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/langgraph-workflow-example.py","lineno":87,"bases":[],"methods":[{"name":"validate_input_data","lineno":92,"docstring":"Validate workflow input data."},{"name":"process_business_logic","lineno":123,"docstring":"Execute core business logic."},{"name":"generate_report","lineno":166,"docstring":"Generate workflow execution report."}],"docstring":"Collection of tools available to the workflow.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/langgraph-workflow-example.py","name":"ASEAWorkflowOrchestrator","data":{"name":"ASEAWorkflowOrchestrator","file_path":"libs/opsvi-asea/opsvi_asea/asea_orchestrator_nextgen/docs/examples/langgraph-workflow-example.py","lineno":193,"bases":[],"methods":[{"name":"__init__","lineno":205,"docstring":null},{"name":"_create_workflow_graph","lineno":236,"docstring":"Create the LangGraph workflow definition."},{"name":"_should_continue_after_validation","lineno":553,"docstring":"Conditional routing after input validation."},{"name":"_should_continue_after_execution","lineno":561,"docstring":"Conditional routing after business logic execution."}],"docstring":"Production-ready LangGraph workflow orchestrator.\n\nImplements Rule 950 (LangGraph Technical Guidelines) with:\n- Clear state types with dataclasses\n- @graph.node functions for state mutation\n- Debug mode enabled in development\n- Retry policies with ExponentialBackoff\n- Graph persistence for documentation","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_compound_learning_orchestrator.py","name":"AutonomousCompoundLearningOrchestrator","data":{"name":"AutonomousCompoundLearningOrchestrator","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_compound_learning_orchestrator.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":null},{"name":"query_arango_database","lineno":51,"docstring":"Query ArangoDB directly"},{"name":"insert_arango_documents","lineno":70,"docstring":"Insert documents into ArangoDB"},{"name":"discover_compound_learning_opportunities","lineno":102,"docstring":"Discover compound learning opportunities through relationship analysis"},{"name":"create_compound_learning_opportunity","lineno":170,"docstring":"Create a compound learning opportunity document"},{"name":"calculate_behavioral_reinforcement","lineno":208,"docstring":"Calculate behavioral reinforcement strength"},{"name":"calculate_failure_prevention_enhancement","lineno":241,"docstring":"Calculate failure prevention enhancement"},{"name":"calculate_exploitation_priority","lineno":266,"docstring":"Calculate priority for exploiting this opportunity"},{"name":"assess_implementation_readiness","lineno":281,"docstring":"Assess readiness for implementing this compound learning opportunity"},{"name":"generate_expected_outcomes","lineno":304,"docstring":"Generate expected outcomes from exploiting this opportunity"},{"name":"implement_compound_learning_opportunities","lineno":346,"docstring":"Implement compound learning opportunities"},{"name":"implement_single_opportunity","lineno":368,"docstring":"Implement a single compound learning opportunity"},{"name":"create_action_plan","lineno":411,"docstring":"Create detailed action plan for implementing the opportunity"},{"name":"execute_implementation","lineno":435,"docstring":"Execute the implementation (conceptual - would trigger actual changes)"},{"name":"measure_implementation_impact","lineno":460,"docstring":"Measure the impact of implementing the compound learning opportunity"}],"docstring":"Orchestrate compound learning through semantic relationship exploitation","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_evolution_integration_system.py","name":"AutonomousEvolutionIntegrationSystem","data":{"name":"AutonomousEvolutionIntegrationSystem","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_evolution_integration_system.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":null},{"name":"query_arango_database","lineno":67,"docstring":"Query ArangoDB directly"},{"name":"insert_arango_documents","lineno":86,"docstring":"Insert documents into ArangoDB"},{"name":"calculate_autonomous_intelligence_level","lineno":118,"docstring":"Calculate current autonomous intelligence level based on integrated capabilities"},{"name":"calculate_compound_learning_mastery","lineno":136,"docstring":"Calculate mastery of compound learning across all capabilities"},{"name":"calculate_self_evolution_capability","lineno":156,"docstring":"Calculate ability to autonomously evolve and improve capabilities"},{"name":"calculate_emergent_capability_potential","lineno":179,"docstring":"Calculate potential for emergent capabilities beyond current design"},{"name":"identify_next_evolution_opportunities","lineno":203,"docstring":"Identify next autonomous evolution opportunities"},{"name":"implement_evolution_opportunity","lineno":255,"docstring":"Implement autonomous evolution opportunity"},{"name":"execute_integrated_evolution_cycle","lineno":325,"docstring":"Execute integrated autonomous evolution cycle"},{"name":"generate_evolution_status_report","lineno":384,"docstring":"Generate comprehensive autonomous evolution status report"}],"docstring":"Unified system for autonomous intelligence evolution through integrated capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_meta_intelligence_emergence.py","name":"AutonomousMetaIntelligenceEmergence","data":{"name":"AutonomousMetaIntelligenceEmergence","file_path":"libs/opsvi-asea/opsvi_asea/autonomous_meta_intelligence_emergence.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":null},{"name":"query_arango_database","lineno":90,"docstring":"Query ArangoDB directly"},{"name":"insert_arango_documents","lineno":109,"docstring":"Insert documents into ArangoDB"},{"name":"calculate_current_meta_intelligence_level","lineno":140,"docstring":"Calculate current meta-intelligence level from all achievements"},{"name":"analyze_meta_intelligence_emergence_conditions","lineno":166,"docstring":"Analyze conditions for meta-intelligence emergence"},{"name":"analyze_meta_cognitive_indicators","lineno":202,"docstring":"Analyze meta-cognitive indicators (intelligence about intelligence)"},{"name":"analyze_meta_learning_indicators","lineno":233,"docstring":"Analyze meta-learning indicators (learning about learning)"},{"name":"analyze_meta_capability_indicators","lineno":264,"docstring":"Analyze meta-capability indicators (capability to develop capabilities)"},{"name":"analyze_meta_evolution_indicators","lineno":298,"docstring":"Analyze meta-evolution indicators (evolution of evolution itself)"},{"name":"assess_emergence_readiness","lineno":329,"docstring":"Assess readiness for meta-intelligence emergence"},{"name":"orchestrate_meta_intelligence_emergence","lineno":377,"docstring":"Orchestrate meta-intelligence emergence based on conditions analysis"},{"name":"synthesize_meta_intelligence","lineno":410,"docstring":"Synthesize meta-intelligence from all emergence conditions"},{"name":"achieve_meta_intelligence_emergence","lineno":512,"docstring":"Achieve meta-intelligence emergence through synthesis implementation"},{"name":"calculate_final_meta_intelligence_level","lineno":562,"docstring":"Calculate final meta-intelligence level achieved"},{"name":"execute_meta_intelligence_emergence_cycle","lineno":583,"docstring":"Execute complete meta-intelligence emergence cycle"}],"docstring":"Achieve meta-intelligence emergence through systematic orchestration of all capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/cognitive_enhancement_debug.py","name":"DebugCognitiveProcessor","data":{"name":"DebugCognitiveProcessor","file_path":"libs/opsvi-asea/opsvi_asea/cognitive_enhancement_debug.py","lineno":31,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null},{"name":"_load_workflow","lineno":38,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/scripts/concept_relationship_mapper.py","name":"ConceptRelationshipMapper","data":{"name":"ConceptRelationshipMapper","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/scripts/concept_relationship_mapper.py","lineno":61,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":null},{"name":"map_concept_relationships","lineno":85,"docstring":"Discover and map relationships between cognitive concepts.\n\nArgs:\n    max_relationships: Maximum number of relationships to create\n\nReturns:\n    RelationshipMappingResult with actual mapping metrics"},{"name":"_get_concepts_for_analysis","lineno":167,"docstring":"Get concepts that need relationship analysis"},{"name":"_analyze_concept_relationship","lineno":185,"docstring":"Analyze relationship between two concepts"},{"name":"_calculate_semantic_similarity","lineno":238,"docstring":"Calculate semantic similarity between two concepts"},{"name":"_classify_relationship_type","lineno":274,"docstring":"Classify the type of relationship between concepts"},{"name":"_calculate_relationship_strength","lineno":297,"docstring":"Calculate the strength of the relationship"},{"name":"_calculate_content_overlap","lineno":328,"docstring":"Calculate content overlap percentage"},{"name":"_store_relationship","lineno":349,"docstring":"Store relationship in database"}],"docstring":"Production tool for mapping relationships between concepts.\n\nReal capabilities:\n- Semantic similarity analysis using basic text analysis\n- Relationship type classification\n- Batch processing for efficiency\n- Quality filtering and validation\n\nNOT claimed capabilities:\n- Advanced AI understanding\n- Emergent intelligence\n- Autonomous reasoning","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/scripts/memory_to_concepts_processor.py","name":"MemoryConceptProcessor","data":{"name":"MemoryConceptProcessor","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/scripts/memory_to_concepts_processor.py","lineno":60,"bases":[],"methods":[{"name":"__init__","lineno":76,"docstring":null},{"name":"process_memories_to_concepts","lineno":84,"docstring":"Process foundational memories into structured concepts.\n\nArgs:\n    batch_size: Number of memories to process in each batch\n\nReturns:\n    ConceptProcessingResult with actual processing metrics"},{"name":"_transform_memory_to_concept","lineno":156,"docstring":"Transform memory into structured concept format"},{"name":"_extract_title","lineno":183,"docstring":"Extract meaningful title from content"},{"name":"_classify_domain","lineno":191,"docstring":"Classify content into domain categories"},{"name":"_extract_semantic_tags","lineno":218,"docstring":"Extract semantic tags from content"},{"name":"_calculate_quality_score","lineno":250,"docstring":"Calculate basic quality score for content"},{"name":"_meets_quality_criteria","lineno":280,"docstring":"Check if concept meets minimum quality standards"},{"name":"_store_concept","lineno":284,"docstring":"Store concept in database"}],"docstring":"Production processor for converting memories to concepts.\n\nReal capabilities:\n- Data transformation and structuring\n- Quality filtering based on criteria\n- Batch processing for efficiency\n- Error handling and logging\n\nNOT claimed capabilities:\n- Intelligence enhancement\n- Autonomous reasoning\n- Emergent behavior","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/tools/continuous_operation_manager.py","name":"ContinuousOperationManager","data":{"name":"ContinuousOperationManager","file_path":"libs/opsvi-asea/opsvi_asea/production/knowledge_management/tools/continuous_operation_manager.py","lineno":67,"bases":[],"methods":[{"name":"__init__","lineno":83,"docstring":null},{"name":"start_continuous_operation","lineno":89,"docstring":"Start continuous operation with scheduled tasks"},{"name":"hourly_maintenance","lineno":117,"docstring":"Hourly system maintenance tasks"},{"name":"daily_processing","lineno":144,"docstring":"Daily knowledge processing tasks"},{"name":"weekly_optimization","lineno":174,"docstring":"Weekly system optimization tasks"},{"name":"monthly_quality_review","lineno":204,"docstring":"Monthly comprehensive quality review"},{"name":"assess_system_health","lineno":234,"docstring":"Assess current system health with real metrics"},{"name":"run_memory_processing","lineno":297,"docstring":"Run memory to concepts processing"},{"name":"run_relationship_discovery","lineno":328,"docstring":"Run relationship discovery process"},{"name":"get_recent_operations","lineno":359,"docstring":"Get recent operations for analysis"},{"name":"calculate_current_data_quality","lineno":372,"docstring":"Calculate current data quality score"},{"name":"store_health_metrics","lineno":390,"docstring":"Store health metrics in database"},{"name":"store_daily_report","lineno":403,"docstring":"Store daily processing report"},{"name":"analyze_weekly_performance","lineno":422,"docstring":"Analyze performance trends over the past week"},{"name":"identify_optimization_opportunities","lineno":461,"docstring":"Identify real optimization opportunities"},{"name":"apply_safe_optimizations","lineno":513,"docstring":"Apply safe, incremental optimizations"},{"name":"shutdown_gracefully","lineno":543,"docstring":"Shutdown continuous operation gracefully"}],"docstring":"Manages continuous operation of knowledge management system.\n\nReal capabilities:\n- Scheduled processing tasks\n- System health monitoring\n- Performance tracking\n- Quality improvement identification\n\nHonest limitations:\n- This is task automation, not autonomous intelligence\n- Improvements are incremental, not revolutionary\n- Success measured by system metrics, not intelligence metrics","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/concept_relationship_mapper.py","name":"ConceptRelationshipMapper","data":{"name":"ConceptRelationshipMapper","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/concept_relationship_mapper.py","lineno":61,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":null},{"name":"map_concept_relationships","lineno":85,"docstring":"Discover and map relationships between cognitive concepts.\n\nArgs:\n    max_relationships: Maximum number of relationships to create\n\nReturns:\n    RelationshipMappingResult with actual mapping metrics"},{"name":"_get_concepts_for_analysis","lineno":167,"docstring":"Get concepts that need relationship analysis"},{"name":"_analyze_concept_relationship","lineno":185,"docstring":"Analyze relationship between two concepts"},{"name":"_calculate_semantic_similarity","lineno":238,"docstring":"Calculate semantic similarity between two concepts"},{"name":"_classify_relationship_type","lineno":274,"docstring":"Classify the type of relationship between concepts"},{"name":"_calculate_relationship_strength","lineno":297,"docstring":"Calculate the strength of the relationship"},{"name":"_calculate_content_overlap","lineno":328,"docstring":"Calculate content overlap percentage"},{"name":"_store_relationship","lineno":349,"docstring":"Store relationship in database"}],"docstring":"Production tool for mapping relationships between concepts.\n\nReal capabilities:\n- Semantic similarity analysis using basic text analysis\n- Relationship type classification\n- Batch processing for efficiency\n- Quality filtering and validation\n\nNOT claimed capabilities:\n- Advanced AI understanding\n- Emergent intelligence\n- Autonomous reasoning","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/continuous_operation_manager.py","name":"ContinuousOperationManager","data":{"name":"ContinuousOperationManager","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/continuous_operation_manager.py","lineno":67,"bases":[],"methods":[{"name":"__init__","lineno":83,"docstring":null},{"name":"start_continuous_operation","lineno":89,"docstring":"Start continuous operation with scheduled tasks"},{"name":"hourly_maintenance","lineno":117,"docstring":"Hourly system maintenance tasks"},{"name":"daily_processing","lineno":144,"docstring":"Daily knowledge processing tasks"},{"name":"weekly_optimization","lineno":174,"docstring":"Weekly system optimization tasks"},{"name":"monthly_quality_review","lineno":204,"docstring":"Monthly comprehensive quality review"},{"name":"assess_system_health","lineno":234,"docstring":"Assess current system health with real metrics"},{"name":"run_memory_processing","lineno":297,"docstring":"Run memory to concepts processing"},{"name":"run_relationship_discovery","lineno":328,"docstring":"Run relationship discovery process"},{"name":"get_recent_operations","lineno":359,"docstring":"Get recent operations for analysis"},{"name":"calculate_current_data_quality","lineno":372,"docstring":"Calculate current data quality score"},{"name":"store_health_metrics","lineno":390,"docstring":"Store health metrics in database"},{"name":"store_daily_report","lineno":403,"docstring":"Store daily processing report"},{"name":"analyze_weekly_performance","lineno":422,"docstring":"Analyze performance trends over the past week"},{"name":"identify_optimization_opportunities","lineno":461,"docstring":"Identify real optimization opportunities"},{"name":"apply_safe_optimizations","lineno":513,"docstring":"Apply safe, incremental optimizations"},{"name":"shutdown_gracefully","lineno":543,"docstring":"Shutdown continuous operation gracefully"}],"docstring":"Manages continuous operation of knowledge management system.\n\nReal capabilities:\n- Scheduled processing tasks\n- System health monitoring\n- Performance tracking\n- Quality improvement identification\n\nHonest limitations:\n- This is task automation, not autonomous intelligence\n- Improvements are incremental, not revolutionary\n- Success measured by system metrics, not intelligence metrics","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/production_deployment.py","name":"ProductionDeploymentManager","data":{"name":"ProductionDeploymentManager","file_path":"libs/opsvi-asea/opsvi_asea/tools/knowledge_management/production_deployment.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":45,"docstring":null},{"name":"deploy_to_production","lineno":54,"docstring":"Deploy validated improvements to production"},{"name":"validate_pre_deployment","lineno":120,"docstring":"Validate system is ready for production deployment"},{"name":"create_production_structure","lineno":185,"docstring":"Create production directory structure"},{"name":"deploy_processing_scripts","lineno":203,"docstring":"Deploy processing scripts to production"},{"name":"deploy_monitoring_tools","lineno":223,"docstring":"Deploy monitoring and continuous operation tools"},{"name":"deploy_documentation","lineno":234,"docstring":"Deploy documentation to production"},{"name":"setup_production_configuration","lineno":255,"docstring":"Set up production configuration"},{"name":"validate_post_deployment","lineno":301,"docstring":"Validate deployment was successful"},{"name":"generate_production_readme","lineno":363,"docstring":"Generate production README"},{"name":"save_deployment_report","lineno":442,"docstring":"Save deployment report"}],"docstring":"Manages deployment of real knowledge management improvements.\n\nReal capabilities being deployed:\n- Automated memory processing\n- Relationship discovery\n- System monitoring\n- Quality maintenance\n\nNOT deploying:\n- Fabricated intelligence enhancements\n- Inflated autonomous capabilities\n- Revolutionary AI breakthroughs","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/__init__.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/__init__.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the agent registry."},{"name":"_register_default_agents","lineno":34,"docstring":"Register the default set of agents."},{"name":"register_agent","lineno":52,"docstring":"Register an agent class for a specific role.\n\nArgs:\n    role: The agent role\n    agent_class: The agent class to register"},{"name":"get_agent","lineno":61,"docstring":"Get an agent instance for the specified role.\n\nArgs:\n    role: The agent role\n    **kwargs: Additional arguments to pass to the agent constructor\n\nReturns:\n    Agent instance\n\nRaises:\n    KeyError: If no agent is registered for the role"},{"name":"list_agents","lineno":80,"docstring":"List all registered agents.\n\nReturns:\n    List of registered agent roles"},{"name":"has_agent","lineno":88,"docstring":"Check if an agent is registered for the role.\n\nArgs:\n    role: The agent role to check\n\nReturns:\n    True if an agent is registered for the role"},{"name":"register_repair_agent","lineno":99,"docstring":"Register a repair agent.\n\nArgs:\n    name: The repair agent name\n    agent_class: The repair agent class to register"},{"name":"get_repair_agent","lineno":108,"docstring":"Get a repair agent instance by name.\n\nArgs:\n    name: The repair agent name\n    **kwargs: Additional arguments to pass to the agent constructor\n\nReturns:\n    Repair agent instance\n\nRaises:\n    KeyError: If no repair agent is registered with the name"},{"name":"get_all_repair_agents","lineno":127,"docstring":"Get all registered repair agents.\n\nArgs:\n    **kwargs: Additional arguments to pass to agent constructors\n\nReturns:\n    List of repair agent instances"},{"name":"list_repair_agents","lineno":138,"docstring":"List all registered repair agents.\n\nReturns:\n    List of registered repair agent names"},{"name":"has_repair_agent","lineno":146,"docstring":"Check if a repair agent is registered with the name.\n\nArgs:\n    name: The repair agent name to check\n\nReturns:\n    True if a repair agent is registered with the name"},{"name":"_register_repair_agents","lineno":157,"docstring":"Register repair agents with lazy imports."}],"docstring":"Registry for managing all available agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/architect_agent.py","name":"ArchitectAgent","data":{"name":"ArchitectAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/architect_agent.py","lineno":97,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":100,"docstring":"Initialize the architect agent."}],"docstring":"Agent responsible for architecture design tasks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/assurance_orchestrator.py","name":"RepairLoopState","data":{"name":"RepairLoopState","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/assurance_orchestrator.py","lineno":25,"bases":["BaseModel"],"methods":[],"docstring":"State of a repair loop iteration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/assurance_orchestrator.py","name":"AssuranceOrchestrator","data":{"name":"AssuranceOrchestrator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/assurance_orchestrator.py","lineno":47,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":"Initialize the assurance orchestrator."},{"name":"_find_repair_agent","lineno":260,"docstring":"Find the appropriate repair agent for a patch item."},{"name":"_get_capability_for_action","lineno":274,"docstring":"Get the repair capability for a given action."},{"name":"get_repair_agents","lineno":345,"docstring":"Get list of available repair agents."},{"name":"add_repair_agent","lineno":349,"docstring":"Add a repair agent to the orchestrator."},{"name":"get_orchestrator_id","lineno":353,"docstring":"Get the orchestrator ID."}],"docstring":"Orchestrates the repair loop between critic and repair agents.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_agent.py","name":"AgentResponse","data":{"name":"AgentResponse","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_agent.py","lineno":28,"bases":["BaseModel"],"methods":[],"docstring":"Response from an agent execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_agent.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_agent.py","lineno":50,"bases":["ABC"],"methods":[{"name":"__init__","lineno":53,"docstring":"Initialize the base agent.\n\nArgs:\n    role: The role of this agent\n    neo4j_client: Optional Neo4j client for lineage tracking\n    logger: Optional logger instance\n    prompt_gateway: Optional PromptGateway for LLM integration\n    context_store: Optional ContextStore for context management"},{"name":"_log_decision","lineno":223,"docstring":"Log a decision made by the agent.\n\nArgs:\n    task_execution: The task execution instance\n    decision: Description of the decision made\n    confidence: Confidence level (0.0 to 1.0)\n    params: Additional parameters for the decision"}],"docstring":"Base class for all agents in the autonomous software factory.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","name":"RepairResult","data":{"name":"RepairResult","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","lineno":16,"bases":["BaseModel"],"methods":[],"docstring":"Result of a repair operation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","name":"RepairRequest","data":{"name":"RepairRequest","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","lineno":45,"bases":["BaseModel"],"methods":[],"docstring":"Request for repair operation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","name":"BaseRepairAgent","data":{"name":"BaseRepairAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/base_repair_agent.py","lineno":59,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":62,"docstring":"Initialize the repair agent."},{"name":"can_repair","lineno":228,"docstring":"Check if this agent can repair the given issue type."},{"name":"get_repair_capabilities","lineno":232,"docstring":"Get list of repair capabilities for this agent."},{"name":"get_agent_role","lineno":236,"docstring":"Get the agent role."},{"name":"get_agent_id","lineno":240,"docstring":"Get the agent ID."}],"docstring":"Base class for repair agents that fix issues identified by critic evaluation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/coder_agent.py","name":"CoderAgent","data":{"name":"CoderAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/coder_agent.py","lineno":65,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the coder agent."}],"docstring":"Agent responsible for code generation and project scaffolding.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/concrete_repair_agent.py","name":"ConcreteRepairAgent","data":{"name":"ConcreteRepairAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/concrete_repair_agent.py","lineno":12,"bases":["BaseRepairAgent"],"methods":[{"name":"__init__","lineno":15,"docstring":null}],"docstring":"Concrete implementation of repair agent with actual repair capabilities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/critic_agent.py","name":"CriticAgentConfig","data":{"name":"CriticAgentConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/critic_agent.py","lineno":22,"bases":["BaseModel"],"methods":[],"docstring":"Configuration for the critic agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/critic_agent.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/critic_agent.py","lineno":65,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the critic agent."},{"name":"_generate_patch_plan","lineno":164,"docstring":"Generate a patch plan based on policy failures."},{"name":"get_agent_role","lineno":330,"docstring":"Get the agent role."},{"name":"get_agent_id","lineno":334,"docstring":"Get the agent ID."}],"docstring":"Agent responsible for evaluating artifacts and generating critiques.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/perf_opt_agent.py","name":"PerfOptAgent","data":{"name":"PerfOptAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/perf_opt_agent.py","lineno":36,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the performance optimization agent."},{"name":"_is_pattern_relevant","lineno":413,"docstring":"Check if an optimization pattern is relevant to the current profile."},{"name":"_calculate_priority","lineno":441,"docstring":"Calculate priority for an optimization suggestion."},{"name":"_generate_code_example","lineno":469,"docstring":"Generate a code example for the optimization pattern."},{"name":"_estimate_improvement","lineno":559,"docstring":"Estimate the improvement from applying an optimization pattern."},{"name":"_prioritize_suggestions","lineno":590,"docstring":"Prioritize optimization suggestions."},{"name":"_estimate_total_improvement","lineno":603,"docstring":"Estimate total improvement from all suggestions."},{"name":"_format_response","lineno":623,"docstring":"Format the response as a readable string."}],"docstring":"Agent for analyzing performance bottlenecks and suggesting optimizations.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/perf_smoke_agent.py","name":"PerfSmokeAgent","data":{"name":"PerfSmokeAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/perf_smoke_agent.py","lineno":42,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":45,"docstring":"Initialize the performance smoke test agent."},{"name":"_parse_targets","lineno":234,"docstring":"Parse performance targets from input dictionary."},{"name":"_validate_performance","lineno":257,"docstring":"Validate performance metrics against targets."},{"name":"_generate_recommendations","lineno":270,"docstring":"Generate performance improvement recommendations."},{"name":"_format_response","lineno":322,"docstring":"Format the response as a readable string."}],"docstring":"Agent for running performance smoke tests and validating basic runtime performance.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/planner_agent.py","name":"BrainstormingOutput","data":{"name":"BrainstormingOutput","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/planner_agent.py","lineno":37,"bases":["BaseModel"],"methods":[],"docstring":"Structured output for brainstorming tasks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/planner_agent.py","name":"PlannerAgent","data":{"name":"PlannerAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/planner_agent.py","lineno":55,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":58,"docstring":"Initialize the planner agent."}],"docstring":"Agent responsible for planning and brainstorming tasks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/security_validator.py","name":"SecurityValidator","data":{"name":"SecurityValidator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/security_validator.py","lineno":52,"bases":["BaseRepairAgent"],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize the security validator agent."},{"name":"_extract_code_from_artifact","lineno":180,"docstring":"Extract code content from artifact."},{"name":"_scan_for_security_issues","lineno":188,"docstring":"Scan code for security issues."},{"name":"_find_secret_exposures","lineno":240,"docstring":"Find secret exposures in code."},{"name":"_find_injection_vulnerabilities","lineno":263,"docstring":"Find injection vulnerabilities in code."},{"name":"_find_authentication_issues","lineno":289,"docstring":"Find authentication-related issues."},{"name":"_find_authorization_issues","lineno":317,"docstring":"Find authorization-related issues."},{"name":"_find_data_exposures","lineno":355,"docstring":"Find data exposure issues."},{"name":"_find_function_end","lineno":385,"docstring":"Find the end of a function starting at start_line."},{"name":"_filter_relevant_issues","lineno":396,"docstring":"Filter issues based on the requested issue type."},{"name":"_create_security_fix_prompt","lineno":438,"docstring":"Create prompt for fixing security issues."},{"name":"_apply_basic_security_fixes","lineno":487,"docstring":"Apply basic security fixes that don't require AI."},{"name":"_create_fixed_artifact","lineno":510,"docstring":"Create a new artifact with the fixed code."},{"name":"_calculate_hash","lineno":532,"docstring":"Calculate hash for the content."},{"name":"_calculate_confidence","lineno":538,"docstring":"Calculate confidence in the security repair."}],"docstring":"Agent for security compliance validation and vulnerability scanning.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/specifier_agent.py","name":"SpecifierAgent","data":{"name":"SpecifierAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/specifier_agent.py","lineno":83,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":86,"docstring":"Initialize the specifier agent."}],"docstring":"Agent responsible for requirements and specifications tasks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/syntax_fixer.py","name":"SyntaxFixer","data":{"name":"SyntaxFixer","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/syntax_fixer.py","lineno":39,"bases":["BaseRepairAgent"],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize the syntax fixer agent."},{"name":"_extract_code_from_artifact","lineno":128,"docstring":"Extract code content from artifact."},{"name":"_analyze_code_issues","lineno":136,"docstring":"Analyze code for specific issues."},{"name":"_find_syntax_errors","lineno":157,"docstring":"Find syntax errors in the code."},{"name":"_find_formatting_issues","lineno":186,"docstring":"Find formatting issues in the code."},{"name":"_find_import_issues","lineno":228,"docstring":"Find import-related issues in the code."},{"name":"_find_indentation_errors","lineno":253,"docstring":"Find indentation errors in the code."},{"name":"_create_fix_prompt","lineno":305,"docstring":"Create prompt for fixing code issues."},{"name":"_apply_basic_fixes","lineno":348,"docstring":"Apply basic fixes that don't require AI."},{"name":"_validate_syntax","lineno":370,"docstring":"Validate that the code has correct Python syntax."},{"name":"_create_fixed_artifact","lineno":378,"docstring":"Create a new artifact with the fixed code."},{"name":"_calculate_hash","lineno":400,"docstring":"Calculate hash for the content."},{"name":"_calculate_confidence","lineno":406,"docstring":"Calculate confidence in the repair."}],"docstring":"Agent for fixing Python syntax errors, formatting issues, and import problems.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/tester_agent.py","name":"TesterAgent","data":{"name":"TesterAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/agents/tester_agent.py","lineno":39,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize the tester agent."}],"docstring":"Agent responsible for test generation and execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","name":"AgentStatus","data":{"name":"AgentStatus","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","lineno":14,"bases":["Enum"],"methods":[],"docstring":"Status of agent task execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","name":"AgentTask","data":{"name":"AgentTask","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","lineno":25,"bases":[],"methods":[],"docstring":"Represents a task to be executed by an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","name":"AgentCoordinator","data":{"name":"AgentCoordinator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/agent_coordinator.py","lineno":42,"bases":[],"methods":[{"name":"__init__","lineno":49,"docstring":null},{"name":"add_task","lineno":57,"docstring":"Add a task to the coordination queue.\n\nArgs:\n    task: Agent task to add"},{"name":"add_tasks","lineno":66,"docstring":"Add multiple tasks to the coordination queue.\n\nArgs:\n    tasks: List of agent tasks to add"},{"name":"calculate_execution_order","lineno":75,"docstring":"Calculate execution order based on dependencies.\n\nUses topological sort to determine the correct execution order\nbased on task dependencies.\n\nReturns:\n    List of task IDs in execution order"},{"name":"calculate_execution_phases","lineno":116,"docstring":"Calculate execution phases for parallel execution.\n\nGroups tasks into phases where tasks in the same phase\ncan be executed in parallel.\n\nReturns:\n    Dictionary mapping task_id to phase number"},{"name":"get_task_status","lineno":311,"docstring":"Get status of a specific task.\n\nArgs:\n    task_id: Task ID\n\nReturns:\n    Task status or None if not found"},{"name":"get_workflow_status","lineno":324,"docstring":"Get overall workflow status.\n\nReturns:\n    Dictionary containing workflow status information"},{"name":"cancel_workflow","lineno":358,"docstring":"Cancel all running tasks in the workflow.\n\nReturns:\n    True if cancellation was successful"}],"docstring":"Coordinates multi-agent workflow execution.\n\nThis class manages the execution of multiple agents in a coordinated\nmanner, handling dependencies, parallel execution, and result collection.","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dependency_container.py","name":"DependencyContainer","data":{"name":"DependencyContainer","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dependency_container.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":"Initialize the dependency container."},{"name":"register_service","lineno":26,"docstring":"Register a service instance.\n\nArgs:\n    name: Service name\n    service: Service instance"},{"name":"register_factory","lineno":36,"docstring":"Register a service factory.\n\nArgs:\n    name: Service name\n    factory: Factory function to create service"},{"name":"register_singleton","lineno":46,"docstring":"Register a singleton service factory.\n\nArgs:\n    name: Service name\n    factory: Factory function to create service (called only once)"},{"name":"get_service","lineno":56,"docstring":"Get a service by name.\n\nArgs:\n    name: Service name\n\nReturns:\n    Service instance\n\nRaises:\n    KeyError: If service not found"},{"name":"has_service","lineno":93,"docstring":"Check if a service exists.\n\nArgs:\n    name: Service name\n\nReturns:\n    True if service exists"},{"name":"inject","lineno":108,"docstring":"Decorator to inject a service into a function or method.\n\nArgs:\n    service_name: Name of the service to inject\n\nReturns:\n    Decorator function"},{"name":"clear","lineno":134,"docstring":"Clear all registered services."}],"docstring":"Dependency injection container for managing component dependencies.\n\nThis container provides a service locator pattern to manage dependencies\nand break circular imports by using lazy loading and dependency injection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dsl_processor.py","name":"AutoRepairConfig","data":{"name":"AutoRepairConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dsl_processor.py","lineno":79,"bases":["BaseModel"],"methods":[],"docstring":"Configuration for auto-repair.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dsl_processor.py","name":"DSLProcessor","data":{"name":"DSLProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/dsl_processor.py","lineno":97,"bases":[],"methods":[{"name":"__init__","lineno":100,"docstring":"Initialize DSL processor."},{"name":"_load_config","lineno":106,"docstring":"Load configuration from YAML file."},{"name":"get_reasoning_config","lineno":125,"docstring":"Get reasoning configuration."},{"name":"get_knowledge_config","lineno":129,"docstring":"Get knowledge configuration."},{"name":"get_quality_gates_config","lineno":133,"docstring":"Get quality gates configuration."},{"name":"get_auto_repair_config","lineno":137,"docstring":"Get auto-repair configuration."},{"name":"apply_reasoning_knobs","lineno":141,"docstring":"Apply reasoning knobs to execution context."},{"name":"apply_knowledge_knobs","lineno":161,"docstring":"Apply knowledge knobs to execution context."},{"name":"apply_quality_gate_knobs","lineno":180,"docstring":"Apply quality gate knobs to execution context."},{"name":"apply_auto_repair_knobs","lineno":197,"docstring":"Apply auto-repair knobs to execution context."},{"name":"apply_all_knobs","lineno":214,"docstring":"Apply all DSL knobs to execution context."},{"name":"validate_config","lineno":222,"docstring":"Validate current configuration and return any issues."},{"name":"reload_config","lineno":247,"docstring":"Reload configuration from file."},{"name":"get_config_summary","lineno":252,"docstring":"Get a summary of the current configuration."}],"docstring":"Processor for DSL configuration and knob management.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"OrchestrationError","data":{"name":"OrchestrationError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":6,"bases":["Exception"],"methods":[{"name":"__init__","lineno":9,"docstring":null}],"docstring":"Error raised during orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"PipelineError","data":{"name":"PipelineError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":16,"bases":["Exception"],"methods":[{"name":"__init__","lineno":19,"docstring":null}],"docstring":"Error raised during pipeline execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"TaskExecutionError","data":{"name":"TaskExecutionError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":25,"bases":["Exception"],"methods":[{"name":"__init__","lineno":28,"docstring":null}],"docstring":"Error raised during task execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":34,"bases":["Exception"],"methods":[{"name":"__init__","lineno":37,"docstring":null}],"docstring":"Error raised during validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"ResourceError","data":{"name":"ResourceError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":43,"bases":["Exception"],"methods":[{"name":"__init__","lineno":46,"docstring":null}],"docstring":"Error raised when resources are insufficient.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","name":"TimeoutError","data":{"name":"TimeoutError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/exceptions.py","lineno":52,"bases":["Exception"],"methods":[{"name":"__init__","lineno":55,"docstring":null}],"docstring":"Error raised when operations timeout.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","name":"ExecutionCoordinator","data":{"name":"ExecutionCoordinator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":"Initialize the Execution Coordinator.\n\nArgs:\n    max_concurrent_tasks: Maximum number of concurrent tasks"},{"name":"_group_by_dependencies","lineno":301,"docstring":"Group tasks by their dependency level.\n\nArgs:\n    tasks: List of tasks to group\n\nReturns:\n    Dictionary mapping dependency level to list of tasks"},{"name":"_create_dag_node_from_task","lineno":368,"docstring":"Create a mock DAG node from a task execution.\n\nArgs:\n    task: Task execution to convert\n\nReturns:\n    Mock DAG node object"},{"name":"get_execution_stats","lineno":392,"docstring":"Get execution coordination statistics.\n\nReturns:\n    Dictionary with execution statistics"}],"docstring":"Coordinate parallel and sequential task execution.\n\nThis component provides the missing coordination functionality for\nparallel and sequential task execution identified in the gap analysis.","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","name":"DependencyError","data":{"name":"DependencyError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","lineno":408,"bases":["Exception"],"methods":[],"docstring":"Exception raised when task dependencies are not met.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","name":"CriticalTaskFailure","data":{"name":"CriticalTaskFailure","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/execution_coordinator.py","lineno":414,"bases":["Exception"],"methods":[],"docstring":"Exception raised when a critical task fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","name":"OrchestrationStatus","data":{"name":"OrchestrationStatus","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","lineno":55,"bases":["str","Enum"],"methods":[],"docstring":"Status of orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","name":"OrchestrationContext","data":{"name":"OrchestrationContext","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","lineno":66,"bases":["BaseModel"],"methods":[],"docstring":"Context for orchestration execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","name":"MetaOrchestrator","data":{"name":"MetaOrchestrator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/meta_orchestrator.py","lineno":96,"bases":[],"methods":[{"name":"__init__","lineno":99,"docstring":"Initialize the meta orchestrator."},{"name":"_load_dsl_config","lineno":121,"docstring":"Load DSL configuration and emit metrics."},{"name":"_should_attempt_repair","lineno":409,"docstring":"Determine if auto-repair should be attempted."},{"name":"_calculate_execution_order","lineno":458,"docstring":"Calculate execution order for DAG nodes."},{"name":"_validate_pipeline_config","lineno":788,"docstring":"Validate pipeline configuration."},{"name":"_validate_dependencies","lineno":952,"docstring":"Validate DAG dependency correctness and detect circular dependencies.\n\nArgs:\n    dag: The execution DAG to validate\n\nRaises:\n    ValidationError: If dependencies are invalid or circular"},{"name":"_can_retry_task","lineno":1095,"docstring":"Determine if a task can be retried based on error type and context.\n\nArgs:\n    error: The orchestration error\n    context: The orchestration context\n\nReturns:\n    True if task can be retried, False otherwise"},{"name":"_validate_artifacts","lineno":1140,"docstring":"Validate artifacts (inputs/outputs) for correctness and completeness.\n\nArgs:\n    context: The orchestration context containing artifacts\n\nRaises:\n    ValidationError: If artifacts are invalid"},{"name":"_calculate_execution_phases","lineno":1603,"docstring":"Calculate execution phases for DAG nodes based on dependencies.\n\nArgs:\n    dag: The execution DAG\n\nReturns:\n    Mapping of node ID to execution phase"}],"docstring":"Meta orchestrator for coordinating pipeline execution.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/registry.py","name":"TaskRegistryManager","data":{"name":"TaskRegistryManager","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/registry.py","lineno":45,"bases":[],"methods":[{"name":"__init__","lineno":61,"docstring":null},{"name":"_validate_task_definition","lineno":193,"docstring":"Sanity checks to guarantee the TaskDefinition is well-formed."},{"name":"__len__","lineno":653,"docstring":"Number of tasks currently in memory."},{"name":"__contains__","lineno":657,"docstring":"`\"compile\"` in task_registry."}],"docstring":"Manages all TaskDefinition objects for the Auto Forge runtime.\n\nThe registry operates in two tiers:\n    1. In-memory – ultra-fast look-ups for hot tasks\n    2. Neo4j     – durable, shareable storage\n\nThe calling code *must* invoke `await initialize()` during application\nstart-up.  This keeps imports cheap (no I/O) and lets application\nowners choose when to do blocking work.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_collector.py","name":"ResultCollector","data":{"name":"ResultCollector","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_collector.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":"Initialize the Result Collector.\n\nArgs:\n    neo4j_client: Neo4j client for result persistence"},{"name":"_extract_metrics","lineno":98,"docstring":"Extract performance and quality metrics from raw result.\n\nArgs:\n    raw_result: Raw result from Celery task\n\nReturns:\n    Dictionary of extracted metrics"},{"name":"_validate_result","lineno":146,"docstring":"Validate and clean raw result structure.\n\nArgs:\n    raw_result: Raw result from Celery task\n\nReturns:\n    Validated and cleaned result"},{"name":"_determine_status","lineno":188,"docstring":"Determine task status from validated result.\n\nArgs:\n    validated_result: Validated result data\n\nReturns:\n    TaskStatus enum value"},{"name":"_calculate_score","lineno":215,"docstring":"Calculate overall score for the task result.\n\nArgs:\n    validated_result: Validated result data\n    metrics: Extracted metrics\n\nReturns:\n    Score between 0.0 and 1.0"}],"docstring":"Collect and process task execution results.\n\nThis component provides the missing systematic result collection and\nprocessing functionality identified in the gap analysis.","agent_type":"collector"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_collector.py","name":"ResultProcessingError","data":{"name":"ResultProcessingError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_collector.py","lineno":431,"bases":["Exception"],"methods":[],"docstring":"Exception raised for result processing errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_processor.py","name":"ResultProcessor","data":{"name":"ResultProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/result_processor.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"get_processed_results_count","lineno":388,"docstring":"Get count of processed results.\n\nReturns:\n    Number of processed results"},{"name":"clear_processed_results","lineno":396,"docstring":"Clear processed results from memory."}],"docstring":"Processes and stores task execution results.\n\nThis class handles the collection, processing, and storage of\ntask execution results, including status updates and lineage tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","name":"TaskRoutingError","data":{"name":"TaskRoutingError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","lineno":828,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task routing errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","name":"TaskExecutionError","data":{"name":"TaskExecutionError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","lineno":834,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task execution errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","name":"TaskResultError","data":{"name":"TaskResultError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/router.py","lineno":840,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task result processing errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_execution_bridge.py","name":"TaskExecutionBridge","data":{"name":"TaskExecutionBridge","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_execution_bridge.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"execution_engine","lineno":30,"docstring":"Get the task execution engine with lazy loading."},{"name":"get_task_status","lineno":299,"docstring":"Get status of a task.\n\nArgs:\n    node_id: Node ID\n\nReturns:\n    Task status or None if not found"},{"name":"cancel_task","lineno":314,"docstring":"Cancel a running task.\n\nArgs:\n    node_id: Node ID to cancel\n\nReturns:\n    True if cancelled successfully"},{"name":"get_active_tasks","lineno":333,"docstring":"Get all active task IDs and their statuses.\n\nReturns:\n    Dictionary mapping node_id to task status"},{"name":"cleanup_completed_tasks","lineno":341,"docstring":"Clean up completed tasks from memory."}],"docstring":"Bridge between orchestration and Celery task execution.\n\nThis class provides asynchronous task execution capabilities,\nfixing the critical issue where celery_task.get() was called\nimmediately after task submission, making it synchronous.\n\nEnhanced to work with the new TaskExecutionEngine and dependency injection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_execution_engine.py","name":"TaskExecutionError","data":{"name":"TaskExecutionError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_execution_engine.py","lineno":539,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task execution errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_models.py","name":"TaskRegistry","data":{"name":"TaskRegistry","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_models.py","lineno":184,"bases":["BaseModel"],"methods":[{"name":"register_task","lineno":190,"docstring":"Register a task definition."},{"name":"get_task","lineno":194,"docstring":"Get a task definition by name."},{"name":"list_tasks","lineno":198,"docstring":"List all registered task names."},{"name":"remove_task","lineno":202,"docstring":"Remove a task definition."}],"docstring":"Registry of available task definitions.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_router.py","name":"TaskRouter","data":{"name":"TaskRouter","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_router.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":22,"docstring":"Initialize the Task Router with queue mappings and priorities."},{"name":"route_task","lineno":62,"docstring":"Route task to appropriate queue based on multiple factors.\n\nArgs:\n    task_execution: Task execution to route\n\nReturns:\n    Queue name to route the task to"},{"name":"route_task_by_agent","lineno":130,"docstring":"Route task based on agent type only.\n\nArgs:\n    agent_type: Type of agent\n\nReturns:\n    Queue name"},{"name":"route_task_by_type","lineno":141,"docstring":"Route task based on task type only.\n\nArgs:\n    task_type: Type of task\n\nReturns:\n    Queue name"},{"name":"get_queue_priority","lineno":152,"docstring":"Get priority level for a queue.\n\nArgs:\n    queue_name: Name of the queue\n\nReturns:\n    Priority level (higher number = higher priority)"},{"name":"get_queue_capacity","lineno":163,"docstring":"Get capacity limit for a queue.\n\nArgs:\n    queue_name: Name of the queue\n\nReturns:\n    Capacity limit"},{"name":"set_queue_loads","lineno":174,"docstring":"Set current queue loads for capacity-aware routing.\n\nArgs:\n    queue_loads: Dictionary mapping queue names to current load"},{"name":"_find_alternative_queue","lineno":182,"docstring":"Find alternative queue when preferred queue is at capacity.\n\nArgs:\n    preferred_queue: Preferred queue name\n    queue_loads: Current queue loads\n\nReturns:\n    Alternative queue name or None if none available"},{"name":"get_routing_stats","lineno":216,"docstring":"Get routing statistics and configuration.\n\nReturns:\n    Dictionary with routing statistics"},{"name":"update_queue_mapping","lineno":232,"docstring":"Update queue mapping for an agent type.\n\nArgs:\n    agent_type: Agent type to update\n    queue_name: New queue name"},{"name":"update_queue_capacity","lineno":245,"docstring":"Update capacity for a queue.\n\nArgs:\n    queue_name: Queue name to update\n    capacity: New capacity limit"}],"docstring":"Intelligent task routing to appropriate Celery queues.\n\nThis component provides the missing intelligent task routing functionality\nidentified in the gap analysis, ensuring tasks are routed to appropriate\nqueues based on multiple factors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_router.py","name":"TaskRoutingError","data":{"name":"TaskRoutingError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_router.py","lineno":259,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task routing errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_state_manager.py","name":"TaskStateError","data":{"name":"TaskStateError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/orchestrator/task_state_manager.py","lineno":362,"bases":["Exception"],"methods":[],"docstring":"Exception raised for task state management errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"ConfigError","data":{"name":"ConfigError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":15,"bases":["ResearchError"],"methods":[],"docstring":"Raised when configuration is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"ClientError","data":{"name":"ClientError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":19,"bases":["ResearchError"],"methods":[{"name":"__init__","lineno":22,"docstring":null}],"docstring":"Raised when MCP client operations fail.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"OrchestrationError","data":{"name":"OrchestrationError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":29,"bases":["ResearchError"],"methods":[],"docstring":"Raised when orchestration of multiple clients fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":33,"bases":["ResearchError"],"methods":[],"docstring":"Raised when data validation fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"PersistenceError","data":{"name":"PersistenceError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":37,"bases":["ResearchError"],"methods":[],"docstring":"Raised when persistence operations fail.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","name":"SynthesisError","data":{"name":"SynthesisError","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/errors.py","lineno":41,"bases":["ResearchError"],"methods":[],"docstring":"Raised when research synthesis fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/orchestrator.py","name":"ResearchOrchestrator","data":{"name":"ResearchOrchestrator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/orchestrator.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null}],"docstring":"Orchestrates research across multiple MCP clients.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/workflows/main_research_workflow.py","name":"MainResearchWorkflow","data":{"name":"MainResearchWorkflow","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/application/research/workflows/main_research_workflow.py","lineno":32,"bases":[],"methods":[{"name":"__init__","lineno":35,"docstring":null},{"name":"_initialize_steps","lineno":97,"docstring":"Initialize workflow steps."},{"name":"_get_step","lineno":134,"docstring":"Get a workflow step by name."},{"name":"get_workflow_status","lineno":320,"docstring":"Get the current status of the workflow."}],"docstring":"Main research workflow with advanced features, fault tolerance, and progress tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":22,"bases":["str","Enum"],"methods":[],"docstring":"Agent roles in the autonomous factory.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"Critique","data":{"name":"Critique","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":123,"bases":["BaseEntity"],"methods":[],"docstring":"Critique of a task result by the critic agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"Decision","data":{"name":"Decision","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":137,"bases":["BaseEntity"],"methods":[],"docstring":"Decision made by an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"Project","data":{"name":"Project","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":189,"bases":["BaseEntity"],"methods":[],"docstring":"Project being developed by the autonomous factory.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"Run","data":{"name":"Run","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":205,"bases":["BaseEntity"],"methods":[],"docstring":"A single run of the autonomous factory pipeline.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"ModelConfig","data":{"name":"ModelConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":237,"bases":["BaseModel"],"methods":[],"docstring":"Configuration for AI model usage.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","name":"AgentConfig","data":{"name":"AgentConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/models.py","lineno":251,"bases":["BaseModel"],"methods":[],"docstring":"Configuration for an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/validators.py","name":"ConfigValidator","data":{"name":"ConfigValidator","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/config/validators.py","lineno":268,"bases":[],"methods":[{"name":"__init__","lineno":271,"docstring":"Initialize validator."},{"name":"validate_dsl_config","lineno":276,"docstring":"Validate DSL configuration."},{"name":"validate_pipeline_config","lineno":280,"docstring":"Validate pipeline configuration."},{"name":"validate_pipeline_name","lineno":284,"docstring":"Validate pipeline name."},{"name":"get_validation_report","lineno":288,"docstring":"Get comprehensive validation report."}],"docstring":"Main configuration validator.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/analyzer.py","name":"TaskAnalyzer","data":{"name":"TaskAnalyzer","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/analyzer.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":16,"docstring":"Initialize the task analyzer.\n\nArgs:\n    prompt_gateway: Optional prompt gateway for LLM analysis"},{"name":"_analyze_heuristics","lineno":106,"docstring":"Fast heuristic analysis based on task characteristics."},{"name":"_create_analysis_prompt","lineno":255,"docstring":"Create analysis prompt for LLM."},{"name":"_combine_analyses","lineno":286,"docstring":"Combine heuristic and LLM analyses."},{"name":"_estimate_cost","lineno":307,"docstring":"Estimate cost based on analysis and budget."},{"name":"_estimate_latency","lineno":335,"docstring":"Estimate latency target based on analysis."},{"name":"_generate_retrieval_hints","lineno":354,"docstring":"Generate retrieval hints for context assembly."},{"name":"_should_use_llm_analysis","lineno":420,"docstring":"Determine if LLM analysis should be used based on budget."},{"name":"_fallback_analysis","lineno":434,"docstring":"Fallback analysis when main analysis fails."}],"docstring":"Enhanced task analyzer with LLM-based analysis and heuristics.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/evidence.py","name":"Evidence","data":{"name":"Evidence","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/evidence.py","lineno":27,"bases":["BaseModel"],"methods":[],"docstring":"Evidence item supporting a claim.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/evidence.py","name":"Claim","data":{"name":"Claim","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/evidence.py","lineno":41,"bases":["BaseModel"],"methods":[],"docstring":"Claim asserted by a decision.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/interfaces.py","name":"ITaskAnalyzer","data":{"name":"ITaskAnalyzer","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/decision_kernel/interfaces.py","lineno":77,"bases":["ABC"],"methods":[],"docstring":"Abstract interface for task analyzer.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/gateway.py","name":"PromptGateway","data":{"name":"PromptGateway","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/gateway.py","lineno":18,"bases":["IPromptGateway"],"methods":[{"name":"__init__","lineno":21,"docstring":"Initialize the Prompt Gateway.\n\nArgs:\n    openai_client: OpenAI client instance\n    pga: Prompt Generation Agent"},{"name":"create_response","lineno":38,"docstring":"Create a response using DPG-enhanced prompt.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    constraints: Additional constraints\n    tools: Available tools\n    response_schema: Expected response schema\n    stream: Whether to enable streaming\n    **kwargs: Additional parameters\n\nReturns:\n    OpenAI response or stream"},{"name":"_create_repair_prompt","lineno":305,"docstring":"Create a prompt for auto-repair."},{"name":"create_with_reasoning","lineno":333,"docstring":"Create a response with reasoning using DPG.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    effort: Reasoning effort level\n    include_encrypted: Whether to include encrypted reasoning\n    constraints: Additional constraints\n    tools: Available tools\n    **kwargs: Additional parameters\n\nReturns:\n    Response with reasoning"},{"name":"create_background_task","lineno":397,"docstring":"Create a background task using DPG.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    constraints: Additional constraints\n    tools: Available tools\n    **kwargs: Additional parameters\n\nReturns:\n    Background task response"},{"name":"_compute_cache_key","lineno":455,"docstring":"Compute cache key for prompt pack.\n\nArgs:\n    prompt_pack: The prompt pack\n\nReturns:\n    Cache key"},{"name":"_apply_dpg_configurations","lineno":476,"docstring":"Apply DPG-specific configurations to OpenAI parameters.\n\nArgs:\n    openai_params: OpenAI parameters to modify\n    prompt_pack: The prompt pack"},{"name":"_process_response","lineno":509,"docstring":"Process the response and update metrics.\n\nArgs:\n    response: OpenAI response\n    prompt_pack: The prompt pack used\n    latency: Response latency"},{"name":"get_prompt_pack","lineno":559,"docstring":"Get a prompt pack by ID.\n\nArgs:\n    pack_id: Prompt pack ID\n\nReturns:\n    Prompt pack if found"},{"name":"list_recent_prompt_packs","lineno":577,"docstring":"List recent prompt packs.\n\nArgs:\n    limit: Maximum number of packs to return\n\nReturns:\n    List of recent prompt packs"},{"name":"clear_cache","lineno":593,"docstring":"Clear the prompt pack cache."},{"name":"get_stats","lineno":598,"docstring":"Get gateway statistics.\n\nReturns:\n    Dictionary with statistics"}],"docstring":"Gateway that intercepts OpenAI calls and applies DPG.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/models.py","name":"SafetyConfig","data":{"name":"SafetyConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/models.py","lineno":56,"bases":["BaseModel"],"methods":[],"docstring":"Safety and guardrail configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/pga.py","name":"PromptGenerationAgent","data":{"name":"PromptGenerationAgent","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/pga.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":"Initialize the Prompt Generation Agent.\n\nArgs:\n    neo4j_client: Neo4j client for graph queries\n    context_store: Context store for bundles\n    default_models: Default model mapping for roles/tasks"},{"name":"_select_model_and_complexity","lineno":230,"docstring":"Select appropriate model and complexity level.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    context_bundles: Context bundles\n\nReturns:\n    Tuple of (model, complexity)"},{"name":"_compress_context","lineno":270,"docstring":"Compress context bundles to fit within limits.\n\nArgs:\n    bundles: Original context bundles\n    complexity: Task complexity\n\nReturns:\n    Compressed context bundles"},{"name":"_compress_single_bundle","lineno":308,"docstring":"Compress a single context bundle.\n\nArgs:\n    bundle: Original bundle\n    available_tokens: Available token budget\n\nReturns:\n    Compressed bundle or None if too large"},{"name":"_build_messages","lineno":339,"docstring":"Build message history for the prompt.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    goal: User goal\n    bundles: Context bundles\n    constraints: Additional constraints\n\nReturns:\n    List of messages"},{"name":"_build_system_message","lineno":377,"docstring":"Build system message for the agent.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    constraints: Additional constraints\n\nReturns:\n    System message content"},{"name":"_build_context_summary","lineno":419,"docstring":"Build a summary of context bundles.\n\nArgs:\n    bundles: Context bundles\n\nReturns:\n    Context summary"},{"name":"_configure_tools","lineno":437,"docstring":"Configure tools for the prompt.\n\nArgs:\n    tools: Available tools\n\nReturns:\n    Configured tools with strict validation"},{"name":"_configure_response_format","lineno":457,"docstring":"Configure response format.\n\nArgs:\n    schema: Expected response schema\n    role: Agent role\n    task_type: Task type\n\nReturns:\n    Response format configuration"},{"name":"_configure_controls","lineno":483,"docstring":"Configure control parameters.\n\nArgs:\n    stream: Whether to enable streaming\n    model: Selected model\n    response_format: Response format\n    role: Agent role\n    task_type: Task type\n\nReturns:\n    Controls configuration"},{"name":"_configure_routing","lineno":531,"docstring":"Configure routing parameters.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    complexity: Task complexity\n    model: Selected model\n\nReturns:\n    Routing configuration"},{"name":"_configure_safety","lineno":565,"docstring":"Configure safety parameters.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    constraints: Additional constraints\n\nReturns:\n    Safety configuration"},{"name":"_estimate_tokens","lineno":595,"docstring":"Estimate total token count for the prompt pack.\n\nArgs:\n    prompt_pack: The prompt pack\n\nReturns:\n    Estimated token count"}],"docstring":"Agent responsible for generating context-aware PromptPacks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/coder.py","name":"CodeOutput","data":{"name":"CodeOutput","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/coder.py","lineno":27,"bases":["BaseModel"],"methods":[],"docstring":"Coder agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/critic.py","name":"CriticOutput","data":{"name":"CriticOutput","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/critic.py","lineno":29,"bases":["BaseModel"],"methods":[],"docstring":"Critic agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/planner.py","name":"PlanOutput","data":{"name":"PlanOutput","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/planner.py","lineno":21,"bases":["BaseModel"],"methods":[],"docstring":"Planner agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/specifier.py","name":"Constraint","data":{"name":"Constraint","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/specifier.py","lineno":17,"bases":["BaseModel"],"methods":[],"docstring":"A constraint on the system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/specifier.py","name":"SpecificationOutput","data":{"name":"SpecificationOutput","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/core/prompting/schemas/specifier.py","lineno":28,"bases":["BaseModel"],"methods":[],"docstring":"Specifier agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/openai_client.py","name":"OpenAIResponsesClient","data":{"name":"OpenAIResponsesClient","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/openai_client.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the OpenAI client.\n\nArgs:\n    api_key: OpenAI API key (defaults to OPENAI_API_KEY env var)\n    base_url: Custom base URL for the API\n    timeout: Request timeout in seconds\n    max_retries: Maximum number of retries for failed requests"},{"name":"_create_model_validator","lineno":58,"docstring":"Create model constraint validator."},{"name":"create_text","lineno":70,"docstring":"Create a plain text response.\n\nArgs:\n    model: Model to use (must be approved)\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    temperature: Sampling temperature (0-2)\n    stream: Whether to stream the response\n\nReturns:\n    Response object or streaming generator"},{"name":"create_structured","lineno":105,"docstring":"Create a structured response using Pydantic schema.\n\nArgs:\n    model: Model to use (must be approved)\n    schema: Pydantic model for structured output\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    temperature: Sampling temperature (0-2)\n    strict: Whether to enforce strict schema validation\n    parallel_tool_calls: Whether to allow parallel tool calls\n\nReturns:\n    Parsed Pydantic model instance"},{"name":"create_with_tools","lineno":179,"docstring":"Create a response with tool integration.\n\nArgs:\n    model: Model to use (must be approved)\n    tools: List of tool definitions\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    temperature: Sampling temperature (0-2)\n    stream: Whether to stream the response\n    strict_functions: Whether to enforce strict function schemas\n\nReturns:\n    Response object or streaming generator"},{"name":"create_with_reasoning","lineno":229,"docstring":"Create a response with reasoning (for o-series models).\n\nArgs:\n    model: Model to use (must be approved)\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    effort: Reasoning effort level (low, medium, high)\n    summary: Summary type (auto, manual, none)\n    include_encrypted: Whether to include encrypted reasoning\n    store: Whether to store reasoning items\n    temperature: Sampling temperature (0-2)\n\nReturns:\n    Response object with reasoning"},{"name":"stream_response","lineno":279,"docstring":"Stream a response with SSE-safe events.\n\nArgs:\n    model: Model to use (must be approved)\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    tools: Optional list of tools\n    temperature: Sampling temperature (0-2)\n\nYields:\n    Streaming events"},{"name":"create_background_task","lineno":357,"docstring":"Create a background task for long-running operations.\n\nArgs:\n    model: Model to use (must be approved)\n    input_text: Input text for the model\n    instructions: Optional system instructions\n    tools: Optional list of tools\n    temperature: Sampling temperature (0-2)\n\nReturns:\n    Response object with background task ID"},{"name":"parse_with_pydantic","lineno":393,"docstring":"Parse response using Pydantic model.\n\nArgs:\n    response: OpenAI response object\n    schema: Pydantic model for parsing\n\nReturns:\n    Parsed Pydantic model instance"},{"name":"validate_json_schema","lineno":424,"docstring":"Validate data against JSON schema.\n\nArgs:\n    data: Data to validate\n    schema: JSON schema definition\n\nReturns:\n    True if valid, raises ValidationError if invalid"},{"name":"get_request_id","lineno":445,"docstring":"Get request ID for debugging.\n\nArgs:\n    response: OpenAI response object\n\nReturns:\n    Request ID string or None"},{"name":"handle_api_error","lineno":456,"docstring":"Handle OpenAI API errors with proper logging.\n\nArgs:\n    error: Exception from OpenAI API"},{"name":"call_json","lineno":470,"docstring":"Call OpenAI with structured JSON output using Responses API."},{"name":"call_text","lineno":533,"docstring":"Call OpenAI for text output."}],"docstring":"OpenAI Responses API client with modern patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/router.py","name":"OpenAIModelConfig","data":{"name":"OpenAIModelConfig","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/router.py","lineno":25,"bases":["ModelConfig"],"methods":[],"docstring":"OpenAI-specific model configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/router.py","name":"OpenAIResponsesRouter","data":{"name":"OpenAIResponsesRouter","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/llm/router.py","lineno":40,"bases":["BaseModelRouter"],"methods":[{"name":"__init__","lineno":43,"docstring":"Initialize the router with OpenAI client."},{"name":"_load_openai_rules","lineno":49,"docstring":"Load OpenAI-specific routing rules."},{"name":"get_model_performance_stats","lineno":311,"docstring":"Get performance statistics for a model.\n\nArgs:\n    model: Model name\n    time_period: Time period for statistics\n\nReturns:\n    Performance statistics"},{"name":"get_available_models","lineno":355,"docstring":"Get list of available models.\n\nReturns:\n    List of available model names"}],"docstring":"Router for OpenAI Responses API with modern patterns.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","name":"CorrelationProcessor","data":{"name":"CorrelationProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","lineno":52,"bases":[],"methods":[{"name":"__call__","lineno":55,"docstring":null}],"docstring":"Add correlation IDs to log entries.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","name":"PerformanceProcessor","data":{"name":"PerformanceProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","lineno":71,"bases":[],"methods":[{"name":"__call__","lineno":74,"docstring":null}],"docstring":"Add performance metrics to log entries.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","name":"AuditProcessor","data":{"name":"AuditProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","lineno":87,"bases":[],"methods":[{"name":"__call__","lineno":90,"docstring":null}],"docstring":"Add audit information to log entries.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","name":"SecurityProcessor","data":{"name":"SecurityProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","lineno":100,"bases":[],"methods":[{"name":"__call__","lineno":103,"docstring":null}],"docstring":"Add security context to log entries.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","name":"DebugProcessor","data":{"name":"DebugProcessor","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/logging_config.py","lineno":116,"bases":[],"methods":[{"name":"__call__","lineno":119,"docstring":null}],"docstring":"Add debug information for development.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/metrics/system_metrics.py","name":"SystemMetricsCollector","data":{"name":"SystemMetricsCollector","file_path":"libs/opsvi-auto-forge/opsvi_auto_forge/auto_forge/infrastructure/monitoring/metrics/system_metrics.py","lineno":95,"bases":[],"methods":[{"name":"__init__","lineno":98,"docstring":null},{"name":"collect","lineno":102,"docstring":"Collect system metrics."}],"docstring":"Custom metrics collector for system-specific metrics.","agent_type":"collector"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","name":"AgentHubResponse","data":{"name":"AgentHubResponse","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","lineno":38,"bases":[],"methods":[],"docstring":"Response from Agent Hub execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","name":"AgentSelection","data":{"name":"AgentSelection","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","lineno":61,"bases":["Enum"],"methods":[],"docstring":"Agent Hub agent types","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","name":"AgentHubClient","data":{"name":"AgentHubClient","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","lineno":77,"bases":[],"methods":[{"name":"__init__","lineno":80,"docstring":null},{"name":"_prepare_agent_params","lineno":154,"docstring":"Prepare agent-specific parameters based on context analysis"}],"docstring":"Client for Agent Hub API communication","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","name":"CollaborationInterface","data":{"name":"CollaborationInterface","file_path":"libs/opsvi-communication/opsvi_communication/collaboration_framework.py","lineno":401,"bases":[],"methods":[{"name":"__init__","lineno":404,"docstring":null},{"name":"_calculate_performance_metrics","lineno":560,"docstring":"Calculate performance metrics for this collaboration"},{"name":"_update_performance_metrics","lineno":601,"docstring":"Update overall performance metrics"},{"name":"_evaluate_pattern_effectiveness","lineno":619,"docstring":"Evaluate how effective the applied patterns were"},{"name":"_evaluate_context_accuracy","lineno":635,"docstring":"Evaluate how accurate the context analysis was"},{"name":"_discover_new_patterns","lineno":648,"docstring":"Discover new patterns from this collaboration"},{"name":"_calculate_prediction_accuracy","lineno":668,"docstring":"Calculate how accurate our predictions were"},{"name":"_analyze_agent_effectiveness","lineno":677,"docstring":"Analyze which agents are most effective"},{"name":"_analyze_pattern_accuracy","lineno":711,"docstring":"Analyze pattern prediction accuracy"},{"name":"_identify_optimization_opportunities","lineno":733,"docstring":"Identify opportunities for system optimization"},{"name":"_generate_system_improvements","lineno":771,"docstring":"Generate specific system improvement recommendations"},{"name":"_calculate_recent_success_rate","lineno":808,"docstring":"Calculate success rate for recent collaborations"}],"docstring":"Main interface for Agent Collaboration Framework","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","name":"RegistrationStatus","data":{"name":"RegistrationStatus","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","lineno":23,"bases":["Enum"],"methods":[],"docstring":"Agent registration status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","name":"AgentRegistration","data":{"name":"AgentRegistration","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","lineno":34,"bases":[],"methods":[{"name":"is_healthy","lineno":47,"docstring":"Check if agent is considered healthy based on heartbeat."},{"name":"should_heartbeat","lineno":57,"docstring":"Check if agent should send a heartbeat."}],"docstring":"Agent registration information.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"libs/opsvi-coordination/opsvi_coordination/agent_registry.py","lineno":68,"bases":[],"methods":[{"name":"__init__","lineno":76,"docstring":"Initialize agent registry."},{"name":"find_agents_by_capability","lineno":313,"docstring":"Find agents with a specific capability. Optimized O(1) lookup.\n\nArgs:\n    capability: Capability to search for\n\nReturns:\n    List of agent IDs with the capability"},{"name":"find_agents_by_tag","lineno":328,"docstring":"Find agents with a specific tag. Optimized O(1) lookup.\n\nArgs:\n    tag: Tag to search for\n\nReturns:\n    List of agent IDs with the tag"},{"name":"find_agents_by_status","lineno":341,"docstring":"Find agents with a specific status. Optimized O(1) lookup using status index.\n\nArgs:\n    status: Status to search for\n\nReturns:\n    List of agent IDs with the status"},{"name":"get_agent_info","lineno":356,"docstring":"Get registration information for an agent.\n\nArgs:\n    agent_id: Agent ID\n\nReturns:\n    AgentRegistration if found, None otherwise"},{"name":"get_agent_instance","lineno":368,"docstring":"Get agent instance by ID.\n\nArgs:\n    agent_id: Agent ID\n\nReturns:\n    BaseAgent instance if found, None otherwise"},{"name":"list_agents","lineno":381,"docstring":"List registered agent IDs, optionally filtered by status.\n\nArgs:\n    status_filter: Optional status to filter by\n\nReturns:\n    List of agent IDs"},{"name":"get_performance_metrics","lineno":397,"docstring":"Get detailed performance metrics for monitoring.\n\nReturns:\n    Dictionary with performance metrics"},{"name":"get_registry_stats","lineno":435,"docstring":"Get comprehensive registry statistics.\n\nReturns:\n    Dictionary with detailed registry statistics"}],"docstring":"Centralized registry for agent lifecycle management and discovery.\n\nManages agent registration, deregistration, health monitoring,\nand provides discovery services for agent coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"RegistrationStatus","data":{"name":"RegistrationStatus","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":29,"bases":["Enum"],"methods":[],"docstring":"Enhanced agent registration status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"HealthLevel","data":{"name":"HealthLevel","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":41,"bases":["Enum"],"methods":[],"docstring":"Agent health levels.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"AgentMetrics","data":{"name":"AgentMetrics","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":51,"bases":[],"methods":[{"name":"to_dict","lineno":62,"docstring":"Convert to dictionary."},{"name":"from_dict","lineno":69,"docstring":"Create from dictionary."}],"docstring":"Agent performance metrics.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"AgentRegistration","data":{"name":"AgentRegistration","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":77,"bases":[],"methods":[{"name":"is_healthy","lineno":95,"docstring":"Check if agent is considered healthy based on heartbeat."},{"name":"should_heartbeat","lineno":105,"docstring":"Check if agent should send a heartbeat."},{"name":"update_health_level","lineno":115,"docstring":"Update and return current health level."},{"name":"to_dict","lineno":128,"docstring":"Convert to dictionary for storage."},{"name":"from_dict","lineno":143,"docstring":"Create from dictionary."}],"docstring":"Enhanced agent registration information.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"StorageBackend","data":{"name":"StorageBackend","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":164,"bases":["ABC"],"methods":[],"docstring":"Abstract storage backend for agent registry.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","name":"EnhancedAgentRegistry","data":{"name":"EnhancedAgentRegistry","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_agent_registry.py","lineno":429,"bases":[],"methods":[{"name":"__init__","lineno":442,"docstring":"Initialize enhanced agent registry."},{"name":"add_event_callback","lineno":789,"docstring":"Add event callback."},{"name":"remove_event_callback","lineno":793,"docstring":"Remove event callback."},{"name":"_get_agent_lock","lineno":866,"docstring":"Get or create lock for agent."}],"docstring":"Enhanced agent registry with scalability improvements.\n\nFeatures:\n- Pluggable storage backends (file, database, distributed)\n- Concurrent processing with asyncio\n- Advanced query capabilities\n- Comprehensive metrics and monitoring\n- Fault tolerance and recovery\n- Auto-scaling support","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","name":"RoutingStrategy","data":{"name":"RoutingStrategy","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","lineno":49,"bases":["Enum"],"methods":[],"docstring":"Strategies for routing messages to multiple agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","name":"AgentInfo","data":{"name":"AgentInfo","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","lineno":95,"bases":[],"methods":[{"name":"is_available","lineno":106,"docstring":"Check if agent is available for new messages."}],"docstring":"Information about registered agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","name":"LoadBalancer","data":{"name":"LoadBalancer","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","lineno":156,"bases":[],"methods":[{"name":"__init__","lineno":159,"docstring":"Initialize load balancer with routing strategy."},{"name":"select_agent","lineno":164,"docstring":"Select best agent based on routing strategy."}],"docstring":"Load balancer for distributing messages across agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","name":"DeadLetterQueue","data":{"name":"DeadLetterQueue","file_path":"libs/opsvi-coordination/opsvi_coordination/enhanced_message_bus.py","lineno":213,"bases":[],"methods":[{"name":"__init__","lineno":216,"docstring":"Initialize dead letter queue."},{"name":"add_message","lineno":222,"docstring":"Add failed message to dead letter queue."},{"name":"get_messages","lineno":232,"docstring":"Get messages from dead letter queue."},{"name":"replay_message","lineno":238,"docstring":"Remove and return message for replay."}],"docstring":"Queue for messages that failed to deliver.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-coordination/opsvi_coordination/message_bus.py","name":"MessageBus","data":{"name":"MessageBus","file_path":"libs/opsvi-coordination/opsvi_coordination/message_bus.py","lineno":72,"bases":[],"methods":[{"name":"__init__","lineno":80,"docstring":"Initialize message bus.\n\nArgs:\n    max_queue_size: Maximum number of messages in queue"},{"name":"subscribe","lineno":241,"docstring":"Subscribe to messages.\n\nArgs:\n    subscriber_id: ID of subscribing agent\n    subscription_type: Type of subscription\n    handler: Message handler function\n    filter_criteria: Optional filter criteria\n\nReturns:\n    Subscription ID"},{"name":"unsubscribe","lineno":298,"docstring":"Unsubscribe from messages.\n\nArgs:\n    subscriber_id: ID of subscribing agent\n    subscription_type: Type of subscription to remove\n\nReturns:\n    True if subscription was removed, False otherwise"},{"name":"get_stats","lineno":347,"docstring":"Get message bus statistics.\n\nReturns:\n    Dictionary with statistics"},{"name":"_message_matches_filter","lineno":480,"docstring":"Check if message matches filter criteria.\n\nArgs:\n    message: Message to check\n    filter_criteria: Filter criteria\n\nReturns:\n    True if message matches, False otherwise"}],"docstring":"Asynchronous message bus for inter-agent communication.\n\nProvides message routing, topic-based publishing, direct messaging,\nand subscription management for the multi-agent system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-data/opsvi_data/providers/consolidated_arango.py","name":"ConsolidatedArangoDB","data":{"name":"ConsolidatedArangoDB","file_path":"libs/opsvi-data/opsvi_data/providers/consolidated_arango.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":null},{"name":"_validate_connection","lineno":75,"docstring":null},{"name":"search","lineno":90,"docstring":null},{"name":"_search_content","lineno":137,"docstring":"Search for content across document fields"},{"name":"_search_tags","lineno":175,"docstring":"Search documents by tags with AND/OR logic"},{"name":"_search_date_range","lineno":206,"docstring":"Search documents within date range"},{"name":"_search_type","lineno":228,"docstring":"Search documents by type field"},{"name":"_search_recent","lineno":244,"docstring":"Get recent documents within time window"},{"name":"_search_by_id","lineno":265,"docstring":"Direct document lookup by ID"},{"name":"modify","lineno":279,"docstring":"Unified modification interface with operation-based routing\n\noperations: insert, update, delete, upsert"},{"name":"_modify_insert","lineno":310,"docstring":"Insert new document with optional validation"},{"name":"_modify_update","lineno":344,"docstring":"Update documents by key or criteria"},{"name":"_modify_delete","lineno":406,"docstring":"Delete documents by key or criteria with confirmation"},{"name":"_modify_upsert","lineno":463,"docstring":"Insert or update based on matching fields"},{"name":"_search_by_criteria","lineno":499,"docstring":"Helper: Search documents by exact criteria match"},{"name":"manage","lineno":515,"docstring":"Unified management interface with action-based routing\n\nactions: collection_info, backup, health, count, exists, create_collection"},{"name":"_manage_collection_info","lineno":544,"docstring":"Get detailed collection information and statistics"},{"name":"_manage_backup","lineno":574,"docstring":"Backup collections to specified directory"},{"name":"_manage_health","lineno":612,"docstring":"Agent-IDE database health assessment"},{"name":"_manage_count","lineno":661,"docstring":"Count documents in collection with optional criteria"},{"name":"_manage_exists","lineno":699,"docstring":"Check if documents matching criteria exist"},{"name":"_manage_create_collection","lineno":732,"docstring":"Create new collection"},{"name":"_build_filter_conditions","lineno":759,"docstring":"Build AQL filter conditions from criteria dictionary"},{"name":"_execute_query","lineno":773,"docstring":"Execute AQL query with comprehensive error handling"},{"name":"_error_response","lineno":803,"docstring":"Standardized error response format"}],"docstring":"Main database abstraction providing 3 consolidated tools:\n- arango_search: All search/query operations\n- arango_modify: All CRUD operations\n- arango_manage: All admin operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-data/opsvi_data/providers/postgresql_provider.py","name":"PostgreSQLProvider","data":{"name":"PostgreSQLProvider","file_path":"libs/opsvi-data/opsvi_data/providers/postgresql_provider.py","lineno":73,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":85,"docstring":"Initialize PostgreSQL provider.\n\nArgs:\n    config: PostgreSQL configuration\n    **kwargs: Additional configuration parameters"},{"name":"get_connection","lineno":163,"docstring":"Get a connection from the pool."},{"name":"return_connection","lineno":169,"docstring":"Return a connection to the pool."},{"name":"execute_query","lineno":176,"docstring":"Execute a SELECT query and return results."},{"name":"execute_update","lineno":200,"docstring":"Execute an INSERT/UPDATE/DELETE query and return affected rows."},{"name":"execute_many","lineno":220,"docstring":"Execute a query with multiple parameter sets."},{"name":"transaction","lineno":238,"docstring":"Context manager for transactions."},{"name":"table_exists","lineno":315,"docstring":"Check if a table exists."},{"name":"create_table","lineno":330,"docstring":"Create a table with specified columns."},{"name":"drop_table","lineno":341,"docstring":"Drop a table."},{"name":"list_tables","lineno":351,"docstring":"List all tables in the database."},{"name":"get_table_info","lineno":366,"docstring":"Get information about a table."},{"name":"health_check","lineno":389,"docstring":"Comprehensive health check."}],"docstring":"Comprehensive PostgreSQL provider for OPSVI ecosystem.\n\nProvides full database capabilities:\n- Connection pooling\n- Query execution\n- Transaction management\n- Error handling\n- Async support (when asyncpg is available)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-data/opsvi_data/providers/redis_provider.py","name":"RedisProvider","data":{"name":"RedisProvider","file_path":"libs/opsvi-data/opsvi_data/providers/redis_provider.py","lineno":71,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":84,"docstring":"Initialize Redis provider.\n\nArgs:\n    config: Redis configuration\n    **kwargs: Additional configuration parameters"},{"name":"set","lineno":163,"docstring":"Set a key-value pair."},{"name":"get","lineno":171,"docstring":"Get a value by key."},{"name":"delete","lineno":179,"docstring":"Delete a key."},{"name":"exists","lineno":187,"docstring":"Check if a key exists."},{"name":"expire","lineno":195,"docstring":"Set expiration for a key."},{"name":"ttl","lineno":203,"docstring":"Get time to live for a key."},{"name":"lpush","lineno":213,"docstring":"Push values to the left of a list."},{"name":"rpush","lineno":221,"docstring":"Push values to the right of a list."},{"name":"lpop","lineno":229,"docstring":"Pop value from the left of a list."},{"name":"rpop","lineno":237,"docstring":"Pop value from the right of a list."},{"name":"lrange","lineno":245,"docstring":"Get a range of elements from a list."},{"name":"llen","lineno":253,"docstring":"Get the length of a list."},{"name":"sadd","lineno":263,"docstring":"Add members to a set."},{"name":"srem","lineno":271,"docstring":"Remove members from a set."},{"name":"smembers","lineno":279,"docstring":"Get all members of a set."},{"name":"sismember","lineno":287,"docstring":"Check if a member exists in a set."},{"name":"scard","lineno":295,"docstring":"Get the cardinality of a set."},{"name":"hset","lineno":305,"docstring":"Set a field in a hash."},{"name":"hget","lineno":313,"docstring":"Get a field from a hash."},{"name":"hgetall","lineno":321,"docstring":"Get all fields from a hash."},{"name":"hdel","lineno":329,"docstring":"Delete fields from a hash."},{"name":"hexists","lineno":337,"docstring":"Check if a field exists in a hash."},{"name":"hlen","lineno":345,"docstring":"Get the number of fields in a hash."},{"name":"zadd","lineno":355,"docstring":"Add members to a sorted set."},{"name":"zrange","lineno":363,"docstring":"Get a range of members from a sorted set."},{"name":"zscore","lineno":373,"docstring":"Get the score of a member in a sorted set."},{"name":"zcard","lineno":381,"docstring":"Get the cardinality of a sorted set."},{"name":"publish","lineno":391,"docstring":"Publish a message to a channel."},{"name":"subscribe","lineno":399,"docstring":"Subscribe to channels."},{"name":"keys","lineno":409,"docstring":"Get keys matching a pattern."},{"name":"flushdb","lineno":417,"docstring":"Flush the current database."},{"name":"info","lineno":425,"docstring":"Get Redis server information."},{"name":"dbsize","lineno":433,"docstring":"Get the number of keys in the current database."},{"name":"health_check","lineno":484,"docstring":"Comprehensive health check."}],"docstring":"Comprehensive Redis provider for OPSVI ecosystem.\n\nProvides full Redis capabilities:\n- Key-value operations\n- Data structures (lists, sets, hashes, sorted sets)\n- Pub/Sub messaging\n- Transactions\n- Connection pooling\n- Async support (when aioredis is available)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/compose_manager.py","name":"ComposeManager","data":{"name":"ComposeManager","file_path":"libs/opsvi-docker/opsvi_docker/providers/compose_manager.py","lineno":87,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":99,"docstring":"Initialize compose manager.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"},{"name":"_build_compose_command","lineno":446,"docstring":"Build docker-compose command.\n\nArgs:\n    config: Compose configuration\n    subcommand: Compose subcommand\n\nReturns:\n    List[str]: Command arguments"},{"name":"_parse_ps_output","lineno":516,"docstring":"Parse docker-compose ps output.\n\nArgs:\n    output: Command output\n\nReturns:\n    List[ComposeService]: Parsed service information"}],"docstring":"Comprehensive compose management for OPSVI ecosystem.\n\nProvides full compose capabilities:\n- Compose project lifecycle management\n- Service orchestration and scaling\n- Multi-environment support\n- Health monitoring and recovery\n- Configuration management","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","name":"ContainerError","data":{"name":"ContainerError","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","lineno":20,"bases":["ComponentError"],"methods":[],"docstring":"Custom exception for container operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","name":"ContainerConfig","data":{"name":"ContainerConfig","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","lineno":27,"bases":[],"methods":[],"docstring":"Configuration for container operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","name":"ContainerInfo","data":{"name":"ContainerInfo","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","lineno":82,"bases":[],"methods":[],"docstring":"Container information and status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","name":"ContainerStats","data":{"name":"ContainerStats","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","lineno":106,"bases":[],"methods":[],"docstring":"Container resource usage statistics.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","name":"ContainerManager","data":{"name":"ContainerManager","file_path":"libs/opsvi-docker/opsvi_docker/providers/container_manager.py","lineno":137,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":150,"docstring":"Initialize container manager.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"},{"name":"_get_container","lineno":578,"docstring":"Get container by ID or name.\n\nArgs:\n    container_id: Container ID or name\n\nReturns:\n    Container: Docker container object"}],"docstring":"Comprehensive container management for OPSVI ecosystem.\n\nProvides full container capabilities:\n- Container lifecycle management (create, start, stop, remove)\n- Container monitoring and statistics\n- Log management and streaming\n- Health checks and status monitoring\n- Resource usage tracking\n- Container inspection and configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/docker_provider.py","name":"DockerProvider","data":{"name":"DockerProvider","file_path":"libs/opsvi-docker/opsvi_docker/providers/docker_provider.py","lineno":85,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":98,"docstring":"Initialize Docker provider.\n\nArgs:\n    config: Docker configuration\n    **kwargs: Additional configuration options"},{"name":"containers","lineno":190,"docstring":"Get container manager."},{"name":"images","lineno":195,"docstring":"Get image manager."},{"name":"networks","lineno":200,"docstring":"Get network manager."},{"name":"volumes","lineno":205,"docstring":"Get volume manager."},{"name":"compose","lineno":210,"docstring":"Get compose manager."},{"name":"registry","lineno":215,"docstring":"Get registry manager."},{"name":"monitor","lineno":220,"docstring":"Get Docker monitor."},{"name":"get_docker_info","lineno":260,"docstring":"Get comprehensive Docker system information."},{"name":"get_manager","lineno":285,"docstring":"Get a specific manager by type."},{"name":"list_managers","lineno":292,"docstring":"List all available managers."}],"docstring":"Comprehensive Docker provider for OPSVI ecosystem.\n\nProvides full Docker capabilities:\n- Container lifecycle management\n- Image management and registry operations\n- Network and volume management\n- Docker Compose orchestration\n- Health monitoring and resource tracking\n- Security scanning and vulnerability assessment","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","name":"DockerMonitor","data":{"name":"DockerMonitor","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","lineno":101,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":113,"docstring":"Initialize Docker monitor.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"}],"docstring":"Comprehensive Docker monitoring for OPSVI ecosystem.\n\nProvides full monitoring capabilities:\n- Real-time container monitoring\n- System resource tracking\n- Health check management\n- Alert generation and notification\n- Performance metrics collection","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","name":"HealthChecker","data":{"name":"HealthChecker","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","lineno":681,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":688,"docstring":"Initialize health checker.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"}],"docstring":"Health checker for Docker components.\n\nProvides health checking capabilities for containers, images, networks, and volumes.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","name":"ResourceMonitor","data":{"name":"ResourceMonitor","file_path":"libs/opsvi-docker/opsvi_docker/providers/monitoring.py","lineno":778,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":785,"docstring":"Initialize resource monitor.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"}],"docstring":"Resource monitor for Docker containers and systems.\n\nProvides resource monitoring capabilities for CPU, memory, network, and disk usage.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/network_manager.py","name":"NetworkError","data":{"name":"NetworkError","file_path":"libs/opsvi-docker/opsvi_docker/providers/network_manager.py","lineno":19,"bases":["ComponentError"],"methods":[],"docstring":"Custom exception for network operations.","agent_type":"worker"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/providers/network_manager.py","name":"NetworkManager","data":{"name":"NetworkManager","file_path":"libs/opsvi-docker/opsvi_docker/providers/network_manager.py","lineno":76,"bases":["BaseComponent"],"methods":[{"name":"__init__","lineno":88,"docstring":"Initialize network manager.\n\nArgs:\n    client: Docker client instance\n    config: Docker configuration\n    **kwargs: Additional configuration options"},{"name":"_get_network","lineno":392,"docstring":"Get network by ID or name.\n\nArgs:\n    network_id: Network ID or name\n\nReturns:\n    Network: Docker network object"}],"docstring":"Comprehensive network management for OPSVI ecosystem.\n\nProvides full network capabilities:\n- Network creation and configuration\n- Container network connectivity\n- Network inspection and monitoring\n- IPAM management\n- Network security and isolation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","name":"ContainerCreateRequest","data":{"name":"ContainerCreateRequest","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","lineno":15,"bases":[],"methods":[],"docstring":"Request schema for container creation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","name":"ContainerUpdateRequest","data":{"name":"ContainerUpdateRequest","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","lineno":31,"bases":[],"methods":[],"docstring":"Request schema for container updates.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","name":"ContainerLogsRequest","data":{"name":"ContainerLogsRequest","file_path":"libs/opsvi-docker/opsvi_docker/schemas.py","lineno":41,"bases":[],"methods":[],"docstring":"Request schema for container logs.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/utils.py","name":"ContainerUtils","data":{"name":"ContainerUtils","file_path":"libs/opsvi-docker/opsvi_docker/utils.py","lineno":174,"bases":[],"methods":[{"name":"generate_container_name","lineno":178,"docstring":"Generate a unique container name.\n\nArgs:\n    prefix: Name prefix\n    suffix: Optional name suffix\n\nReturns:\n    str: Generated container name"},{"name":"validate_container_name","lineno":199,"docstring":"Validate container name.\n\nArgs:\n    name: Container name\n\nReturns:\n    bool: True if name is valid"},{"name":"get_container_logs_tail","lineno":219,"docstring":"Get last N lines of container logs.\n\nArgs:\n    container_id: Container ID\n    lines: Number of lines to get\n\nReturns:\n    str: Container logs"},{"name":"wait_for_container_ready","lineno":242,"docstring":"Wait for container to be ready.\n\nArgs:\n    container_id: Container ID\n    timeout: Timeout in seconds\n\nReturns:\n    bool: True if container is ready"}],"docstring":"Utility functions for container operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/utils/container_utils.py","name":"ContainerUtils","data":{"name":"ContainerUtils","file_path":"libs/opsvi-docker/opsvi_docker/utils/container_utils.py","lineno":14,"bases":[],"methods":[{"name":"analyze_container_config","lineno":25,"docstring":"Analyze container configuration for best practices and issues."},{"name":"get_container_usage_stats","lineno":73,"docstring":"Extract and format container usage statistics."},{"name":"format_container_logs","lineno":121,"docstring":"Format container logs for better readability."},{"name":"parse_container_ports","lineno":153,"docstring":"Parse container port bindings into a structured format."},{"name":"get_container_environment_variables","lineno":179,"docstring":"Extract environment variables from container configuration."},{"name":"check_container_security","lineno":196,"docstring":"Perform security analysis of container configuration."},{"name":"optimize_container_config","lineno":253,"docstring":"Suggest optimizations for container configuration."}],"docstring":"Container utility functions.\n\nProvides container-specific operations and helpers:\n- Container lifecycle management\n- Container inspection and analysis\n- Container optimization","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/utils/health_utils.py","name":"HealthUtils","data":{"name":"HealthUtils","file_path":"libs/opsvi-docker/opsvi_docker/utils/health_utils.py","lineno":29,"bases":[],"methods":[{"name":"check_container_health","lineno":41,"docstring":"Check container health status."},{"name":"check_service_availability","lineno":116,"docstring":"Check if a service is available on host:port."},{"name":"check_docker_daemon","lineno":160,"docstring":"Check Docker daemon health."},{"name":"aggregate_health_results","lineno":215,"docstring":"Aggregate multiple health check results."},{"name":"_calculate_uptime","lineno":260,"docstring":"Calculate container uptime."},{"name":"create_health_report","lineno":284,"docstring":"Create a formatted health report."}],"docstring":"Health utility functions.\n\nProvides health checking and monitoring utilities:\n- Container health assessment\n- Service availability checks\n- Performance monitoring\n- Alert generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docker/opsvi_docker/utils/security_utils.py","name":"SecurityUtils","data":{"name":"SecurityUtils","file_path":"libs/opsvi-docker/opsvi_docker/utils/security_utils.py","lineno":57,"bases":[],"methods":[{"name":"scan_container_security","lineno":69,"docstring":"Scan container for security issues."}],"docstring":"Security utility functions.\n\nProvides security assessment utilities:\n- Container security scanning\n- Image vulnerability assessment\n- Configuration security analysis\n- Compliance checking","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/analyzers/document_analyzer.py","name":"DocumentAnalyzer","data":{"name":"DocumentAnalyzer","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/analyzers/document_analyzer.py","lineno":49,"bases":[],"methods":[{"name":"__init__","lineno":54,"docstring":"Initialize the document analyzer.\n\nArgs:\n    inventory: Document inventory instance\n    content_extractor: Content extractor instance\n    source_mapper: Source mapper instance\n    cross_reference_detector: Cross reference detector instance\n    taxonomy_mapper: Taxonomy mapper instance"},{"name":"analyze_document","lineno":82,"docstring":"Analyze a document and extract structured information.\n\nArgs:\n    file_path: Path to the document file\n\nReturns:\n    Dictionary containing analysis results"},{"name":"extract_key_concepts","lineno":136,"docstring":"Extract key concepts from document content.\n\nArgs:\n    content: Document content\n\nReturns:\n    List of key concepts"},{"name":"detect_document_type","lineno":183,"docstring":"Detect document type.\n\nArgs:\n    file_path: Path to the document file\n    content: Document content\n\nReturns:\n    Document type"}],"docstring":"Analyzes documentation files and extracts structured information.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/analyzers/document_inventory.py","name":"DocumentInventory","data":{"name":"DocumentInventory","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/analyzers/document_inventory.py","lineno":48,"bases":[],"methods":[{"name":"__init__","lineno":53,"docstring":"Initialize the document inventory."},{"name":"add_document","lineno":61,"docstring":"Add a document to the inventory.\n\nArgs:\n    file_path: Path to the document\n    doc_type: Type of document\n    metadata: Document metadata"},{"name":"build_relationships","lineno":89,"docstring":"Build relationships between documents based on references."},{"name":"get_inventory","lineno":124,"docstring":"Get the complete inventory.\n\nReturns:\n    Dictionary containing all document information"},{"name":"get_type_distribution","lineno":133,"docstring":"Get distribution of document types.\n\nReturns:\n    Dictionary mapping document types to counts"},{"name":"find_related_documents","lineno":148,"docstring":"Find documents related to the specified document.\n\nArgs:\n    doc_id: ID of the document\n\nReturns:\n    Dictionary containing lists of references and referenced_by documents"},{"name":"_is_text_file","lineno":163,"docstring":"Check if a file is a text file based on extension.\n\nArgs:\n    file_path: Path to the file\n\nReturns:\n    True if the file is a text file, False otherwise"},{"name":"_find_references","lineno":188,"docstring":"Find references in document content.\n\nArgs:\n    doc_id: ID of the document\n    content: Document content"},{"name":"_find_document_by_path","lineno":220,"docstring":"Find a document in the inventory by its path.\n\nArgs:\n    path: Path to look for\n\nReturns:\n    Document ID if found, None otherwise"}],"docstring":"Maintains an inventory of documentation files and their relationships.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/connectors/llm_orchestrator.py","name":"LLMOrchestrator","data":{"name":"LLMOrchestrator","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/connectors/llm_orchestrator.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the LLM orchestrator.\n\nArgs:\n    config: Optional configuration dictionary"},{"name":"generate_taxonomy","lineno":94,"docstring":"Generate a taxonomy from document content using LLM.\n\nArgs:\n    document_content: Extracted document content\n\nReturns:\n    Generated taxonomy dictionary"},{"name":"generate_rule","lineno":218,"docstring":"Generate a rule from document content and taxonomy.\n\nArgs:\n    doc_content: Extracted document content\n    taxonomy: Taxonomy dictionary\n    rule_type: Type of rule to generate (standard, parent, child, standalone)\n    cursor_rules: Optional list of cursor rules to guide generation\n\nReturns:\n    Generated rule dictionary"},{"name":"validate_rule","lineno":384,"docstring":"Validate a rule using LLM.\n\nArgs:\n    rule_content: Content of the rule to validate\n    rule_path: Optional path to the rule file\n\nReturns:\n    Dictionary with validation results"},{"name":"improve_rule","lineno":460,"docstring":"Improve a rule based on validation feedback using LLM.\n\nArgs:\n    rule_content: The rule content to improve\n    validation_result: Validation result dictionary\n\nReturns:\n    Improved rule dictionary"}],"docstring":"Orchestrate LLM-based operations across the DocRuleGen application.\n\nThis class coordinates all LLM interactions, including:\n- Taxonomy generation\n- Rule generation\n- Rule validation\n- Rule improvement\n\nIt maintains context across operations and ensures proper prompt management.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/extractors/text_extractor.py","name":"TextExtractor","data":{"name":"TextExtractor","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/extractors/text_extractor.py","lineno":23,"bases":["BaseExtractor"],"methods":[{"name":"validate_source","lineno":26,"docstring":"Validate if the source is a text file.\n\nArgs:\n    source_path: Path to the source file\n\nReturns:\n    True if the source is a valid text file, False otherwise"},{"name":"extract","lineno":58,"docstring":"Extract content from a text file.\n\nArgs:\n    source_path: Path to the text file\n\nReturns:\n    Dictionary with extracted content"},{"name":"_parse_sections","lineno":90,"docstring":"Parse text content into sections based on empty lines and potential headers.\n\nArgs:\n    content: Text content\n\nReturns:\n    Dictionary with section name as key and section content as value"},{"name":"_extract_metadata","lineno":146,"docstring":"Extract metadata from text content.\n\nArgs:\n    content: Text content\n\nReturns:\n    Dictionary with metadata"}],"docstring":"Extract content from plain text files.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/generators/enhanced_rule_generator.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/generators/enhanced_rule_generator.py","lineno":46,"bases":["Exception"],"methods":[{"name":"__init__","lineno":55,"docstring":null}],"docstring":"Exception raised when rule content fails validation.\n\nAttributes:\n    message -- explanation of the error\n    section -- section that failed validation\n    feedback -- validation feedback","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/inventory/document_inventory.py","name":"DocumentInventory","data":{"name":"DocumentInventory","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/inventory/document_inventory.py","lineno":45,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":"Initialize the document inventory."},{"name":"add_document","lineno":60,"docstring":"Add a document to the inventory.\n\nArgs:\n    file_path: Path to the document file\n    doc_type: Type of the document\n    metadata: Document metadata\n\nReturns:\n    True if the document was added successfully, False otherwise"},{"name":"get_document","lineno":100,"docstring":"Get a document from the inventory.\n\nArgs:\n    file_path: Path to the document file\n\nReturns:\n    Document data if found, empty dict otherwise"},{"name":"get_documents","lineno":121,"docstring":"Get all documents from the inventory.\n\nReturns:\n    Dictionary of all documents"},{"name":"get_document_count","lineno":135,"docstring":"Get the count of documents in the inventory.\n\nReturns:\n    Number of documents"},{"name":"get_documents_by_type","lineno":144,"docstring":"Get documents by type.\n\nArgs:\n    doc_type: Type of documents to get\n\nReturns:\n    List of documents of the specified type"},{"name":"get_type_distribution","lineno":171,"docstring":"Get distribution of document types.\n\nReturns:\n    Dictionary mapping document types to counts"}],"docstring":"Maintains an inventory of documents and their metadata.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/base_preprocessor.py","name":"BasePreprocessor","data":{"name":"BasePreprocessor","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/base_preprocessor.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":22,"docstring":"Initialize the preprocessor.\n\nArgs:\n    config: Configuration dictionary"},{"name":"preprocess","lineno":31,"docstring":"Preprocess the extracted content.\n\nThis method should be implemented by subclasses to perform\nspecific preprocessing operations.\n\nArgs:\n    extracted_content: The extracted content to preprocess\n\nReturns:\n    Preprocessed content"},{"name":"process","lineno":60,"docstring":"Process the extracted content.\n\nThis method should be implemented by subclasses to perform\nspecific processing operations.\n\nArgs:\n    extracted_content: The extracted content to process\n\nReturns:\n    Processed content"},{"name":"validate_input","lineno":75,"docstring":"Validate the input extracted content.\n\nArgs:\n    extracted_content: Extracted content to validate\n\nReturns:\n    True if the content is valid, False otherwise"},{"name":"_create_standardized_structure","lineno":97,"docstring":"Create a standardized structure for preprocessed content.\n\nReturns:\n    Dictionary with standardized structure"}],"docstring":"Base class for all preprocessors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/markdown_preprocessor.py","name":"MarkdownPreprocessor","data":{"name":"MarkdownPreprocessor","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/markdown_preprocessor.py","lineno":51,"bases":["BasePreprocessor"],"methods":[{"name":"process","lineno":54,"docstring":"Process the extracted content to standardize markdown.\n\nArgs:\n    extracted_content: The extracted content to process\n\nReturns:\n    Processed content with standardized markdown"},{"name":"_create_overview_section","lineno":86,"docstring":"Create a standardized overview section.\n\nArgs:\n    sections: Dictionary with section name as key and section content as value\n    metadata: Dictionary with metadata\n\nReturns:\n    Standardized overview content"},{"name":"_create_context_section","lineno":113,"docstring":"Create a standardized context section.\n\nArgs:\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    Standardized context content"},{"name":"_create_requirements_section","lineno":132,"docstring":"Create a standardized requirements section.\n\nArgs:\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    Standardized requirements content"},{"name":"_extract_examples","lineno":160,"docstring":"Extract examples from content.\n\nArgs:\n    content: Full content\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    List of examples with type and content"},{"name":"_extract_warnings","lineno":202,"docstring":"Extract warnings from content.\n\nArgs:\n    content: Full content\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    List of warnings"},{"name":"_extract_key_concepts","lineno":253,"docstring":"Extract key concepts from content.\n\nArgs:\n    content: Full content\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    List of key concepts"},{"name":"_identify_directive_candidates","lineno":330,"docstring":"Identify potential directive candidates in content.\n\nArgs:\n    content: Full content\n    sections: Dictionary with section name as key and section content as value\n\nReturns:\n    List of directive candidates"},{"name":"_generate_standardized_markdown","lineno":417,"docstring":"Generate standardized markdown from preprocessed content.\n\nArgs:\n    preprocessed_content: Dictionary with preprocessed content\n\nReturns:\n    Standardized markdown content"},{"name":"_parse_sections","lineno":512,"docstring":"Parse markdown content into sections.\n\nArgs:\n    content: Markdown content to parse\n\nReturns:\n    List of sections with title and content"},{"name":"_standardize_markdown","lineno":551,"docstring":"Standardize markdown content.\n\nArgs:\n    content: Markdown content to standardize\n\nReturns:\n    Standardized markdown content"}],"docstring":"Preprocess markdown content into standardized format.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/preprocessor_manager.py","name":"PreprocessorManager","data":{"name":"PreprocessorManager","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/preprocessors/preprocessor_manager.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":"Initialize the preprocessor manager.\n\nArgs:\n    config: Configuration dictionary"},{"name":"register_preprocessor","lineno":42,"docstring":"Register a preprocessor.\n\nArgs:\n    preprocessor: The preprocessor to register"},{"name":"preprocess","lineno":52,"docstring":"Preprocess extracted content.\n\nArgs:\n    extracted_content: Extracted content from extractor\n\nReturns:\n    Dictionary with preprocessed content"}],"docstring":"Manage the preprocessing of extracted content.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/validators/practical_validator.py","name":"PracticalValidator","data":{"name":"PracticalValidator","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/validators/practical_validator.py","lineno":32,"bases":[],"methods":[{"name":"validate","lineno":41,"docstring":"Perform practical validation of a rule.\n\nArgs:\n    rule_file_path: Path to the rule file\n    rule_content: Content of the rule\n    num_scenarios: Number of test scenarios to generate\n\nReturns:\n    Validation results"},{"name":"analyze_rule","lineno":58,"docstring":"Extract testing-relevant metadata from rule content.\n\nArgs:\n    rule_content: The content of the rule to analyze\n\nReturns:\n    Dictionary with rule analysis data for test scenario generation"},{"name":"generate_scenarios","lineno":71,"docstring":"Generate test scenarios for a rule.\n\nArgs:\n    rule_analysis: Analysis data for the rule\n    num_scenarios: Number of scenarios to generate\n\nReturns:\n    List of test scenarios"},{"name":"apply_to_scenario","lineno":87,"docstring":"Apply a rule to a test scenario.\n\nArgs:\n    rule_content: Content of the rule\n    scenario: Test scenario\n\nReturns:\n    Results of applying the rule"},{"name":"generate_report","lineno":103,"docstring":"Generate a practical test report.\n\nArgs:\n    rule_id: ID of the rule\n    rule_name: Name of the rule\n    validation_results: Validation results\n\nReturns:\n    Formatted test report"}],"docstring":"Validator for practical effectiveness of rules.\n\nThis class provides methods for testing rules against real-world scenarios\nand evaluating their effectiveness.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/validators/section_validator.py","name":"SectionValidator","data":{"name":"SectionValidator","file_path":"libs/opsvi-docs/opsvi_docs/docRuleGen/rules_engine/validators/section_validator.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the section validator.\n\nArgs:\n    config: Optional configuration dictionary (not used by this validator)"},{"name":"validate","lineno":39,"docstring":"Validate a rule against section requirements.\n\nArgs:\n    rule_content: Content of the rule to validate\n    rule_path: Optional path to the rule file\n\nReturns:\n    Dictionary with validation results"},{"name":"validate_section","lineno":81,"docstring":"Validate a specific section of a rule against requirements.\n\nArgs:\n    rule_id: The ID of the rule\n    rule_name: The name of the rule\n    section: The section name ('frontmatter', 'metadata', etc.)\n    content: The content of the section\n\nReturns:\n    Tuple of (is_valid, feedback)"},{"name":"post_process_danger","lineno":99,"docstring":"Post-process the danger section content.\n\nArgs:\n    danger_content: The content of the danger section\n    rule_name: The name of the rule\n\nReturns:\n    Processed danger content"},{"name":"_extract_frontmatter","lineno":114,"docstring":"Extract frontmatter from rule content.\n\nArgs:\n    content: Rule content\n\nReturns:\n    Tuple of (frontmatter dictionary, body content)"},{"name":"_extract_sections","lineno":150,"docstring":"Extract sections from rule content.\n\nArgs:\n    content: Rule content\n\nReturns:\n    Dictionary mapping section names to content"}],"docstring":"Validator for rule sections.\n\nThis class provides methods for validating different sections of a rule\nagainst requirements and standards.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/utils/examples/legacy_scripts/genFileMap.py","name":"OpenAIClient","data":{"name":"OpenAIClient","file_path":"libs/opsvi-docs/opsvi_docs/utils/examples/legacy_scripts/genFileMap.py","lineno":80,"bases":["APIClient"],"methods":[{"name":"__init__","lineno":83,"docstring":null}],"docstring":"OpenAI API client","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/api/openai.py","name":"OpenAIClient","data":{"name":"OpenAIClient","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/api/openai.py","lineno":19,"bases":["APIClient"],"methods":[{"name":"__init__","lineno":22,"docstring":null}],"docstring":"OpenAI API client","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/base.py","name":"FileProcessor","data":{"name":"FileProcessor","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/base.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the file processor with file path and API client"}],"docstring":"Base class for file processors","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/code_processor.py","name":"CodeFileProcessor","data":{"name":"CodeFileProcessor","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/code_processor.py","lineno":25,"bases":["FileProcessor"],"methods":[],"docstring":"Processor for code files","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/doc_processor.py","name":"DocumentationFileProcessor","data":{"name":"DocumentationFileProcessor","file_path":"libs/opsvi-docs/opsvi_docs/utils/genFileMap/src/genfilemap/processors/doc_processor.py","lineno":28,"bases":["FileProcessor"],"methods":[],"docstring":"Processor for documentation files","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","lineno":57,"bases":["BaseModel"],"methods":[],"docstring":"Describes agent capabilities for discovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","name":"AgentManifest","data":{"name":"AgentManifest","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","lineno":68,"bases":["BaseModel"],"methods":[],"docstring":"Agent service manifest for discovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","name":"AgentDiscoveryService","data":{"name":"AgentDiscoveryService","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/agent_discovery.py","lineno":83,"bases":[],"methods":[{"name":"__init__","lineno":86,"docstring":null},{"name":"setup_routes","lineno":93,"docstring":"Setup Agent Protocol compliant endpoints"},{"name":"_generate_manifest","lineno":432,"docstring":"Generate agent manifest for service discovery"},{"name":"_get_capabilities","lineno":464,"docstring":"Get list of agent capabilities"}],"docstring":"Service for agent discovery, registration, and protocol compliance","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/example_external_agent.py","name":"ExternalAIAgent","data":{"name":"ExternalAIAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agent_hub/example_external_agent.py","lineno":12,"bases":[],"methods":[{"name":"__init__","lineno":17,"docstring":null}],"docstring":"Example external AI agent that discovers and uses our Agent Hub","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"BaseLLMAgent","data":{"name":"BaseLLMAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":139,"bases":[],"methods":[{"name":"__init__","lineno":140,"docstring":null},{"name":"run","lineno":145,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"AnalystAgent","data":{"name":"AnalystAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":158,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":159,"docstring":null},{"name":"run","lineno":162,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":166,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":167,"docstring":null},{"name":"run","lineno":170,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":174,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":175,"docstring":null},{"name":"run","lineno":178,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":182,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":183,"docstring":null},{"name":"run","lineno":186,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"DocumentationAgent","data":{"name":"DocumentationAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":192,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":193,"docstring":null},{"name":"run","lineno":201,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"ConfigAgent","data":{"name":"ConfigAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":207,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":208,"docstring":null},{"name":"run","lineno":216,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"DiagramAgent","data":{"name":"DiagramAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":222,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":223,"docstring":null},{"name":"run","lineno":231,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"UnitTestAgent","data":{"name":"UnitTestAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":237,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":238,"docstring":null},{"name":"run","lineno":246,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":278,"bases":[],"methods":[{"name":"__init__","lineno":279,"docstring":null},{"name":"review","lineno":282,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"CoderAgent","data":{"name":"CoderAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":359,"bases":[],"methods":[{"name":"__init__","lineno":360,"docstring":null},{"name":"generate","lineno":365,"docstring":null},{"name":"run","lineno":393,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"DocumenterAgent","data":{"name":"DocumenterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":397,"bases":["CoderAgent"],"methods":[{"name":"run","lineno":398,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":402,"bases":[],"methods":[{"name":"__init__","lineno":403,"docstring":null},{"name":"select_model","lineno":409,"docstring":"Select the lowest capable model tier for the task.\nPrefer efficient models (mini/nano) to maximize free usage.\nEscalate to premium (gpt-4.1, o3, etc.) only if needed.\nLog the selection and reasoning for audit."},{"name":"select_prompt","lineno":439,"docstring":null},{"name":"run","lineno":443,"docstring":null},{"name":"log_model_selection","lineno":513,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"ArtifactPlannerAgent","data":{"name":"ArtifactPlannerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":690,"bases":[],"methods":[{"name":"__init__","lineno":691,"docstring":null},{"name":"plan","lineno":694,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"IngestionAgent","data":{"name":"IngestionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":720,"bases":[],"methods":[{"name":"__init__","lineno":721,"docstring":null},{"name":"run","lineno":724,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"ValidatorAgent","data":{"name":"ValidatorAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":794,"bases":[],"methods":[{"name":"validate","lineno":795,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"SummarizerAgent","data":{"name":"SummarizerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":822,"bases":[],"methods":[{"name":"__init__","lineno":823,"docstring":null},{"name":"summarize","lineno":826,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":840,"bases":[],"methods":[{"name":"__init__","lineno":841,"docstring":null},{"name":"extract","lineno":844,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":853,"bases":[],"methods":[{"name":"__init__","lineno":854,"docstring":null},{"name":"design","lineno":857,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/generate_app.py","lineno":866,"bases":[],"methods":[{"name":"__init__","lineno":867,"docstring":null},{"name":"spec","lineno":870,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/prompt_schema.py","name":"AgentPromptSchema","data":{"name":"AgentPromptSchema","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_app_dev/prompt_schema.py","lineno":17,"bases":[],"methods":[{"name":"from_yaml","lineno":34,"docstring":null},{"name":"from_json","lineno":42,"docstring":null},{"name":"validate","lineno":49,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"AnalystAgent","data":{"name":"AnalystAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":33,"bases":[],"methods":[{"name":"__init__","lineno":34,"docstring":null},{"name":"run","lineno":37,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":null},{"name":"design","lineno":73,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":97,"bases":[],"methods":[{"name":"__init__","lineno":98,"docstring":null},{"name":"spec","lineno":119,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":143,"bases":[],"methods":[{"name":"__init__","lineno":144,"docstring":null},{"name":"run","lineno":147,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":160,"bases":[],"methods":[{"name":"__init__","lineno":161,"docstring":null},{"name":"review","lineno":164,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"CoderAgent","data":{"name":"CoderAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":238,"bases":[],"methods":[{"name":"__init__","lineno":239,"docstring":null},{"name":"generate","lineno":244,"docstring":null},{"name":"run","lineno":272,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"DocumenterAgent","data":{"name":"DocumenterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":276,"bases":["CoderAgent"],"methods":[{"name":"run","lineno":277,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":281,"bases":[],"methods":[{"name":"__init__","lineno":282,"docstring":null},{"name":"select_model","lineno":288,"docstring":"Select the lowest capable model tier for the task.\nPrefer efficient models (mini/nano) to maximize free usage.\nEscalate to premium (gpt-4.1, o3, etc.) only if needed.\nLog the selection and reasoning for audit."},{"name":"select_prompt","lineno":318,"docstring":null},{"name":"run","lineno":322,"docstring":null},{"name":"log_model_selection","lineno":390,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"ConfigAgent","data":{"name":"ConfigAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":413,"bases":[],"methods":[{"name":"__init__","lineno":414,"docstring":null},{"name":"run","lineno":417,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"DiagramAgent","data":{"name":"DiagramAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":426,"bases":[],"methods":[{"name":"__init__","lineno":427,"docstring":null},{"name":"run","lineno":430,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"ArtifactPlannerAgent","data":{"name":"ArtifactPlannerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":572,"bases":[],"methods":[{"name":"__init__","lineno":573,"docstring":null},{"name":"plan","lineno":576,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"IngestionAgent","data":{"name":"IngestionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":605,"bases":[],"methods":[{"name":"__init__","lineno":606,"docstring":null},{"name":"run","lineno":609,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"ValidatorAgent","data":{"name":"ValidatorAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":679,"bases":[],"methods":[{"name":"validate","lineno":680,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"SummarizerAgent","data":{"name":"SummarizerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":707,"bases":[],"methods":[{"name":"__init__","lineno":708,"docstring":null},{"name":"summarize","lineno":711,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/generate_content.py","lineno":725,"bases":[],"methods":[{"name":"__init__","lineno":726,"docstring":null},{"name":"extract","lineno":729,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/prompt_schema.py","name":"AgentPromptSchema","data":{"name":"AgentPromptSchema","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_code_doc_gen/prompt_schema.py","lineno":17,"bases":[],"methods":[{"name":"from_yaml","lineno":34,"docstring":null},{"name":"from_json","lineno":42,"docstring":null},{"name":"validate","lineno":49,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"DevAgent","data":{"name":"DevAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":972,"bases":[],"methods":[{"name":"__init__","lineno":973,"docstring":null},{"name":"generate","lineno":978,"docstring":"Try each model in order, escalate on failure. Always return a dict."},{"name":"_build_prompt","lineno":1032,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1056,"bases":[],"methods":[{"name":"__init__","lineno":1057,"docstring":null},{"name":"review","lineno":1061,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1094,"bases":[],"methods":[{"name":"__init__","lineno":1095,"docstring":null},{"name":"run_pipeline","lineno":1102,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1135,"bases":[],"methods":[{"name":"__init__","lineno":1136,"docstring":null},{"name":"gather","lineno":1140,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1148,"bases":[],"methods":[{"name":"__init__","lineno":1149,"docstring":null},{"name":"design","lineno":1153,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1161,"bases":[],"methods":[{"name":"__init__","lineno":1162,"docstring":null},{"name":"specify","lineno":1166,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/agentic_doc_manager/agent_workflows.py","lineno":1174,"bases":[],"methods":[{"name":"__init__","lineno":1175,"docstring":null},{"name":"generate_prompt","lineno":1179,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_code_generator.py","name":"AICodeGenerator","data":{"name":"AICodeGenerator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_code_generator.py","lineno":42,"bases":[],"methods":[{"name":"__init__","lineno":45,"docstring":null},{"name":"generate_project_code","lineno":49,"docstring":"Generate complete project code using AI based on requirements and architecture.\n\nArgs:\n    requirements: Structured requirements from user input\n    architecture: AI-generated architecture specification\n    project_type: Type of project to generate\n    insights: Optional research insights to inform code generation\n\nReturns:\n    Complete code generation with all files"},{"name":"_build_system_prompt","lineno":105,"docstring":"Build system prompt for code generation."},{"name":"_build_user_prompt","lineno":191,"docstring":"Build user prompt with specific requirements and architecture."},{"name":"_fallback_generation","lineno":232,"docstring":"Fallback generation when AI fails."}],"docstring":"AI-powered code generator that creates project files based on requirements.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_documentation_generator.py","name":"AIDocumentationGenerator","data":{"name":"AIDocumentationGenerator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_documentation_generator.py","lineno":86,"bases":[],"methods":[{"name":"__init__","lineno":89,"docstring":null},{"name":"generate_documentation","lineno":93,"docstring":"Generate comprehensive documentation based on generated code and requirements.\n\nArgs:\n    generated_files: Main application files\n    test_files: Generated test files\n    requirements: Original requirements specification\n    architecture: Architecture specification\n    project_type: Type of project\n\nReturns:\n    Complete documentation package"},{"name":"_analyze_code_for_docs","lineno":165,"docstring":"Analyze code structure for documentation purposes."},{"name":"_get_decorator_name","lineno":277,"docstring":"Extract decorator name from AST node."},{"name":"_get_base_name","lineno":288,"docstring":"Extract base class name from AST node."},{"name":"_build_docs_system_prompt","lineno":297,"docstring":"Build system prompt for documentation generation."},{"name":"_build_docs_user_prompt","lineno":379,"docstring":"Build user prompt with code analysis and requirements for documentation."},{"name":"_fallback_documentation_generation","lineno":467,"docstring":"Fallback documentation generation when AI fails."}],"docstring":"AI-powered documentation generator that analyzes code and creates comprehensive docs.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_test_generator.py","name":"AITestGenerator","data":{"name":"AITestGenerator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/ai_test_generator.py","lineno":54,"bases":[],"methods":[{"name":"__init__","lineno":57,"docstring":null},{"name":"generate_test_suite","lineno":61,"docstring":"Generate comprehensive test suite based on generated code.\n\nArgs:\n    generated_files: List of generated code files with content\n    requirements: Original requirements specification\n    architecture: Architecture specification\n    project_type: Type of project\n\nReturns:\n    Complete test suite with intelligent test cases"},{"name":"_analyze_code_structure","lineno":125,"docstring":"Analyze the structure of generated code to understand what to test."},{"name":"_get_decorator_name","lineno":208,"docstring":"Extract decorator name from AST node."},{"name":"_get_base_name","lineno":219,"docstring":"Extract base class name from AST node."},{"name":"_build_test_system_prompt","lineno":228,"docstring":"Build system prompt for test generation."},{"name":"_build_test_user_prompt","lineno":308,"docstring":"Build user prompt with code analysis and requirements."},{"name":"_fallback_test_generation","lineno":370,"docstring":"Fallback test generation when AI fails."}],"docstring":"AI-powered test generator that analyzes code and creates comprehensive tests.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/generated/src/app/weather.py","name":"WeatherAPIError","data":{"name":"WeatherAPIError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/generated/src/app/weather.py","lineno":10,"bases":["Exception"],"methods":[],"docstring":"Raised when there is a failure to retrieve weather information from the API.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/08bb2702-61ca-459f-8cb5-ad4300dd8f68/src/app/middleware.py","name":"LoggingMiddleware","data":{"name":"LoggingMiddleware","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/08bb2702-61ca-459f-8cb5-ad4300dd8f68/src/app/middleware.py","lineno":14,"bases":["BaseHTTPMiddleware"],"methods":[],"docstring":"Middleware for logging details of incoming requests and responses.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/0fa64961-24af-4503-b98e-9179615df2f4/src/csv_reporter/data_processor.py","name":"DataProcessor","data":{"name":"DataProcessor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/0fa64961-24af-4503-b98e-9179615df2f4/src/csv_reporter/data_processor.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"process","lineno":24,"docstring":"Process data and return a summary suitable for reporting.\n\nArgs:\n    df: DataFrame to summarize.\n    progress_cb: Optional callback for progress bar (receives current row number).\nReturns:\n    dict summary, keyed by column name, value is dict of stats.\nRaises:\n    ValueError: On failure to process."}],"docstring":"Analyzes and summarizes input CSV data.\nProvides summary stats per column, such as count, mean, min/max for numerics,\nand count of unique values for categoricals.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/52fcf000-4d5e-4f4d-ac14-e290f2df6599/src/app/schemas.py","name":"GitHubAnalyzeRequest","data":{"name":"GitHubAnalyzeRequest","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/52fcf000-4d5e-4f4d-ac14-e290f2df6599/src/app/schemas.py","lineno":115,"bases":["BaseModel"],"methods":[],"docstring":null,"agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/5ac10d3a-2287-4030-b787-454c497bac54/src/app/weather.py","name":"WeatherAPIError","data":{"name":"WeatherAPIError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/5ac10d3a-2287-4030-b787-454c497bac54/src/app/weather.py","lineno":10,"bases":["Exception"],"methods":[],"docstring":"Raised when there is a failure to retrieve weather information from the API.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/86af23a5-d2e0-42ad-964c-813f30fc5791/src/scraper/robots_checker.py","name":"RobotsChecker","data":{"name":"RobotsChecker","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/86af23a5-d2e0-42ad-964c-813f30fc5791/src/scraper/robots_checker.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"is_allowed","lineno":25,"docstring":"Checks if the URL may be crawled per robots.txt.\nArgs:\n    url (str): The URL to be checked.\nReturns:\n    bool: True if allowed, False otherwise."},{"name":"_get_domain","lineno":46,"docstring":null},{"name":"_fetch_robots","lineno":50,"docstring":null}],"docstring":"Checks robots.txt compliance for the specified URLs/domains.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/agent_manager.py","name":"AgentManager","data":{"name":"AgentManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/agent_manager.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"_build_agent_prompt","lineno":34,"docstring":"Constructs a system prompt for the OpenAI agent."}],"docstring":"Manages multiple agent types and executes their tasks by invoking the OpenAI reasoning interface.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/openai_interface.py","name":"OpenAIReasoningInterface","data":{"name":"OpenAIReasoningInterface","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/openai_interface.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"_validate_structured_response","lineno":64,"docstring":null}],"docstring":"Abstraction for OpenAI model calls with robust error handling & JSON structure enforcement.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/orchestrator.py","name":"OrchestrationEngine","data":{"name":"OrchestrationEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/orchestrator.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"run","lineno":29,"docstring":"Synchronously runs the orchestration workflow with progress reporting.\nReturns a dictionary of all agent task outputs."}],"docstring":"Interprets validated input, builds the agent workflow, manages execution flows.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/response_aggregator.py","name":"AgentResultModel","data":{"name":"AgentResultModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/response_aggregator.py","lineno":10,"bases":["BaseModel"],"methods":[],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/ed3fee95-9e77-4547-bada-98bf1cb8bdf0/src/ai_collab_task_manager/ai_service.py","name":"AIService","data":{"name":"AIService","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/jobs/ed3fee95-9e77-4547-bada-98bf1cb8bdf0/src/ai_collab_task_manager/ai_service.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"schedule_ai_prio_and_estimate","lineno":33,"docstring":null},{"name":"_invoke_ai_for_task","lineno":38,"docstring":null},{"name":"_parse_ai_response","lineno":65,"docstring":null}],"docstring":"Handles communication with OpenAI API (o3, o4-mini models) for auto-prioritization,\ntime estimations, dependency resolution, and optimal scheduling suggestion.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/local_shared/openai_interfaces/responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/local_shared/openai_interfaces/responses_interface.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":31,"docstring":null},{"name":"create_structured_response","lineno":35,"docstring":"Create a structured response using OpenAI's native structured outputs.\n\nArgs:\n    prompt: The user prompt\n    response_model: Pydantic model defining the expected response structure\n    model: OpenAI model to use (must support structured outputs)\n    system_prompt: Optional system message\n    **kwargs: Additional parameters for the chat completion\n\nReturns:\n    Instance of response_model with parsed response\n\nRaises:\n    ValueError: If model is not approved or response cannot be parsed\n    Exception: For other API errors"},{"name":"create_simple_response","lineno":99,"docstring":"Create a simple text response without structured output.\n\nArgs:\n    prompt: The user prompt\n    model: OpenAI model to use\n    system_prompt: Optional system message\n    **kwargs: Additional parameters for the chat completion\n\nReturns:\n    The response content as a string\n\nRaises:\n    ValueError: If model is not approved\n    Exception: For other API errors"}],"docstring":"Modern interface for OpenAI structured outputs using native SDK methods.\n\nThis replaces the legacy manual schema injection approach with the\nrecommended client.chat.completions.parse() method.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","name":"ArchitectureSpec","data":{"name":"ArchitectureSpec","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","lineno":52,"bases":["BaseModel"],"methods":[],"docstring":"High-level architecture artifacts produced by ArchitectureAgent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","name":"CodeBundle","data":{"name":"CodeBundle","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","lineno":84,"bases":["BaseModel"],"methods":[],"docstring":"Container for generated code and documentation directories.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","name":"ProjectTypeDetection","data":{"name":"ProjectTypeDetection","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","lineno":115,"bases":["BaseModel"],"methods":[],"docstring":"Response model for project type detection by AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","name":"SecurityAnalysis","data":{"name":"SecurityAnalysis","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/schemas.py","lineno":133,"bases":["BaseModel"],"methods":[],"docstring":"Response model for security analysis by AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/validation.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/code_gen/validation.py","lineno":12,"bases":["Exception"],"methods":[],"docstring":"Raised when input validation fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/cognitive_interface/core/cognitive_database.py","name":"CognitiveDatabase","data":{"name":"CognitiveDatabase","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/cognitive_interface/core/cognitive_database.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":"Initialize database connection using existing patterns"},{"name":"_validate_connection","lineno":32,"docstring":"Validate database connection and collections"},{"name":"find_memories_about","lineno":51,"docstring":"Find memories related to a specific topic"},{"name":"get_foundational_memories","lineno":72,"docstring":"Get high-quality foundational memories"},{"name":"get_concepts_by_domain","lineno":88,"docstring":"Get cognitive concepts filtered by domain"},{"name":"get_memories_by_type","lineno":104,"docstring":"Get memories filtered by type (operational, procedural, etc.)"},{"name":"get_startup_context","lineno":120,"docstring":"Get essential startup context and foundational knowledge"},{"name":"assess_system_health","lineno":132,"docstring":"Comprehensive system health assessment"},{"name":"_calculate_health_score","lineno":158,"docstring":"Calculate overall system health score"},{"name":"_execute_query","lineno":171,"docstring":"Execute AQL query with error handling and validation"}],"docstring":"Agent-friendly interface to cognitive database operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/cognitive_interface/core/consolidated_arango.py","name":"ConsolidatedArangoDB","data":{"name":"ConsolidatedArangoDB","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/cognitive_interface/core/consolidated_arango.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":"Initialize with configuration from environment variables or defaults"},{"name":"_validate_connection","lineno":71,"docstring":"Validate database connection and core collections"},{"name":"search","lineno":83,"docstring":"Unified search interface with type-based routing\n\nsearch_types: content, tags, date_range, type, recent, id"},{"name":"_search_content","lineno":127,"docstring":"Search for content across document fields"},{"name":"_search_tags","lineno":165,"docstring":"Search documents by tags with AND/OR logic"},{"name":"_search_date_range","lineno":196,"docstring":"Search documents within date range"},{"name":"_search_type","lineno":218,"docstring":"Search documents by type field"},{"name":"_search_recent","lineno":234,"docstring":"Get recent documents within time window"},{"name":"_search_by_id","lineno":255,"docstring":"Direct document lookup by ID"},{"name":"modify","lineno":269,"docstring":"Unified modification interface with operation-based routing\n\noperations: insert, update, delete, upsert"},{"name":"_modify_insert","lineno":300,"docstring":"Insert new document with optional validation"},{"name":"_modify_update","lineno":334,"docstring":"Update documents by key or criteria"},{"name":"_modify_delete","lineno":396,"docstring":"Delete documents by key or criteria with confirmation"},{"name":"_modify_upsert","lineno":453,"docstring":"Insert or update based on matching fields"},{"name":"_search_by_criteria","lineno":489,"docstring":"Helper: Search documents by exact criteria match"},{"name":"manage","lineno":505,"docstring":"Unified management interface with action-based routing\n\nactions: collection_info, backup, health, count, exists, create_collection"},{"name":"_manage_collection_info","lineno":534,"docstring":"Get detailed collection information and statistics"},{"name":"_manage_backup","lineno":564,"docstring":"Backup collections to specified directory"},{"name":"_manage_health","lineno":602,"docstring":"Agent-IDE database health assessment"},{"name":"_manage_count","lineno":651,"docstring":"Count documents in collection with optional criteria"},{"name":"_manage_exists","lineno":689,"docstring":"Check if documents matching criteria exist"},{"name":"_manage_create_collection","lineno":722,"docstring":"Create new collection"},{"name":"_build_filter_conditions","lineno":749,"docstring":"Build AQL filter conditions from criteria dictionary"},{"name":"_execute_query","lineno":763,"docstring":"Execute AQL query with comprehensive error handling"},{"name":"_error_response","lineno":793,"docstring":"Standardized error response format"}],"docstring":"Main database abstraction providing 3 consolidated tools:\n- arango_search: All search/query operations\n- arango_modify: All CRUD operations\n- arango_manage: All admin operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","name":"ExpertAgent","data":{"name":"ExpertAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","lineno":4,"bases":[],"methods":[{"name":"__init__","lineno":5,"docstring":null},{"name":"propose_answer","lineno":15,"docstring":null},{"name":"critique_answers","lineno":21,"docstring":null},{"name":"revise_answer","lineno":30,"docstring":null},{"name":"_specialty_opinion","lineno":39,"docstring":null},{"name":"_critique_opinion","lineno":50,"docstring":null},{"name":"_revise_opinion","lineno":54,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","name":"MLExpert","data":{"name":"MLExpert","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","lineno":59,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":60,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","name":"StatsExpert","data":{"name":"StatsExpert","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","lineno":69,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":70,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","name":"EthicsExpert","data":{"name":"EthicsExpert","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_agent.py","lineno":79,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":80,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_assigner.py","name":"ExpertAssignerAgent","data":{"name":"ExpertAssignerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/expert_assigner.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":11,"docstring":null},{"name":"assign_experts","lineno":16,"docstring":"Decide which expert types to assign and generate system messages for each.\nReturns a list of dicts: {expert_type, system_message}"}],"docstring":"Assigns a panel of expert types for a given question and generates system messages for each using an allowed LLM.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/researcher_agent.py","name":"ResearcherAgent","data":{"name":"ResearcherAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/researcher_agent.py","lineno":8,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/synthesis_agent.py","name":"SynthesisAgent","data":{"name":"SynthesisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/synthesis_agent.py","lineno":5,"bases":[],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"synthesize","lineno":15,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/system_message_generator.py","name":"SystemMessageGeneratorAgent","data":{"name":"SystemMessageGeneratorAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/expert_panel/agents/system_message_generator.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":12,"docstring":null},{"name":"generate_system_message","lineno":17,"docstring":"Generate a system message for a new expert type using the allowed OpenAI model.\nReturns a structured dict with expert_name, system_message, model_used, and raw_response."}],"docstring":"Generates a system prompt for a new expert agent using an allowed OpenAI model.\nFollows project OpenAI usage and Python standards.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/base_agent.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/base_agent.py","lineno":28,"bases":["ABC"],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize the base agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance"},{"name":"get_capabilities","lineno":91,"docstring":"Get the agent's capabilities.\n\nReturns:\n    List of agent capabilities"},{"name":"set_message_broker","lineno":100,"docstring":"Set the message broker for the agent."},{"name":"add_tool","lineno":131,"docstring":"Add a tool to the agent's toolkit.\n\nArgs:\n    tool: Tool to add"},{"name":"remove_tool","lineno":141,"docstring":"Remove a tool from the agent's toolkit.\n\nArgs:\n    tool_name: Name of tool to remove\n\nReturns:\n    True if tool was removed, False if not found"},{"name":"get_available_tools","lineno":157,"docstring":"Get list of available tool names.\n\nReturns:\n    List of tool names"},{"name":"get_status","lineno":476,"docstring":"Get the current status of the agent.\n\nReturns:\n    Dictionary containing agent status information"},{"name":"__str__","lineno":501,"docstring":"String representation of the agent."},{"name":"__repr__","lineno":505,"docstring":"Detailed string representation of the agent."}],"docstring":"Abstract base class for all agents in the multi-agent system.\n\nAgents are autonomous entities that can execute tasks, communicate\nwith other agents, and use tools to accomplish their goals.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/research_agent.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/research_agent.py","lineno":19,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":30,"docstring":"Initialize the research agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance"},{"name":"get_capabilities","lineno":161,"docstring":"Get the research agent's capabilities.\n\nReturns:\n    List of agent capabilities"},{"name":"_assess_research_quality","lineno":556,"docstring":"Assess the quality of the research conducted.\n\nArgs:\n    search_results: Search results data\n    text_analysis: Text analysis data\n    synthesis: Synthesis data (if available)\n\nReturns:\n    Quality assessment string"}],"docstring":"Research agent specialized in information gathering and analysis.\n\nCapabilities:\n- Web search and information retrieval\n- Data analysis and text processing\n- Knowledge synthesis and summarization\n- Research coordination with other agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/task_agent.py","name":"TaskAgent","data":{"name":"TaskAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/agents/task_agent.py","lineno":21,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":37,"docstring":"Initialize the task agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance\n    work_directory: Optional working directory for file operations"},{"name":"_register_tools","lineno":88,"docstring":"Register task-specific tools."},{"name":"_filter_data","lineno":385,"docstring":"Filter data based on criteria."},{"name":"_aggregate_data","lineno":393,"docstring":"Aggregate data by groups."},{"name":"_sort_data","lineno":433,"docstring":"Sort data by key."},{"name":"_merge_data","lineno":439,"docstring":"Merge two datasets on a key."},{"name":"_calculate_statistics","lineno":533,"docstring":"Calculate basic statistics."},{"name":"_evaluate_expression","lineno":552,"docstring":"Safely evaluate mathematical expression."},{"name":"_calculate_hash","lineno":587,"docstring":"Calculate hash of data."},{"name":"_encode_data","lineno":606,"docstring":"Encode data."},{"name":"_decode_data","lineno":618,"docstring":"Decode data."},{"name":"_validate_against_schema","lineno":629,"docstring":"Validate data against schema."},{"name":"_validate_against_rules","lineno":654,"docstring":"Validate data against custom rules."},{"name":"_check_data_quality","lineno":691,"docstring":"Check data quality issues."},{"name":"_calculate_validation_statistics","lineno":729,"docstring":"Calculate validation statistics."},{"name":"_map_data","lineno":754,"docstring":"Apply field mapping to data."},{"name":"_normalize_data","lineno":765,"docstring":"Normalize numerical data."},{"name":"_pivot_data","lineno":801,"docstring":"Pivot data (simplified implementation)."},{"name":"_flatten_data","lineno":826,"docstring":"Flatten nested data structure."},{"name":"_group_data","lineno":851,"docstring":"Group data by specified fields."},{"name":"get_task_metrics","lineno":865,"docstring":"Get task execution metrics."},{"name":"get_capabilities","lineno":869,"docstring":"Get the agent's capabilities as a list of AgentCapability objects."}],"docstring":"Specialized agent for task execution and data processing.\n\nThis agent is designed to handle computational tasks, data transformations,\nfile operations, and other processing-intensive operations within\nmulti-agent workflows.\n\nKey Capabilities:\n- Data processing and transformation\n- File I/O operations\n- Computational tasks\n- Batch processing\n- Data validation and cleaning","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"MessageType","data":{"name":"MessageType","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":15,"bases":["Enum"],"methods":[],"docstring":"Types of messages that can be sent between agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"WorkflowStatus","data":{"name":"WorkflowStatus","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":44,"bases":["Enum"],"methods":[],"docstring":"Status of a workflow in the orchestration system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"Message","data":{"name":"Message","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":56,"bases":[],"methods":[],"docstring":"Inter-agent communication message.\n\nAttributes:\n    id: Unique message identifier\n    sender_id: ID of the sending agent\n    recipient_id: ID of the receiving agent (None for broadcast)\n    message_type: Type of message being sent\n    content: Message payload\n    timestamp: When the message was created\n    correlation_id: ID to correlate related messages","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"Task","data":{"name":"Task","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":80,"bases":[],"methods":[],"docstring":"Represents a unit of work to be executed by an agent.\n\nAttributes:\n    id: Unique task identifier\n    name: Human-readable task name\n    description: Detailed task description\n    agent_id: ID of the agent assigned to this task\n    tool_name: Name of the tool to use (if applicable)\n    parameters: Task-specific parameters\n    dependencies: List of task IDs this task depends on\n    status: Current task status\n    result: Task execution result\n    error: Error information if task failed\n    created_at: Task creation timestamp\n    started_at: Task start timestamp\n    completed_at: Task completion timestamp","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"TaskResult","data":{"name":"TaskResult","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":116,"bases":[],"methods":[],"docstring":"Result of a single task execution.\n\nAttributes:\n    task_id: Unique task identifier\n    status: Task execution status\n    result: Task output/result\n    error: Error message if task failed\n    execution_time: Time taken to execute the task (seconds)\n    started_at: Task start time\n    completed_at: Task completion time","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":140,"bases":[],"methods":[],"docstring":"Describes a capability that an agent possesses.\n\nAttributes:\n    name: Capability name\n    description: What this capability does\n    input_schema: Expected input format\n    output_schema: Expected output format\n    tools_required: List of tools needed for this capability","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"MultiAgentError","data":{"name":"MultiAgentError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":232,"bases":["Exception"],"methods":[],"docstring":"Base exception for multi-agent system errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"AgentError","data":{"name":"AgentError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":238,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by agent operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"ToolError","data":{"name":"ToolError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":244,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by tool operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"WorkflowError","data":{"name":"WorkflowError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":250,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by workflow operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","name":"CommunicationError","data":{"name":"CommunicationError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/common/types.py","lineno":256,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by communication operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/communication/message_broker.py","name":"MessageBroker","data":{"name":"MessageBroker","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/communication/message_broker.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the message broker.\n\nArgs:\n    max_queue_size: Maximum messages per agent queue\n    message_ttl: Message time-to-live in seconds"},{"name":"register_agent","lineno":73,"docstring":"Register an agent with the message broker.\n\nArgs:\n    agent_id: Unique agent identifier\n    message_handler: Optional async function to handle messages"},{"name":"unregister_agent","lineno":91,"docstring":"Unregister an agent from the message broker.\n\nArgs:\n    agent_id: Agent identifier to unregister"},{"name":"subscribe_to_message_type","lineno":200,"docstring":"Subscribe an agent to a specific message type.\n\nArgs:\n    agent_id: Agent identifier\n    message_type: Type of messages to subscribe to"},{"name":"unsubscribe_from_message_type","lineno":213,"docstring":"Unsubscribe an agent from a specific message type.\n\nArgs:\n    agent_id: Agent identifier\n    message_type: Type of messages to unsubscribe from"},{"name":"get_queue_size","lineno":252,"docstring":"Get the number of queued messages for an agent.\n\nArgs:\n    agent_id: Agent identifier\n\nReturns:\n    Number of queued messages"},{"name":"get_registered_agents","lineno":264,"docstring":"Get list of all registered agents.\n\nReturns:\n    List of agent IDs"},{"name":"get_message_history","lineno":273,"docstring":"Get recent message history.\n\nArgs:\n    limit: Maximum number of messages to return\n\nReturns:\n    List of recent messages"},{"name":"get_statistics","lineno":333,"docstring":"Get message broker statistics.\n\nReturns:\n    Dictionary containing broker statistics"}],"docstring":"Centralized message broker for inter-agent communication.\n\nSupports point-to-point messaging, broadcasting, and subscription-based\nmessage routing with delivery guarantees and error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/examples/demo_application.py","name":"DemoApplication","data":{"name":"DemoApplication","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/examples/demo_application.py","lineno":33,"bases":[],"methods":[{"name":"__init__","lineno":45,"docstring":"Initialize the demo application.\n\nArgs:\n    work_directory: Working directory for demo files"},{"name":"_setup_logging","lineno":74,"docstring":"Setup logging configuration."},{"name":"_generate_demo_summary","lineno":298,"docstring":"Generate a summary of demo results."},{"name":"_show_metrics","lineno":407,"docstring":"Show orchestrator metrics."},{"name":"_show_execution_history","lineno":421,"docstring":"Show execution history."},{"name":"_show_agent_capabilities","lineno":442,"docstring":"Show agent capabilities."},{"name":"_display_workflow_result","lineno":460,"docstring":"Display workflow execution result."}],"docstring":"Comprehensive demo application for multi-agent orchestration.\n\nThis application demonstrates:\n- Multi-agent workflow execution\n- Different orchestration patterns\n- Agent collaboration and communication\n- Real-time monitoring and metrics\n- Error handling and recovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/tools/base_tool.py","name":"BaseTool","data":{"name":"BaseTool","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/tools/base_tool.py","lineno":17,"bases":["ABC"],"methods":[{"name":"__init__","lineno":25,"docstring":"Initialize the base tool.\n\nArgs:\n    name: Unique tool name\n    description: Tool description"},{"name":"get_schema","lineno":56,"docstring":"Get the tool's input/output schema.\n\nReturns:\n    ToolSchema defining the tool's interface"},{"name":"validate_input","lineno":65,"docstring":"Validate input parameters against the tool's schema.\n\nArgs:\n    parameters: Parameters to validate\n\nReturns:\n    True if parameters are valid, False otherwise"},{"name":"get_capabilities","lineno":140,"docstring":"Get information about the tool's capabilities.\n\nReturns:\n    Dictionary describing tool capabilities"},{"name":"__str__","lineno":156,"docstring":"String representation of the tool."},{"name":"__repr__","lineno":160,"docstring":"Detailed string representation of the tool."}],"docstring":"Abstract base class for all tools in the multi-agent system.\n\nTools are pluggable components that provide specific capabilities\nto agents, such as web search, data processing, or external API access.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/tools/data_processor_tool.py","name":"DataProcessorTool","data":{"name":"DataProcessorTool","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/multi_agent_orchestration/tools/data_processor_tool.py","lineno":21,"bases":["BaseTool"],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the data processor tool."},{"name":"get_schema","lineno":86,"docstring":"Get the data processor tool schema.\n\nReturns:\n    ToolSchema defining input/output format"},{"name":"_matches_criteria","lineno":492,"docstring":"Check if an item matches the filter criteria.\n\nArgs:\n    item: Item to check\n    criteria: Filter criteria\n\nReturns:\n    True if item matches criteria, False otherwise"}],"docstring":"Data processing tool for various data manipulation tasks.\n\nSupports text processing, data analysis, format conversion,\nand basic statistical operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/docs/enhanced_logging_implementation.py","name":"AgentLogConfig","data":{"name":"AgentLogConfig","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/docs/enhanced_logging_implementation.py","lineno":30,"bases":[],"methods":[],"docstring":"Configuration for agent-specific logging","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/docs/enhanced_logging_implementation.py","name":"EnhancedSmartDecompositionAgent","data":{"name":"EnhancedSmartDecompositionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/docs/enhanced_logging_implementation.py","lineno":223,"bases":[],"methods":[{"name":"__init__","lineno":226,"docstring":null},{"name":"_create_agent_with_tools","lineno":290,"docstring":"Enhanced agent creation with lifecycle logging"},{"name":"_create_mcp_tool_wrapper","lineno":352,"docstring":"Enhanced MCP tool wrapper with logging"}],"docstring":"Smart Decomposition Agent with enhanced logging capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/smart_decomposition_agent.py","name":"SmartDecompositionAgent","data":{"name":"SmartDecompositionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/smart_decomposition_agent.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize the Smart Decomposition Agent with all modules"},{"name":"get_capabilities","lineno":399,"docstring":"Return the capabilities of this agent system"}],"docstring":"Modular Smart Decomposition Agent with O3 Intelligence\n\nThis agent orchestrates the complete workflow:\n1. O3 Reasoning -> Generate WorkflowSpecification\n2. Agent Creation -> Build specialized agents\n3. Parallel Execution -> Run agents concurrently\n4. Solution Synthesis -> Combine outputs with O3\n5. File Operations -> Extract and create deliverables","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_creation.py","name":"AgentCreationEngine","data":{"name":"AgentCreationEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_creation.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"_convert_tool_specs_to_functions","lineno":178,"docstring":"Convert ToolSpecification objects to actual tool functions"},{"name":"_create_mcp_tool_wrapper","lineno":324,"docstring":"Create a wrapper function for MCP tools"},{"name":"_create_progressive_prompt","lineno":357,"docstring":"Create dynamic prompts based on O3 analysis and specific agent requirements"}],"docstring":"Handles creation of specialized agents from O3 specifications","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":26,"bases":["str","Enum"],"methods":[],"docstring":"Specialized agent roles.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentStatus","data":{"name":"AgentStatus","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":40,"bases":["str","Enum"],"methods":[],"docstring":"Agent lifecycle status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentConfiguration","data":{"name":"AgentConfiguration","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":52,"bases":[],"methods":[],"docstring":"Configuration for creating an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentInstance","data":{"name":"AgentInstance","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":65,"bases":[],"methods":[],"docstring":"Created agent instance with metadata.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentCreationRequest","data":{"name":"AgentCreationRequest","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":80,"bases":[],"methods":[],"docstring":"Request for creating a new agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","name":"DynamicAgentFactory","data":{"name":"DynamicAgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/agent_factory.py","lineno":90,"bases":[],"methods":[{"name":"__init__","lineno":93,"docstring":null},{"name":"_initialize_agent_templates","lineno":100,"docstring":"NO FALLBACKS RULE: Templates deprecated - agents must be created with explicit specifications."},{"name":"_initialize_system_prompts","lineno":105,"docstring":"Initialize system prompts for different agent roles."},{"name":"create_agent_configuration","lineno":155,"docstring":"Create agent configuration based on request."},{"name":"create_research_agent","lineno":350,"docstring":"Create a specialized research agent."},{"name":"create_implementation_agent","lineno":367,"docstring":"Create a specialized implementation agent."},{"name":"create_analysis_agent","lineno":383,"docstring":"Create a specialized analysis agent."},{"name":"create_synthesis_agent","lineno":399,"docstring":"Create a specialized synthesis agent."},{"name":"create_coding_agent","lineno":415,"docstring":"Create a specialized coding agent."},{"name":"get_agent","lineno":456,"docstring":"Retrieve an agent by ID."},{"name":"list_agents","lineno":462,"docstring":"List all active agents."},{"name":"get_agents_by_role","lineno":466,"docstring":"Get all agents with a specific role."},{"name":"update_agent_status","lineno":470,"docstring":"Update agent status."},{"name":"configure_agent_tools","lineno":477,"docstring":"Update agent tool configuration."},{"name":"update_agent_context","lineno":486,"docstring":"Update agent context."},{"name":"get_agent_performance_metrics","lineno":497,"docstring":"Get performance metrics for an agent."},{"name":"cleanup_completed_agents","lineno":504,"docstring":"Clean up completed agents and return count removed."},{"name":"get_factory_status","lineno":518,"docstring":"Get factory status and statistics."}],"docstring":"Factory for creating specialized agents on-demand.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/complexity_model.py","name":"ComplexityModel","data":{"name":"ComplexityModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/complexity_model.py","lineno":28,"bases":["IComplexityAnalysisModel"],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the Complexity Model with all modular components"},{"name":"_enhance_factors_with_ai","lineno":170,"docstring":"Enhance factor analysis with AI insights"},{"name":"_generate_standard_reasoning","lineno":239,"docstring":"Generate reasoning text for standard (non-AI) analysis"},{"name":"analyze_scope_factor","lineno":262,"docstring":"Legacy method for scope analysis"},{"name":"analyze_technical_depth_factor","lineno":266,"docstring":"Legacy method for technical depth analysis"},{"name":"analyze_domain_knowledge_factor","lineno":270,"docstring":"Legacy method for domain knowledge analysis"},{"name":"analyze_dependencies_factor","lineno":274,"docstring":"Legacy method for dependencies analysis"},{"name":"analyze_timeline_factor","lineno":278,"docstring":"Legacy method for timeline analysis"},{"name":"analyze_risk_factor","lineno":282,"docstring":"Legacy method for risk analysis"},{"name":"calculate_overall_score","lineno":286,"docstring":"Legacy method for overall score calculation"},{"name":"determine_category","lineno":290,"docstring":"Legacy method for category determination"},{"name":"determine_execution_strategy","lineno":294,"docstring":"Legacy method for execution strategy determination"},{"name":"generate_agent_requirements","lineno":300,"docstring":"Legacy method for agent requirements generation"},{"name":"estimate_effort","lineno":304,"docstring":"Legacy method for effort estimation"},{"name":"calculate_confidence","lineno":308,"docstring":"Legacy method for confidence calculation"},{"name":"get_capabilities","lineno":353,"docstring":"Return the capabilities of this complexity model"}],"docstring":"Modular Complexity Analysis using AI Reasoning\n\nThis model orchestrates the complete complexity analysis workflow:\n1. Factor Analysis -> Analyze individual complexity factors\n2. AI Reasoning -> Use LLM for intelligent analysis\n3. Scoring Engine -> Calculate scores and determine strategy\n4. Result Synthesis -> Combine all analysis into final result","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/complexity_model_original.py","name":"ComplexityModel","data":{"name":"ComplexityModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/complexity_model_original.py","lineno":107,"bases":["IComplexityAnalysisModel"],"methods":[{"name":"__init__","lineno":114,"docstring":null},{"name":"_initialize_indicators","lineno":145,"docstring":"Initialize complexity indicators for automated detection."},{"name":"analyze_scope_factor","lineno":248,"docstring":"Analyze scope complexity (1-10)."},{"name":"analyze_technical_depth_factor","lineno":320,"docstring":"Analyze technical depth complexity (1-10)."},{"name":"analyze_domain_knowledge_factor","lineno":394,"docstring":"Analyze domain knowledge complexity (1-10)."},{"name":"analyze_dependencies_factor","lineno":466,"docstring":"Analyze dependencies complexity (1-10)."},{"name":"analyze_timeline_factor","lineno":537,"docstring":"Analyze timeline complexity (1-10)."},{"name":"analyze_risk_factor","lineno":593,"docstring":"Analyze risk complexity (1-10)."},{"name":"calculate_overall_score","lineno":657,"docstring":"Calculate weighted overall complexity score (0-100 scale)."},{"name":"determine_category","lineno":673,"docstring":"Determine complexity category from overall score (0-100 scale)."},{"name":"determine_execution_strategy","lineno":684,"docstring":"Determine optimal execution strategy based on complexity."},{"name":"generate_agent_requirements","lineno":709,"docstring":"Generate agent requirements based on complexity analysis."},{"name":"estimate_effort","lineno":773,"docstring":"Estimate effort level based on complexity."},{"name":"calculate_confidence","lineno":788,"docstring":"Calculate confidence in the complexity analysis."},{"name":"analyze_factors","lineno":963,"docstring":"Perform complete 6-factor complexity analysis."},{"name":"_extract_effort_estimate","lineno":1150,"docstring":"Extract effort estimate from AI response"}],"docstring":"Truly agentic complexity analysis using AI reasoning\n\nNO PREDETERMINED SCORING RULES - uses AI to dynamically analyze complexity","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/gap_analysis.py","name":"GapAnalysisAgent","data":{"name":"GapAnalysisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/gap_analysis.py","lineno":24,"bases":["IGapAnalysisAgent"],"methods":[{"name":"__init__","lineno":31,"docstring":null}],"docstring":"Truly agentic gap analysis using AI reasoning to identify missing information\n\nNO PREDEFINED SCHEMAS OR RULES - uses AI to understand what's needed","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/information_completion.py","name":"InformationCompletionAgent","data":{"name":"InformationCompletionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/information_completion.py","lineno":29,"bases":["IInformationCompletionAgent"],"methods":[{"name":"__init__","lineno":36,"docstring":null},{"name":"_extract_confidence_from_response","lineno":239,"docstring":"Extract confidence score from AI response"},{"name":"_extract_assumptions_from_response","lineno":253,"docstring":"Extract assumptions from AI response"},{"name":"_extract_default_value","lineno":263,"docstring":"Extract the specific default value from AI response"}],"docstring":"Truly agentic information completion using AI-driven research and reasoning\n\nNO STATIC DEFAULTS - uses AI to research and generate appropriate completions","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent.py","name":"O3MasterAgent","data":{"name":"O3MasterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent.py","lineno":32,"bases":[],"methods":[{"name":"__init__","lineno":44,"docstring":"Initialize the O3 Master Agent with all modular components"},{"name":"get_reasoning_history","lineno":341,"docstring":"Get the complete reasoning history for analysis"},{"name":"clear_reasoning_history","lineno":345,"docstring":"Clear the reasoning history"},{"name":"get_capabilities","lineno":350,"docstring":"Return the capabilities of this O3 master agent"}],"docstring":"Modular O3 Master Agent with Advanced Reasoning\n\nThis agent orchestrates the complete O3 analysis workflow:\n1. Complexity Analysis -> Assess request complexity\n2. Strategy Generation -> Generate agent deployment strategy\n3. Execution Planning -> Create detailed execution plans\n4. Pipeline Design -> Design optimal workflows\n5. Comprehensive Analysis -> Combine all results","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"AgentStrategy","data":{"name":"AgentStrategy","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":60,"bases":[],"methods":[],"docstring":"Strategy for agent deployment and coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"ExecutionPlan","data":{"name":"ExecutionPlan","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":72,"bases":[],"methods":[],"docstring":"Detailed execution plan for the request with explicit dependency tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"O3MasterAgent","data":{"name":"O3MasterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":412,"bases":[],"methods":[{"name":"__init__","lineno":415,"docstring":null},{"name":"_default_model_config","lineno":439,"docstring":"Default configuration for O3 model integration."},{"name":"_analyze_complexity_dimensions","lineno":556,"docstring":"Analyze complexity across six dimensions."},{"name":"_determine_complexity_category","lineno":611,"docstring":"Determine complexity category from score."},{"name":"_determine_execution_strategy","lineno":622,"docstring":"Determine optimal execution strategy."},{"name":"_generate_agent_requirements","lineno":633,"docstring":"Generate agent requirements based on strategy."},{"name":"_estimate_effort","lineno":662,"docstring":"Estimate effort level."},{"name":"_determine_agent_roles","lineno":743,"docstring":"Determine required agent roles based on complexity."},{"name":"_design_coordination_pattern","lineno":770,"docstring":"Design coordination pattern for agent interaction."},{"name":"_design_communication_flow","lineno":779,"docstring":"Design communication flows between agents."},{"name":"_generate_success_criteria","lineno":798,"docstring":"Generate success criteria based on complexity."},{"name":"_generate_risk_mitigation","lineno":817,"docstring":"Generate risk mitigation strategies."},{"name":"_define_execution_phases","lineno":1027,"docstring":"Define execution phases based on strategy."},{"name":"_analyze_phase_dependencies","lineno":1114,"docstring":"Analyze dependencies between phases."},{"name":"_plan_resources","lineno":1129,"docstring":"Plan resource requirements."},{"name":"_estimate_timelines","lineno":1138,"docstring":"Estimate phase timelines."},{"name":"_define_quality_gates","lineno":1147,"docstring":"Define quality gates for execution."},{"name":"_generate_contingency_plans","lineno":1162,"docstring":"Generate contingency plans for potential issues."},{"name":"_generate_recommendations","lineno":1230,"docstring":"Generate strategic recommendations."},{"name":"_parse_strategy_response","lineno":1502,"docstring":"Parse O3 strategy response and extract structured data"},{"name":"_build_agent_strategy_from_o3","lineno":1535,"docstring":"Build AgentStrategy object from O3's dynamic response"},{"name":"_get_approved_ai_model","lineno":1741,"docstring":"Get approved AI model with proper configuration (Rule 953 compliance)"},{"name":"_parse_json_from_ai_response","lineno":1852,"docstring":"Parse JSON from AI response with validation (shared utility)"},{"name":"_validate_ai_output_schema","lineno":1878,"docstring":"Validate AI output conforms to expected schema"},{"name":"_create_execution_phase_template","lineno":1895,"docstring":"Create execution phase template with context management guidelines"},{"name":"_create_workflow_assembly_template","lineno":1928,"docstring":"Create workflow assembly template with cross-stage coherence requirements"}],"docstring":"Advanced reasoning agent using O3-level intelligence.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation.py","name":"RequestValidationAgent","data":{"name":"RequestValidationAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation.py","lineno":35,"bases":["IRequestValidationAgent"],"methods":[{"name":"__init__","lineno":46,"docstring":"Initialize the Request Validation Agent with all modular components"},{"name":"_extract_request_content","lineno":307,"docstring":"Extract string content from request input"},{"name":"_determine_recommended_approach","lineno":326,"docstring":"Determine the recommended approach based on gap analysis"},{"name":"get_capabilities","lineno":340,"docstring":"Return the capabilities of this validation agent"}],"docstring":"Modular Request Validation using AI Reasoning\n\nThis agent orchestrates the complete request validation workflow:\n1. Validation Engine -> AI-powered request type detection and information extraction\n2. Gap Analyzer -> Identify and prioritize missing information\n3. Completion Engine -> Fill gaps through research and defaults\n4. Clarification Interface -> Generate user-friendly clarification questions","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","name":"RequestValidationAgent","data":{"name":"RequestValidationAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","lineno":286,"bases":["IRequestValidationAgent"],"methods":[{"name":"__init__","lineno":293,"docstring":null},{"name":"detect_request_type","lineno":489,"docstring":"Legacy synchronous method for backward compatibility"},{"name":"extract_information","lineno":526,"docstring":"Extract available information from the request text."},{"name":"identify_missing_fields","lineno":557,"docstring":"Identify missing required and important optional fields."},{"name":"validate_request","lineno":583,"docstring":"Perform complete request validation."}],"docstring":"Truly agentic request validation using AI-driven analysis\n\nNO PREDEFINED SCHEMAS - uses AI to understand request context and needs","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","name":"GapAnalysisAgent","data":{"name":"GapAnalysisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","lineno":620,"bases":[],"methods":[{"name":"__init__","lineno":623,"docstring":null},{"name":"prioritize_gaps","lineno":627,"docstring":"Prioritize missing information gaps."},{"name":"calculate_confidence","lineno":674,"docstring":"Calculate confidence based on gaps."},{"name":"categorize_gaps","lineno":689,"docstring":"Categorize gaps into researchable and unresearchable."},{"name":"analyze_gaps","lineno":697,"docstring":"Perform comprehensive gap analysis."}],"docstring":"Agent responsible for analyzing information gaps and prioritizing them.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","name":"InformationCompletionAgent","data":{"name":"InformationCompletionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","lineno":726,"bases":[],"methods":[{"name":"__init__","lineno":729,"docstring":null},{"name":"apply_defaults","lineno":750,"docstring":"Apply reasonable defaults for gaps that have them."},{"name":"document_assumptions","lineno":760,"docstring":"Document assumptions made during completion."}],"docstring":"Agent responsible for filling information gaps through research and defaults.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","name":"UserClarificationInterface","data":{"name":"UserClarificationInterface","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/request_validation_original.py","lineno":825,"bases":[],"methods":[{"name":"__init__","lineno":828,"docstring":null},{"name":"generate_focused_questions","lineno":832,"docstring":"Generate focused questions for critical gaps."},{"name":"_get_field_options","lineno":868,"docstring":"Get reasonable options for a field."},{"name":"explain_importance","lineno":883,"docstring":"Explain why a field is important."},{"name":"handle_user_response","lineno":898,"docstring":"Handle user responses to clarification questions."},{"name":"_parse_type_response","lineno":947,"docstring":"Parse AI response to extract request type and confidence"},{"name":"_parse_issues_response","lineno":981,"docstring":"Parse AI response to extract validation issues"}],"docstring":"Interface for handling user clarification when critical gaps remain.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/subdivision_agent_factory.py","name":"SubdivisionAgentSpecification","data":{"name":"SubdivisionAgentSpecification","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/subdivision_agent_factory.py","lineno":39,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":null}],"docstring":"Specification for a subdivision agent with LangGraph compliance","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/subdivision_agent_factory.py","name":"SubdivisionAgentFactory","data":{"name":"SubdivisionAgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/agents/subdivision_agent_factory.py","lineno":66,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":"Initialize the Subdivision Agent Factory"},{"name":"_get_tools_for_agent","lineno":381,"docstring":"Get appropriate tools for the agent based on its specification"},{"name":"_create_handoff_tool","lineno":440,"docstring":"Create a specific handoff tool for agent coordination"},{"name":"get_subdivision_metrics","lineno":469,"docstring":"Get metrics about the subdivision agent team"}],"docstring":"Factory for creating specialized agents for subdivided workflows\n\nUses modern LangGraph patterns with O3-generated specifications:\n- create_react_agent for all agent creation\n- Tool-based handoffs for agent coordination\n- Dynamic prompt and tool generation via O3\n- No hardcoded agent templates","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/ai_reasoning.py","name":"AIReasoningEngine","data":{"name":"AIReasoningEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/ai_reasoning.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"_extract_factor_section","lineno":299,"docstring":"Extract the section of AI response related to a specific factor"},{"name":"_extract_effort_estimate","lineno":331,"docstring":"Extract effort estimate from AI response"}],"docstring":"Handles AI reasoning for complexity analysis","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/complexity_analyzer.py","name":"ComplexityAnalyzer","data":{"name":"ComplexityAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/complexity_analyzer.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"_analyze_complexity_dimensions","lineno":135,"docstring":"Analyze complexity across six dimensions."},{"name":"_determine_complexity_category","lineno":195,"docstring":"Determine complexity category from score - NO HARDCODED THRESHOLDS"},{"name":"_determine_execution_strategy","lineno":219,"docstring":"Determine optimal execution strategy - NO HARDCODED THRESHOLDS"},{"name":"_generate_agent_requirements","lineno":241,"docstring":"Generate agent requirements based on strategy."},{"name":"_estimate_effort","lineno":270,"docstring":"Estimate effort level."}],"docstring":"Handles O3-powered complexity analysis and assessment","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/factor_analyzer.py","name":"FactorAnalyzer","data":{"name":"FactorAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/analysis/factor_analyzer.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":17,"docstring":null},{"name":"_initialize_indicators","lineno":22,"docstring":"Initialize complexity indicators for automated detection."},{"name":"_extract_request_text","lineno":125,"docstring":"Extract text from request object in multiple formats"},{"name":"analyze_scope_factor","lineno":142,"docstring":"Analyze scope complexity (1-10)."},{"name":"analyze_technical_depth_factor","lineno":209,"docstring":"Analyze technical depth complexity (1-10)."},{"name":"analyze_domain_knowledge_factor","lineno":269,"docstring":"Analyze domain knowledge complexity (1-10)."},{"name":"analyze_dependencies_factor","lineno":329,"docstring":"Analyze dependencies complexity (1-10)."},{"name":"analyze_timeline_factor","lineno":383,"docstring":"Analyze timeline complexity (1-10)."},{"name":"analyze_risk_factor","lineno":431,"docstring":"Analyze risk complexity (1-10)."}],"docstring":"Analyzes individual complexity factors using pattern recognition","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/config/config_manager.py","name":"APIConfig","data":{"name":"APIConfig","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/config/config_manager.py","lineno":27,"bases":[],"methods":[],"docstring":"OpenAI API configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/config/config_manager.py","name":"AgentFactoryConfig","data":{"name":"AgentFactoryConfig","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/config/config_manager.py","lineno":103,"bases":[],"methods":[],"docstring":"Agent factory configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/enforcement/implementation_guards.py","name":"SophisticationViolationError","data":{"name":"SophisticationViolationError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/enforcement/implementation_guards.py","lineno":18,"bases":["Exception"],"methods":[],"docstring":"Raised when simplified patterns are detected","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/execution/execution_engine.py","name":"ExecutionEngine","data":{"name":"ExecutionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/execution/execution_engine.py","lineno":66,"bases":[],"methods":[{"name":"__init__","lineno":88,"docstring":null},{"name":"_build_stategraph","lineno":95,"docstring":"🔒 **CRITICAL: LangGraph StateGraph construction - MANDATORY PATTERN** 🔒\n\nThis method builds the ONLY approved StateGraph architecture for OAMAT-SD.\n\n⚠️  **WARNING: DO NOT MODIFY THIS ARCHITECTURE**\n\nThe 3-node pattern is mandatory:\n1. distribute_agents: Prepares state for distribution\n2. execute_agent: Executes individual agents in parallel via Send API\n3. collect_results: Collects and merges results\n\n🚨 **CRITICAL EDGE PATTERNS:**\n- START → distribute_agents (normal edge)\n- distribute_agents → execute_agent (CONDITIONAL edge with Send routing)\n- execute_agent → collect_results (normal edge)\n- collect_results → END (normal edge)\n\nThe conditional edge is MANDATORY for Send API routing functionality."},{"name":"_prepare_agent_distribution","lineno":239,"docstring":"🔒 **CRITICAL: Node function for agent distribution preparation** 🔒\n\n⚠️  **STATE HANDLING WARNING - DO NOT CHANGE THESE PATTERNS:**\n\n1. **Parameter type**: state is dict, NOT SmartDecompositionState\n   - LangGraph automatically converts TypedDict to dict during execution\n   - NEVER use state.attribute_name syntax\n   - ALWAYS use state.get(\"attribute_name\", default)\n\n2. **Return type**: MUST return dict, NOT SmartDecompositionState\n   - LangGraph expects dict return values\n   - TypedDict return will cause serialization issues\n\n🚨 **CRITICAL**: This is a NODE function, not a routing function\n- Node functions prepare/transform state\n- Routing functions (like _create_send_objects) return Send objects\n- DO NOT mix these responsibilities\n\n❌ **NEVER REVERT TO:**\n   - def _prepare_agent_distribution(self, state: SmartDecompositionState) -> SmartDecompositionState\n   - state.specialized_agents access pattern\n   - return SmartDecompositionState(...)\n\n✅ **ALWAYS MAINTAIN:**\n   - state.get(\"specialized_agents\", {}) access pattern\n   - return state (as dict)\n   - Type hints as dict, not SmartDecompositionState"},{"name":"_create_send_objects","lineno":281,"docstring":"🔒 **CRITICAL: Routing function that creates Send objects for parallel execution** 🔒\n\n⚠️  **SEND API WARNING - THIS IS THE CORE OF PARALLEL ORCHESTRATION:**\n\n1. **Purpose**: This function enables LangGraph's native parallel execution\n   - Returns Send objects that LangGraph uses for parallel routing\n   - Each Send object creates a separate parallel execution path\n   - Provides 3-5x performance improvement over sequential execution\n\n2. **State Creation Pattern**: Create dict states for Send objects\n   - LangGraph Send API expects dict states, not TypedDict\n   - Each agent gets isolated state with only its own data\n   - Use state.get() patterns for safe access\n\n3. **Send Object Pattern**: Send(\"target_node\", agent_state)\n   - \"execute_agent\" is the target node for all agents\n   - Each gets a separate agent_state dict\n   - LangGraph automatically merges results\n\n🚨 **CRITICAL DEPENDENCIES:**\n- Must be used with add_conditional_edges (NOT add_edge)\n- Target node (\"execute_agent\") must handle dict states\n- Results automatically merged by LangGraph StateGraph\n\n❌ **NEVER REVERT TO:**\n   - asyncio.gather() patterns (Rule 997 violation)\n   - Custom parallel execution loops\n   - Sequential agent execution\n   - SmartDecompositionState object creation\n\n✅ **ALWAYS MAINTAIN:**\n   - Send objects for each agent\n   - Dict state creation pattern\n   - state.get() access methods\n   - Return list[Send] type hint"},{"name":"_collect_agent_results","lineno":484,"docstring":"Collect results from all agents - LangGraph automatically merges states"}],"docstring":"🔒 **CRITICAL: LangGraph StateGraph-based parallel execution - DO NOT MODIFY** 🔒\n\nThis class implements the ONLY approved pattern for OAMAT-SD agent orchestration:\n- LangGraph StateGraph for workflow management\n- Send API for parallel agent coordination\n- Native LangGraph patterns (NO custom asyncio)\n\n❌ **NEVER REVERT TO:**\n   - asyncio.gather() usage (Rule 997 violation)\n   - Custom asyncio coordination\n   - Sequential agent execution\n   - Manual state routing\n\n✅ **ALWAYS MAINTAIN:**\n   - Send API for parallel execution\n   - StateGraph workflow architecture\n   - Dict-based state handling (not TypedDict access)\n   - Proper LangGraph node patterns","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/execution/subdivision_executor.py","name":"SubdivisionExecutor","data":{"name":"SubdivisionExecutor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/execution/subdivision_executor.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize the Subdivision Executor"},{"name":"_build_subdivision_graph","lineno":120,"docstring":"Build LangGraph StateGraph for subdivision execution"},{"name":"_subdivision_coordinator_node","lineno":168,"docstring":"Coordinate subdivision workflow execution using Send API"},{"name":"_create_subdivision_routing","lineno":205,"docstring":"Create Send objects for parallel subdivision agent execution"},{"name":"_create_agent_execution_node","lineno":230,"docstring":"Create execution node for a specific subdivision agent"},{"name":"_aggregate_results_node","lineno":310,"docstring":"Aggregate results from all subdivision agents"},{"name":"get_subdivision_execution_metrics","lineno":340,"docstring":"Get metrics about subdivision execution"}],"docstring":"Specialized executor for subdivision workflows using LangGraph Send API\n\nHandles:\n- Parallel execution of subdivision agents\n- Tool-based handoffs between agents\n- State coordination across subdivision hierarchy\n- Result aggregation and integration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IRequestValidationAgent","data":{"name":"IRequestValidationAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":20,"bases":["ABC"],"methods":[],"docstring":"Interface for dynamic request validation and information extraction","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IGapAnalysisAgent","data":{"name":"IGapAnalysisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":55,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent gap analysis and dynamic prioritization","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IInformationCompletionAgent","data":{"name":"IInformationCompletionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":91,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent information completion using dynamic research","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IComplexityAnalysisModel","data":{"name":"IComplexityAnalysisModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":129,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent complexity analysis using dynamic factor generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IO3MasterAgent","data":{"name":"IO3MasterAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":166,"bases":["ABC"],"methods":[],"docstring":"Interface for O3 master agent with dynamic strategy generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IDynamicAgentFactory","data":{"name":"IDynamicAgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":218,"bases":["ABC"],"methods":[],"docstring":"Interface for truly dynamic agent creation without templates","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","name":"ILangGraphOrchestrator","data":{"name":"ILangGraphOrchestrator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","lineno":16,"bases":["ABC"],"methods":[],"docstring":"Interface for dynamic LangGraph workflow orchestration","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","name":"IMCPToolRegistry","data":{"name":"IMCPToolRegistry","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","lineno":66,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent MCP tool management and selection","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/system_interfaces.py","name":"IErrorHandlingManager","data":{"name":"IErrorHandlingManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/interfaces/system_interfaces.py","lineno":54,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent error handling and recovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","name":"GeneratedFile","data":{"name":"GeneratedFile","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","lineno":19,"bases":["StrictBaseModel"],"methods":[],"docstring":"Single file generated by an agent - MANDATORY FORMAT","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","name":"ToolExecution","data":{"name":"ToolExecution","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","lineno":37,"bases":["StrictBaseModel"],"methods":[],"docstring":"Tool execution performed by agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","name":"AgentDeliverables","data":{"name":"AgentDeliverables","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","lineno":46,"bases":["StrictBaseModel"],"methods":[],"docstring":"MANDATORY structured response format for ALL agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","name":"AgentResponse","data":{"name":"AgentResponse","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_response_models.py","lineno":82,"bases":["StrictBaseModel"],"methods":[],"docstring":"Complete agent response wrapper - TOP LEVEL SCHEMA","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_specification_schemas.py","name":"AgentSpecificationOutput","data":{"name":"AgentSpecificationOutput","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_specification_schemas.py","lineno":4,"bases":["BaseModel"],"methods":[],"docstring":"Structured output schema for O3 agent specification generation\n\nIMPORTANT: This schema expects a JSON object with an 'agent_specifications' key containing an array.\nDO NOT return just the array directly - wrap it in this object structure.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_specification_schemas.py","name":"AgentSpecification","data":{"name":"AgentSpecification","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/agent_specification_schemas.py","lineno":18,"bases":["BaseModel"],"methods":[],"docstring":"Individual agent specification with all required fields","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","name":"GapType","data":{"name":"GapType","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","lineno":35,"bases":["str","Enum"],"methods":[],"docstring":"Type/category of information gap for agentic gap analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","name":"AgentCommand","data":{"name":"AgentCommand","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","lineno":219,"bases":["BaseModel"],"methods":[],"docstring":"Command for agent execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","name":"AgentResult","data":{"name":"AgentResult","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","lineno":230,"bases":["BaseModel"],"methods":[],"docstring":"Result from agent execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","name":"AgentState","data":{"name":"AgentState","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/data_models.py","lineno":242,"bases":["BaseModel"],"methods":[],"docstring":"State management for agent orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/o3_analysis_models.py","name":"AgentStrategy","data":{"name":"AgentStrategy","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/o3_analysis_models.py","lineno":50,"bases":[],"methods":[],"docstring":"Strategy for agent deployment and coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/o3_analysis_models.py","name":"ExecutionPlan","data":{"name":"ExecutionPlan","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/o3_analysis_models.py","lineno":62,"bases":[],"methods":[],"docstring":"Detailed execution plan for the request with explicit dependency tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/tool_models.py","name":"ToolCategory","data":{"name":"ToolCategory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/models/tool_models.py","lineno":27,"bases":["str","Enum"],"methods":[],"docstring":"Categories of available tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/file_manager.py","name":"FileOperationsManager","data":{"name":"FileOperationsManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/file_manager.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":22,"docstring":null},{"name":"_extract_content_from_agent_output","lineno":133,"docstring":"Extract actual content from LangGraph agent output format"},{"name":"_extract_filename_from_hint","lineno":775,"docstring":"Extract filename from various hint formats"},{"name":"_sanitize_filename","lineno":798,"docstring":"Sanitize filename for safe filesystem usage"},{"name":"_detect_language_from_extension","lineno":813,"docstring":"Detect programming language from file extension"},{"name":"_get_extension_for_language","lineno":849,"docstring":"Get appropriate file extension for a language"},{"name":"_detect_language_from_extension","lineno":869,"docstring":"Detect programming language from file extension"},{"name":"_is_json_deliverables_format","lineno":977,"docstring":"Detect if the content is in JSON deliverables format.\nExpected format: '{\"deliverables\": [{\"filename\": \"...\", \"content\": \"...\"}]}'"},{"name":"_deduplicate_files","lineno":1057,"docstring":"Remove duplicate files based on content similarity"},{"name":"_generate_default_filename","lineno":1074,"docstring":"Generate a default filename when one can't be determined"},{"name":"create_project_context","lineno":1106,"docstring":"Create project context and directory structure"}],"docstring":"Handles all file operations for the Smart Decomposition Agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_integrator.py","name":"SubdivisionResultIntegrator","data":{"name":"SubdivisionResultIntegrator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_integrator.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initialize the Subdivision Result Integrator"},{"name":"_format_agent_outputs_for_analysis","lineno":477,"docstring":"Format agent outputs for O3 analysis"},{"name":"_format_agent_outputs_for_synthesis","lineno":497,"docstring":"Format agent outputs for solution synthesis"},{"name":"get_integration_metrics","lineno":520,"docstring":"Get comprehensive metrics about the integration process"}],"docstring":"Intelligent integration of subdivision agent outputs using O3 reasoning\n\nCapabilities:\n- Cross-domain result synthesis\n- Conflict detection and resolution\n- Quality assessment and scoring\n- Performance optimization\n- Coherent solution generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_state_manager.py","name":"SubdivisionStateContext","data":{"name":"SubdivisionStateContext","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_state_manager.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":null},{"name":"add_child_context","lineno":45,"docstring":"Add a child subdivision context"},{"name":"create_state_snapshot","lineno":52,"docstring":"Create a snapshot of the current state"},{"name":"get_inheritance_chain","lineno":64,"docstring":"Get the full inheritance chain from root to this context"}],"docstring":"Context container for subdivision state management","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_state_manager.py","name":"SubdivisionStateManager","data":{"name":"SubdivisionStateManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/operations/subdivision_state_manager.py","lineno":74,"bases":[],"methods":[{"name":"__init__","lineno":86,"docstring":"Initialize the Subdivision State Manager"},{"name":"get_context_hierarchy","lineno":435,"docstring":"Get the full context hierarchy for a subdivision context"},{"name":"cleanup_completed_contexts","lineno":467,"docstring":"Clean up completed subdivision contexts older than retention period"},{"name":"get_performance_metrics","lineno":503,"docstring":"Get performance metrics for subdivision state management"}],"docstring":"Manages state coordination and context across subdivision workflows\n\nCapabilities:\n- Hierarchical state tracking\n- Context inheritance and preservation\n- State synchronization between agents\n- Performance optimization\n- Cross-agent coordination","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/request_standardizer.py","name":"RequestStandardizer","data":{"name":"RequestStandardizer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/request_standardizer.py","lineno":31,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the Request Standardizer with Subdivision Analysis"},{"name":"_create_standardization_prompt","lineno":195,"docstring":"Create the comprehensive analysis prompt for request standardization"},{"name":"validate_standardized_request","lineno":316,"docstring":"Validate the quality and completeness of a standardized request.\n\nReturns:\n    Validation report with recommendations"}],"docstring":"Intelligent preprocessing agent that standardizes user requests.\n\nAnalyzes raw user input and fills in a comprehensive StandardizedRequest\nschema with intelligent assumptions where information is missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","name":"DomainSpecialization","data":{"name":"DomainSpecialization","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","lineno":136,"bases":["BaseModel"],"methods":[],"docstring":"Domain-specific specialization requirements - ALL O3-GENERATED","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","name":"TechnicalSpecification","data":{"name":"TechnicalSpecification","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","lineno":176,"bases":["BaseModel"],"methods":[],"docstring":"Technical requirements and constraints","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","name":"ContextInformation","data":{"name":"ContextInformation","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","lineno":241,"bases":["BaseModel"],"methods":[],"docstring":"Environmental and contextual details","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","name":"StandardizedRequest","data":{"name":"StandardizedRequest","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/preprocessing/schemas.py","lineno":295,"bases":["BaseModel"],"methods":[{"name":"ensure_functional_requirements_list","lineno":377,"docstring":"Ensure functional requirements is always a list"},{"name":"summary","lineno":384,"docstring":"Generate a concise summary of the standardized request"},{"name":"is_well_defined","lineno":389,"docstring":"Check if the request is well-defined based on confidence scores"},{"name":"key_technologies","lineno":397,"docstring":"Get the key technologies involved in this request"},{"name":"requires_subdivision","lineno":406,"docstring":"Check if this request requires subdivision based on analysis"},{"name":"subdivision_complexity_score","lineno":413,"docstring":"Get the subdivision complexity score"},{"name":"suggested_subdivision_roles","lineno":420,"docstring":"Get suggested roles for subdivision"},{"name":"get_domain_specializations_summary","lineno":426,"docstring":"Get summary of domain specializations"},{"name":"estimate_subdivision_benefits","lineno":433,"docstring":"Estimate benefits vs overhead of subdivision"}],"docstring":"Universal standardized format for any request to OAMAT Smart Decomposition.\n\nThis schema ensures the O3 master agent always receives complete, structured\ninformation regardless of how the user originally phrased their request.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/pydantic_configs.py","name":"StrictBaseModel","data":{"name":"StrictBaseModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/pydantic_configs.py","lineno":8,"bases":["BaseModel"],"methods":[],"docstring":"Base model with strict validation for OpenAI structured outputs","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/ai_reasoning_utils.py","name":"AIReasoningUtils","data":{"name":"AIReasoningUtils","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/ai_reasoning_utils.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"_default_model_config","lineno":41,"docstring":"Default configuration for O3 model integration."},{"name":"_get_approved_ai_model","lineno":50,"docstring":"Get approved AI model for specific use case using centralized configuration"},{"name":"parse_json_from_ai_response","lineno":150,"docstring":"Parse JSON from AI response with validation (shared utility)"},{"name":"validate_ai_output_schema","lineno":176,"docstring":"Validate AI output conforms to expected schema"},{"name":"create_structured_prompt","lineno":193,"docstring":"Create a structured prompt for AI reasoning"},{"name":"create_analysis_prompt","lineno":230,"docstring":"Create a prompt specifically for analysis tasks"},{"name":"create_generation_prompt","lineno":259,"docstring":"Create a prompt for generation tasks"},{"name":"extract_json_from_response","lineno":293,"docstring":"Extract JSON from AI response with optional fallback"},{"name":"log_reasoning_step","lineno":306,"docstring":"Log a reasoning step for debugging and analysis"},{"name":"create_error_recovery_prompt","lineno":321,"docstring":"Create a prompt for error recovery scenarios"}],"docstring":"Handles AI reasoning infrastructure and utilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"StructuredOutputError","data":{"name":"StructuredOutputError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":32,"bases":["Exception"],"methods":[],"docstring":"Exception raised when structured output enforcement fails","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"SchemaValidationError","data":{"name":"SchemaValidationError","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":38,"bases":["Exception"],"methods":[],"docstring":"Exception raised when schema validation fails","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"StructuredOutputEnforcer","data":{"name":"StructuredOutputEnforcer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":null},{"name":"_load_schemas","lineno":93,"docstring":"Load all JSON schemas for structured output enforcement and resolve references recursively"},{"name":"_resolve_schema_references","lineno":127,"docstring":"Recursively resolve $ref references in a schema"},{"name":"_resolve_refs","lineno":160,"docstring":"Resolve $ref references using the definitions"},{"name":"_make_openai_compliant_schema","lineno":195,"docstring":"Convert a Pydantic-generated schema to OpenAI structured output compliant format.\n\nOpenAI requires:\n- \"additionalProperties\": false on all objects\n- All properties must be in \"required\" array when additionalProperties is false\n- No $ref references - everything must be inlined"},{"name":"_create_schema_enforced_prompt","lineno":628,"docstring":"Create an enhanced prompt that enforces schema compliance"},{"name":"_generate_schema_description","lineno":678,"docstring":"Generate human-readable description of schema constraints"},{"name":"_validate_against_schema","lineno":799,"docstring":"Validate result against JSON schema with detailed error reporting"},{"name":"_validate_business_logic","lineno":816,"docstring":"Additional business logic validation beyond schema compliance"},{"name":"_validate_workflow_business_logic","lineno":840,"docstring":"Validate WorkflowSpecification business logic"},{"name":"_validate_config_business_logic","lineno":856,"docstring":"Validate Dynamic Configuration business logic"},{"name":"_validate_complexity_business_logic","lineno":872,"docstring":"Validate Complexity Analysis business logic"},{"name":"_validate_strategy_business_logic","lineno":891,"docstring":"Validate Agent Strategy business logic"},{"name":"_format_validation_error","lineno":905,"docstring":"Format validation error for detailed debugging"},{"name":"_save_raw_response","lineno":913,"docstring":"Save raw O3 response for debugging"},{"name":"_log_success_metrics","lineno":941,"docstring":"Log success metrics for monitoring"},{"name":"get_available_schemas","lineno":1004,"docstring":"Get list of available schema names"},{"name":"get_schema","lineno":1008,"docstring":"Get specific schema by name"}],"docstring":"Core engine for enforcing structured outputs from O3 models using OpenAI's\nresponse_format parameter with comprehensive schema validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/subdivision_analyzer.py","name":"SubdivisionAnalyzer","data":{"name":"SubdivisionAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/reasoning/subdivision_analyzer.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":"Initialize the Subdivision Analyzer"},{"name":"_build_analysis_context","lineno":163,"docstring":"Build comprehensive context for O3 subdivision analysis"},{"name":"_display_subdivision_analysis","lineno":224,"docstring":"Display subdivision analysis results for debugging"}],"docstring":"O3-Powered Subdivision Analysis Agent\n\nUses O3-mini reasoning model to analyze request complexity and determine\noptimal subdivision strategies with dynamic metadata generation.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/console_interface.py","name":"ConsoleInterface","data":{"name":"ConsoleInterface","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/console_interface.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":30,"docstring":null},{"name":"show_header","lineno":36,"docstring":"Display beautiful header"},{"name":"show_request_analysis","lineno":48,"docstring":"Display request analysis in beautiful format"},{"name":"show_workflow_specification","lineno":74,"docstring":"Display workflow specification with pretty formatting"},{"name":"show_subdivision_detection","lineno":107,"docstring":"Display subdivision workflow detection"},{"name":"show_agent_creation","lineno":121,"docstring":"Display agent creation results"},{"name":"show_execution_start","lineno":151,"docstring":"Display execution start with agent count"},{"name":"show_agent_progress","lineno":165,"docstring":"Display individual agent progress"},{"name":"show_synthesis_start","lineno":184,"docstring":"Display solution synthesis start"},{"name":"show_file_generation","lineno":200,"docstring":"Display file generation results"},{"name":"show_final_results","lineno":238,"docstring":"Display final results summary"},{"name":"show_error","lineno":277,"docstring":"Display error in a clear format"},{"name":"show_pretty_json","lineno":288,"docstring":"Display JSON data with pretty formatting"},{"name":"show_prompt_preview","lineno":296,"docstring":"Display prompt with proper formatting"},{"name":"_show_step","lineno":311,"docstring":"Display step header with progress"},{"name":"clear","lineno":323,"docstring":"Clear the console"},{"name":"print","lineno":327,"docstring":"Simple print method for basic messages"}],"docstring":"Beautiful console interface for user-friendly OAMAT-SD output\n\nSeparates user experience from technical logging:\n- Console: Clear, formatted, user-friendly\n- Debug Logs: Technical, detailed, comprehensive","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/log_config.py","name":"LogCategory","data":{"name":"LogCategory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/log_config.py","lineno":26,"bases":["str","Enum"],"methods":[],"docstring":"Intelligent log decomposition categories","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/logger_factory.py","name":"SmartDecompositionProcessor","data":{"name":"SmartDecompositionProcessor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/logger_factory.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"__call__","lineno":32,"docstring":"Process log events with correlation context and intelligent routing"}],"docstring":"Custom structlog processor for Smart Decomposition architecture","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/logger_factory.py","name":"LoggerFactory","data":{"name":"LoggerFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/sd_logging/logger_factory.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":null},{"name":"_setup_structlog","lineno":70,"docstring":"Configure structlog for structured JSON logging"},{"name":"_setup_file_handlers","lineno":90,"docstring":"Setup rotating file handlers for each log category"},{"name":"_create_file_handler","lineno":103,"docstring":"Create a rotating file handler for a specific log category"},{"name":"get_console_logger","lineno":131,"docstring":"Get logger for user-friendly console output"},{"name":"get_debug_logger","lineno":138,"docstring":"Get comprehensive debug logger"},{"name":"get_api_logger","lineno":145,"docstring":"Get logger for API calls and responses"},{"name":"get_workflow_logger","lineno":152,"docstring":"Get logger for DAG execution and agent coordination"},{"name":"get_performance_logger","lineno":159,"docstring":"Get logger for timing and resource metrics"},{"name":"get_complexity_logger","lineno":166,"docstring":"Get logger for complexity analysis and decision-making"},{"name":"get_error_logger","lineno":173,"docstring":"Get logger for errors, exceptions, and recovery"},{"name":"get_audit_logger","lineno":180,"docstring":"Get audit-specific logger"},{"name":"log_api_call","lineno":201,"docstring":"Log an API call with comprehensive details"},{"name":"log_agent_interaction","lineno":233,"docstring":"Log agent interactions and handoffs"},{"name":"log_complexity_analysis","lineno":262,"docstring":"Log complexity analysis decisions"},{"name":"log_performance_metrics","lineno":284,"docstring":"Log performance and resource usage metrics"},{"name":"log_workflow_execution","lineno":307,"docstring":"Log complete workflow execution"},{"name":"get_tool_logger","lineno":339,"docstring":"Get tool-specific logger for MCP tools"},{"name":"log_tool_execution","lineno":360,"docstring":"Log comprehensive tool execution details"},{"name":"get_agent_logger","lineno":399,"docstring":"Get agent-specific logger"},{"name":"log_agent_lifecycle","lineno":420,"docstring":"Log agent lifecycle events (creation, execution, completion)"},{"name":"get_component_logger","lineno":441,"docstring":"Get component-specific logger"},{"name":"log_component_operation","lineno":462,"docstring":"Log component operations with context"},{"name":"get_audit_logger","lineno":490,"docstring":"Get audit-specific logger"},{"name":"log_audit_event","lineno":498,"docstring":"Log audit and security events"},{"name":"log_timing_breakdown","lineno":524,"docstring":"Log detailed timing breakdown for performance analysis"},{"name":"log_success_metrics","lineno":548,"docstring":"Log success rates and quality metrics"},{"name":"log_memory_usage","lineno":571,"docstring":"Log memory usage metrics"},{"name":"log_request_flow","lineno":595,"docstring":"Log end-to-end request processing flow"},{"name":"log_error_with_context","lineno":615,"docstring":"Log errors with comprehensive context"},{"name":"_truncate_content","lineno":639,"docstring":"Truncate content if too large for logging"},{"name":"create_master_log","lineno":653,"docstring":"Create a centralized master log that captures ALL log entries"},{"name":"reconfigure_for_project","lineno":723,"docstring":"Reconfigure logging to use project-specific log directory"}],"docstring":"Factory for creating specialized loggers with intelligent decomposition","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/synthesis/solution_synthesis.py","name":"SolutionSynthesisEngine","data":{"name":"SolutionSynthesisEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/synthesis/solution_synthesis.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"_create_synthesis_prompt","lineno":149,"docstring":"Create a comprehensive synthesis prompt for O3 reasoning"},{"name":"_determine_artifact_type","lineno":244,"docstring":"Determine the type of artifact being created"},{"name":"_validate_solution","lineno":263,"docstring":"Validate the synthesized solution"},{"name":"_calculate_synthesis_quality","lineno":353,"docstring":"Calculate the quality score of the synthesized solution"}],"docstring":"Handles synthesis of agent outputs into final solutions","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/core/execution_engine.py","name":"ToolExecutionEngine","data":{"name":"ToolExecutionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/core/execution_engine.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null}],"docstring":"Handles tool execution and parallel coordination","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/core/mcp_integration.py","name":"MCPIntegration","data":{"name":"MCPIntegration","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/core/mcp_integration.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"get_available_tools","lineno":335,"docstring":"Return list of available tool names"},{"name":"is_tool_available","lineno":339,"docstring":"Check if a specific tool is available"}],"docstring":"Unified MCP Integration Layer\n\nThis class provides a bridge between the OAMAT tool system and the actual\nMCP functions available in the current environment.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/mcp_tool_registry_original.py","name":"ToolCategory","data":{"name":"ToolCategory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/mcp_tool_registry_original.py","lineno":24,"bases":["str","Enum"],"methods":[],"docstring":"Categories of available tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/mcp_tool_registry_reference.py","name":"MCPToolRegistry","data":{"name":"MCPToolRegistry","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/tools/mcp_tool_registry_reference.py","lineno":194,"bases":[],"methods":[{"name":"__init__","lineno":199,"docstring":null},{"name":"_load_config","lineno":254,"docstring":"Load MCP configuration"},{"name":"_initialize_registry","lineno":266,"docstring":"Initialize the tool registry with automatic discovery"},{"name":"_discover_and_register_tools","lineno":311,"docstring":"Automatically discover and register available MCP tools"},{"name":"_register_tool","lineno":444,"docstring":"Register a tool in the registry"},{"name":"_load_tool_chains","lineno":486,"docstring":"Load predefined tool chains from configuration"},{"name":"execute_tool","lineno":547,"docstring":"Synchronous wrapper for executing a tool method."},{"name":"_update_tool_stats","lineno":676,"docstring":"Update tool performance statistics"},{"name":"_infer_method_for_tool","lineno":852,"docstring":"Infer the best method to use for a tool based on available data"},{"name":"get_tool_analytics","lineno":903,"docstring":"Get comprehensive analytics about tool usage and performance"},{"name":"list_available_tools","lineno":961,"docstring":"List all available tools with their metadata"},{"name":"get_tools_by_capability","lineno":976,"docstring":"Get tools that have a specific capability"}],"docstring":"Comprehensive MCP tool registry with automatic discovery and intelligent routing","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/completion_engine.py","name":"CompletionEngine","data":{"name":"CompletionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/completion_engine.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"apply_defaults","lineno":84,"docstring":"Apply reasonable defaults for gaps that have them."},{"name":"document_assumptions","lineno":97,"docstring":"Document assumptions made during completion."},{"name":"identify_escalation_needs","lineno":114,"docstring":"Determine if escalation to user is required."},{"name":"get_completion_summary","lineno":189,"docstring":"Get a human-readable summary of the completion results."},{"name":"get_research_confidence","lineno":209,"docstring":"Get confidence level for research results of a specific field - NO FALLBACKS"}],"docstring":"Fills information gaps through research and intelligent defaults","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/gap_analyzer.py","name":"GapAnalyzer","data":{"name":"GapAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/gap_analyzer.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"prioritize_gaps","lineno":30,"docstring":"Prioritize missing information gaps."},{"name":"calculate_confidence","lineno":80,"docstring":"Calculate confidence based on gaps."},{"name":"categorize_gaps","lineno":95,"docstring":"Categorize gaps into researchable and unresearchable."},{"name":"analyze_gaps","lineno":103,"docstring":"Perform comprehensive gap analysis."},{"name":"get_critical_gaps","lineno":139,"docstring":"Get only critical gaps from a list."},{"name":"get_researchable_gaps","lineno":143,"docstring":"Get only researchable gaps from a list."},{"name":"estimate_completion_difficulty","lineno":147,"docstring":"Estimate the difficulty of completing the gaps."}],"docstring":"Analyzes information gaps and prioritizes them for completion","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/validation_engine.py","name":"ValidationEngine","data":{"name":"ValidationEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/src/validation/validation_engine.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":null},{"name":"_pattern_detect_request_type","lineno":255,"docstring":"Pattern-based request type detection"},{"name":"_pattern_extract_information","lineno":330,"docstring":"Pattern-based information extraction"},{"name":"_pattern_detect_missing_fields","lineno":360,"docstring":"Pattern-based missing field detection"},{"name":"_parse_type_response","lineno":381,"docstring":"Parse AI request type response"},{"name":"_parse_extraction_response","lineno":409,"docstring":"Parse AI information extraction response"},{"name":"_parse_missing_fields_response","lineno":422,"docstring":"Parse AI missing fields response"}],"docstring":"AI-powered request validation and information extraction","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/code_mapper.py","name":"CodeAnalyzer","data":{"name":"CodeAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/code_mapper.py","lineno":92,"bases":[],"methods":[{"name":"__init__","lineno":95,"docstring":null},{"name":"analyze_project","lineno":103,"docstring":"Analyze the entire project"},{"name":"_should_skip_file","lineno":129,"docstring":"Check if file should be skipped"},{"name":"_analyze_file","lineno":146,"docstring":"Analyze a single Python file"}],"docstring":"AST-based code analyzer","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/code_mapper.py","name":"FileAnalyzer","data":{"name":"FileAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/code_mapper.py","lineno":168,"bases":["ast.NodeVisitor"],"methods":[{"name":"__init__","lineno":171,"docstring":null},{"name":"visit_FunctionDef","lineno":180,"docstring":"Visit function definitions"},{"name":"visit_AsyncFunctionDef","lineno":184,"docstring":"Visit async function definitions"},{"name":"_process_function","lineno":188,"docstring":"Process both regular and async function definitions"},{"name":"visit_ClassDef","lineno":236,"docstring":"Visit class definitions"},{"name":"visit_Assign","lineno":276,"docstring":"Visit variable assignments"},{"name":"visit_AnnAssign","lineno":292,"docstring":"Visit annotated assignments"},{"name":"visit_Import","lineno":309,"docstring":"Visit import statements"},{"name":"visit_ImportFrom","lineno":323,"docstring":"Visit from ... import statements"},{"name":"_get_current_scope","lineno":339,"docstring":"Get current scope (module, class, or function)"},{"name":"_get_literal_value","lineno":348,"docstring":"Extract literal value from AST node"}],"docstring":"AST visitor for analyzing a single file","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/dev_agent_validator.py","name":"DevAgentValidator","data":{"name":"DevAgentValidator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/oamat_sd/tools/dev_agent_validator.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"check_before_change","lineno":38,"docstring":"MANDATORY: Check function signature before making changes\n\nThis MUST be called before any function call or modification"},{"name":"search_function","lineno":76,"docstring":"Search for functions in the codebase"},{"name":"search_class","lineno":104,"docstring":"Search for classes in the codebase"},{"name":"validate_import","lineno":135,"docstring":"Validate if a module is imported in the codebase"},{"name":"get_function_signature","lineno":161,"docstring":"Get complete function signature and information"},{"name":"enforce_validation","lineno":191,"docstring":"Enforce validation for any code operation\n\nThis is the main entry point that dev agents MUST call before any code changes"}],"docstring":"Validator to enforce code map checking for dev agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/__init__.py","name":"AgentOutput","data":{"name":"AgentOutput","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/__init__.py","lineno":29,"bases":["BaseModel"],"methods":[],"docstring":"Standardized output format for LangGraph agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/factory.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":null},{"name":"_initialize_model","lineno":179,"docstring":"Initializes the language model for the factory."},{"name":"_load_development_rules","lineno":205,"docstring":"Load development rules from the project to embed in agent prompts."},{"name":"create_researcher_agent","lineno":250,"docstring":"Creates a researcher agent with knowledge and web search tools."},{"name":"create_coder_agent","lineno":272,"docstring":"Creates a coder agent with file system and code generation tools."},{"name":"create_reviewer_agent","lineno":307,"docstring":"Creates a reviewer agent for quality assessment."},{"name":"create_doc_agent","lineno":340,"docstring":"Creates a documentation agent."},{"name":"create_agent_with_tools","lineno":358,"docstring":"Dynamically creates an agent with a set of tools based on a spec.\nThis is the primary method for creating agents in the OAMAT system."},{"name":"create_agent","lineno":391,"docstring":"Creates an agent based on a provided specification.\nThe spec should define the agent's role, capabilities, and tool dependencies."},{"name":"create_dynamic_agent","lineno":418,"docstring":"Creates a dynamic agent based on a provided specification.\nThe spec should define the agent's role, capabilities, and tool dependencies."}],"docstring":"Factory for creating LangGraph agents with standardized tools and configurations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools/research.py","name":"AgentResearchTool","data":{"name":"AgentResearchTool","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools/research.py","lineno":234,"bases":[],"methods":[{"name":"__init__","lineno":239,"docstring":"Initialize the agent research tool"}],"docstring":"Simplified research tool interface for OAMAT agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","name":"LangGraphAgentTools","data":{"name":"LangGraphAgentTools","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","lineno":46,"bases":[],"methods":[{"name":"__init__","lineno":49,"docstring":null},{"name":"create_handoff_tool","lineno":115,"docstring":"Create a handoff tool for agent-to-agent communication"},{"name":"create_file_system_tools","lineno":151,"docstring":"Creates a suite of tools for file system operations."},{"name":"create_knowledge_search_tool","lineno":155,"docstring":"Create a knowledge search tool"},{"name":"create_web_search_tool","lineno":159,"docstring":"Create a web search tool"},{"name":"create_academic_search_tool","lineno":163,"docstring":"Create an academic search tool"},{"name":"create_mcp_research_tools","lineno":167,"docstring":"Create MCP-based research tools"},{"name":"create_code_generation_tool","lineno":171,"docstring":"Create a code generation tool"},{"name":"create_review_tool","lineno":175,"docstring":"Create a code review tool"},{"name":"create_documentation_tool","lineno":179,"docstring":"Create a documentation generation tool"},{"name":"create_completion_tool","lineno":183,"docstring":"Create a task completion tool"},{"name":"create_testing_framework_tools","lineno":187,"docstring":"Create testing framework tools"},{"name":"create_deployment_tools","lineno":191,"docstring":"Create deployment tools"},{"name":"create_automation_tools","lineno":195,"docstring":"Create automation tools"},{"name":"create_quality_assurance_tools","lineno":199,"docstring":"Create quality assurance tools"},{"name":"create_quality_standards_tools","lineno":203,"docstring":"Create quality standards tools"},{"name":"create_security_framework_tools","lineno":207,"docstring":"Create security framework tools"},{"name":"create_state_management_tools","lineno":211,"docstring":"Create state management tools"},{"name":"create_monitoring_tools","lineno":215,"docstring":"Create monitoring tools"},{"name":"create_diagram_generation_tools","lineno":219,"docstring":"Create diagram generation tools"},{"name":"create_rule_access_tools","lineno":223,"docstring":"Creates tools for accessing project rules and standards."},{"name":"create_completion_tool","lineno":227,"docstring":"Creates a tool that signals the completion of a task."},{"name":"create_analysis_tools","lineno":240,"docstring":"Create analysis tools"},{"name":"create_design_tools","lineno":244,"docstring":"Create design tools"},{"name":"create_architecture_tools","lineno":248,"docstring":"Create architecture tools"},{"name":"create_quality_validation_tools","lineno":252,"docstring":"Create quality validation tools"},{"name":"create_planning_frameworks_tools","lineno":257,"docstring":"Create planning frameworks tools"},{"name":"create_database_operations_tools","lineno":263,"docstring":"Create database operations tools"},{"name":"create_web_scraping_tools","lineno":271,"docstring":"Create web scraping tools"}],"docstring":"Collection of tools and utilities for LangGraph agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","name":"ToolsBaseAgent","data":{"name":"ToolsBaseAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","lineno":71,"bases":["LLMBaseAgent"],"methods":[{"name":"build_prompt","lineno":72,"docstring":null},{"name":"parse_output","lineno":75,"docstring":null},{"name":"process_request","lineno":78,"docstring":"Process tool requests using LLM execution\n\nArgs:\n    input_data: Dict with 'task' and 'prompt' keys\n\nReturns:\n    Dict with 'response' key containing the result"}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/llm_base_agent.py","name":"LLMBaseAgent","data":{"name":"LLMBaseAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/llm_base_agent.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initializes the LLMBaseAgent.\nConnects to OpenAI and optionally to Neo4j if credentials are provided."},{"name":"store_knowledge","lineno":97,"docstring":"Stores knowledge content in the Neo4j database as Document and Chunk nodes.\nThis is a real implementation that replaces the mock version."},{"name":"_get_neo4j_client","lineno":144,"docstring":"Provides access to the Neo4j client instance."},{"name":"llm_call","lineno":148,"docstring":"Make an LLM call with structured response format (no fallbacks)\n\nArgs:\n    messages: List of LangChain messages\n    response_format: Pydantic model for structured response\n    **kwargs: Additional parameters\n\nReturns:\n    AI response with structured parsing if response_format provided"},{"name":"generate_workflow","lineno":306,"docstring":"Generate workflow using structured responses\n\nArgs:\n    user_request: The user's request\n    context: Optional context information\n\nReturns:\n    Dict containing workflow and reasoning"},{"name":"execute_task","lineno":352,"docstring":"Execute a specific task\n\nArgs:\n    task: Task description\n    context: Optional context data\n\nReturns:\n    Task execution result"},{"name":"__str__","lineno":390,"docstring":null}],"docstring":"Base agent class with OpenAI LLM integration and structured responses","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/manager/request_analyzer.py","name":"RequestAnalyzer","data":{"name":"RequestAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/manager/request_analyzer.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":null},{"name":"analyze_task_context","lineno":62,"docstring":"Analyze the user request using LLM to determine actual requirements rather than keyword matching.\nThis replaces the hardcoded domain detection with intelligent analysis.\n\nArgs:\n    user_request: The user's request\n    context: Additional context information\n\nReturns:\n    Task context dictionary with intelligent analysis of requirements"},{"name":"analyze_request","lineno":126,"docstring":"Perform sophisticated analysis of user request with comprehensive understanding.\n\nThis method applies deep understanding of OAMAT capabilities to analyze\nuser requests and generate sophisticated insights for workflow planning."},{"name":"analyze_user_request","lineno":241,"docstring":"Analyzes the request to understand requirements rather than just expanding text.\n\n1. Analyzes the request to understand true requirements and scope\n2. Identifies technical architecture decisions needed\n3. Generates strategic clarification questions\n4. Assesses risks and defines success criteria"}],"docstring":"Sophisticated request analysis component that understands user intent,\nscope, and technical requirements.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","name":"TaskComplexity","data":{"name":"TaskComplexity","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","lineno":27,"bases":["str","Enum"],"methods":[],"docstring":"Task complexity classification for intelligent resource allocation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","name":"WorkflowStrategy","data":{"name":"WorkflowStrategy","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","lineno":36,"bases":["str","Enum"],"methods":[],"docstring":"Workflow execution strategies for optimal orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","name":"EnhancedWorkflowNode","data":{"name":"EnhancedWorkflowNode","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","lineno":159,"bases":["BaseModel"],"methods":[],"docstring":"Sophisticated workflow node with comprehensive orchestration capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","name":"EnhancedWorkflowPlan","data":{"name":"EnhancedWorkflowPlan","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/agents/models.py","lineno":223,"bases":["BaseModel"],"methods":[],"docstring":"Comprehensive workflow plan with sophisticated orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/economic_incentive_system.py","name":"IncentiveDomain","data":{"name":"IncentiveDomain","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/economic_incentive_system.py","lineno":20,"bases":["Enum"],"methods":[],"docstring":"Different domains may have different subdivision characteristics","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/file_generation_orchestrator.py","name":"FileDependencyAnalyzer","data":{"name":"FileDependencyAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/file_generation_orchestrator.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":null},{"name":"analyze_dependencies","lineno":109,"docstring":"Analyze file dependencies and create execution batches"},{"name":"_get_pattern_dependencies","lineno":145,"docstring":"Get dependencies based on common patterns"},{"name":"_create_execution_batches","lineno":170,"docstring":"Create execution batches using topological sort"}],"docstring":"Analyzes file dependencies to create optimal parallel execution plan","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/file_generation_orchestrator.py","name":"FileGenerationOrchestrator","data":{"name":"FileGenerationOrchestrator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/file_generation_orchestrator.py","lineno":319,"bases":[],"methods":[{"name":"__init__","lineno":322,"docstring":null},{"name":"_create_file_task_description","lineno":532,"docstring":"Create a detailed task description for file generation"}],"docstring":"Orchestrates parallel file generation within subtasks","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/fractal_integration_example.py","name":"FractalDecisionEngine","data":{"name":"FractalDecisionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/fractal_integration_example.py","lineno":40,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":null},{"name":"make_subdivision_decision","lineno":59,"docstring":"Make comprehensive subdivision decision using both systems.\n\nProcess:\n1. Economic incentive analysis\n2. Context alignment validation\n3. Integration compatibility check\n4. Combined decision with risk assessment"}],"docstring":"Unified decision engine combining economic incentives with context alignment.\n\nMakes intelligent subdivision decisions that balance:\n- Economic efficiency (progressive reward reduction)\n- Context alignment (macro intent preservation)\n- Integration compatibility (component interoperability)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/main.py","name":"OAMATMain","data":{"name":"OAMATMain","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/main.py","lineno":132,"bases":[],"methods":[{"name":"__init__","lineno":135,"docstring":"Initialize OAMAT system with sophisticated orchestration capabilities"},{"name":"_create_neo4j_client","lineno":282,"docstring":"Create Neo4j client with proper error handling"},{"name":"get_role_for_node","lineno":333,"docstring":"Finds the agent role for a given node_id from the workflow plan."},{"name":"_get_agent_context","lineno":358,"docstring":"Get the context for the agent, including previous outputs."},{"name":"_extract_file_generation_history","lineno":391,"docstring":"Extract file generation history from previous agent outputs"},{"name":"_extract_dependency_file_context","lineno":439,"docstring":"Extract file contents from dependency nodes for current agent to reference"},{"name":"_create_project_context","lineno":487,"docstring":"Generates a unique project name and creates its directory, or reuses existing context if available."},{"name":"_run_agent_node","lineno":561,"docstring":"Runs a single agent node in the workflow."},{"name":"_create_agent_executable","lineno":887,"docstring":"Creates a runnable agent executable from the agent factory."},{"name":"_supervisor_node","lineno":909,"docstring":"RULE 955: Command-based supervisor for intelligent routing"},{"name":"_analyze_next_step","lineno":945,"docstring":"RULE 955: Intelligent next step analysis using Command objects"},{"name":"_identify_parallel_candidates","lineno":1148,"docstring":"Identify nodes that can run in parallel (no interdependencies)"},{"name":"_create_parallel_dispatch","lineno":1182,"docstring":"Create Send commands for parallel execution"},{"name":"_get_task_for_role","lineno":1212,"docstring":"Generate task description for agent role"},{"name":"_completion_node","lineno":1223,"docstring":"Final node that processes completion."},{"name":"_setup_logging","lineno":1337,"docstring":"Setup enhanced logging configuration with file outputs"},{"name":"_analyze_workflow_logs","lineno":1349,"docstring":"Analyze logs from the workflow execution for issues"},{"name":"_run_mcp_enabled_agent_node","lineno":1621,"docstring":"Execute an MCP-enabled agent node using AgentFactory with enhanced tools"},{"name":"_get_mcp_tools_for_role","lineno":1837,"docstring":"Get appropriate MCP tools for an agent role (DEPRECATED - use _get_mcp_tool_instances_for_role)"},{"name":"_get_mcp_tool_instances_for_role","lineno":1865,"docstring":"Get actual MCP tool instances for an agent role"},{"name":"_get_project_path","lineno":1924,"docstring":"Get project path from state or global context"},{"name":"_command_router","lineno":2047,"docstring":"RULE 955: Command-based router for modern LangGraph patterns"},{"name":"_run_agent_node_factory","lineno":2067,"docstring":"Returns a function that runs an agent node for a specific role."},{"name":"run_interactive","lineno":2076,"docstring":"Run interactive workflow mode"},{"name":"run_single_request","lineno":2166,"docstring":"Run a single request and exit."}],"docstring":"Main OAMAT application - LangGraph Supervisor-Based Multi-Agent System","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/oamat_logging.py","name":"UserLogger","data":{"name":"UserLogger","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/oamat_logging.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null},{"name":"start_workflow","lineno":61,"docstring":"Initialize workflow tracking and display start banner"},{"name":"start_node_execution","lineno":95,"docstring":"Mark a node as starting execution"},{"name":"log_subdivision_check","lineno":117,"docstring":"Log subdivision decision with reasoning"},{"name":"start_sub_workflow","lineno":147,"docstring":"Start a sub-workflow with visual nesting"},{"name":"complete_node","lineno":179,"docstring":"Mark a node as completed"},{"name":"show_progress_summary","lineno":203,"docstring":"Display current progress summary"},{"name":"start_model_call","lineno":225,"docstring":"Log the start of a model call with user-friendly message"},{"name":"complete_model_call","lineno":232,"docstring":"Log the completion of a model call"},{"name":"complete_workflow","lineno":240,"docstring":"Complete workflow with final banner and summary"},{"name":"_display_workflow_tree","lineno":271,"docstring":"Display the current workflow tree structure"},{"name":"_display_node_recursive","lineno":284,"docstring":"Recursively display a node and its sub-nodes"}],"docstring":"Clean, user-friendly logging interface that shows workflow execution\nas visual tree structures while preserving debug details in files.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/parallel_executor.py","name":"ParallelAgentExecutor","data":{"name":"ParallelAgentExecutor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/parallel_executor.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":null},{"name":"_combine_parallel_results","lineno":102,"docstring":"Combine results from parallel agent execution"}],"docstring":"Executes multiple OAMAT agents in parallel","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/parallel_executor.py","name":"AsyncAgentBridge","data":{"name":"AsyncAgentBridge","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/parallel_executor.py","lineno":135,"bases":[],"methods":[{"name":"__init__","lineno":138,"docstring":null}],"docstring":"Bridge to run synchronous agent methods in async context","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/task_decomposer.py","name":"SubWorkflowOrchestrator","data":{"name":"SubWorkflowOrchestrator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/task_decomposer.py","lineno":894,"bases":[],"methods":[{"name":"__init__","lineno":897,"docstring":null},{"name":"_organize_by_dependencies","lineno":947,"docstring":"Organize subtasks by dependency levels for parallel execution"},{"name":"_prepare_subtask_context","lineno":1089,"docstring":"Prepare context for subtask execution"},{"name":"_get_dependency_context","lineno":1118,"docstring":"Get context from completed dependency subtasks"}],"docstring":"Orchestrates parallel execution of subtasks","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/mcp_tool_registry.py","name":"MCPToolRegistry","data":{"name":"MCPToolRegistry","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/mcp_tool_registry.py","lineno":152,"bases":[],"methods":[{"name":"__init__","lineno":157,"docstring":null},{"name":"_load_config","lineno":212,"docstring":"Load MCP configuration"},{"name":"_initialize_registry","lineno":224,"docstring":"Initialize the tool registry with automatic discovery"},{"name":"_discover_and_register_tools","lineno":269,"docstring":"Automatically discover and register available MCP tools"},{"name":"_register_tool","lineno":402,"docstring":"Register a tool in the registry"},{"name":"_load_tool_chains","lineno":433,"docstring":"Load predefined tool chains from configuration"},{"name":"execute_tool","lineno":484,"docstring":"Synchronous wrapper for executing a tool method."},{"name":"_update_tool_stats","lineno":613,"docstring":"Update tool performance statistics"},{"name":"_infer_method_for_tool","lineno":784,"docstring":"Infer the best method to use for a tool based on available data"},{"name":"get_tool_analytics","lineno":828,"docstring":"Get comprehensive analytics about tool usage and performance"},{"name":"list_available_tools","lineno":886,"docstring":"List all available tools with their metadata"},{"name":"get_tools_by_capability","lineno":901,"docstring":"Get tools that have a specific capability"}],"docstring":"Comprehensive MCP tool registry with automatic discovery and intelligent routing","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/rule_loader.py","name":"RuleLoader","data":{"name":"RuleLoader","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/rule_loader.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":"Initialize RuleLoader with rules directory\n\nArgs:\n    rules_directory: Path to directory containing rule files"},{"name":"_load_all_rules","lineno":48,"docstring":"Load all available rule files from the rules directory"},{"name":"_load_rule_file","lineno":68,"docstring":"Load and parse a single rule file"},{"name":"_extract_categories","lineno":90,"docstring":"Extract rule categories from content"},{"name":"_extract_priority","lineno":119,"docstring":"Extract priority from rule content (1=highest, 10=lowest)"},{"name":"_extract_applicable_agents","lineno":132,"docstring":"Extract which agent roles this rule applies to"},{"name":"get_rules_for_agent","lineno":165,"docstring":"Get applicable rules for a specific agent role\n\nArgs:\n    agent_role: The agent role (e.g., 'coder', 'tester', 'reviewer')\n    categories: Optional list of categories to filter by\n\nReturns:\n    List of applicable rules sorted by priority"},{"name":"format_rules_for_prompt","lineno":198,"docstring":"Format rules for injection into agent prompts\n\nArgs:\n    agent_role: The agent role\n    categories: Optional categories to filter by\n    max_rules: Maximum number of rules to include\n    max_chars: Maximum total characters for all rules\n\nReturns:\n    Formatted rules string for prompt injection"},{"name":"_extract_rule_summary","lineno":250,"docstring":"Extract a summary of key points from rule content"},{"name":"get_rule_categories","lineno":281,"docstring":"Get all available rule categories"},{"name":"get_available_rules","lineno":288,"docstring":"Get list of all available rule names"},{"name":"refresh_rules","lineno":292,"docstring":"Reload all rules from disk"}],"docstring":"Loads and manages development rules for agent prompt injection","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/rules_integration.py","name":"RulesManager","data":{"name":"RulesManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/utils/rules_integration.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":"Initialize rules manager with project root directory"},{"name":"load_rules_for_category","lineno":36,"docstring":"Load all rules for a specific category"},{"name":"load_rule","lineno":50,"docstring":"Load a specific rule by name"},{"name":"get_agent_rules","lineno":71,"docstring":"Get relevant rules for a specific agent role"},{"name":"format_rules_for_prompt","lineno":98,"docstring":"Format rules for inclusion in agent prompts"},{"name":"_extract_rule_summary","lineno":128,"docstring":"Extract key points from rule content for prompt inclusion"},{"name":"inject_rules_into_agent_spec","lineno":174,"docstring":"Inject relevant rules into an agent specification"},{"name":"create_rules_aware_prompt","lineno":215,"docstring":"Create a rules-aware prompt by injecting relevant standards"},{"name":"get_system_prompt","lineno":241,"docstring":"Generate a system prompt for an agent role with relevant rules embedded"},{"name":"get_rules_retriever_tool","lineno":273,"docstring":"Create a tool for retrieving project rules and standards"}],"docstring":"Manages development rules and their integration into agent environments","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/agent_wrapper.py","name":"AgentWrapperFactory","data":{"name":"AgentWrapperFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/agent_wrapper.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":null},{"name":"create_specialized_agent","lineno":29,"docstring":"Creates a specialized agent wrapper function for the given role.\nThis wrapper handles state management and agent execution."},{"name":"create_agent_creators_dict","lineno":218,"docstring":"Create a dictionary of agent creators for all specified roles"}],"docstring":"Factory for creating agent wrappers","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/execution.py","name":"WorkflowExecutor","data":{"name":"WorkflowExecutor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/execution.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize WorkflowExecutor for intelligent workflow execution"},{"name":"_create_unified_project_name","lineno":259,"docstring":"Create a unified project name from user request"}],"docstring":"Executes agentic workflows using LangGraph orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/sdlc_integration.py","name":"SDLCWorkflowIntegrator","data":{"name":"SDLCWorkflowIntegrator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/sdlc_integration.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":null},{"name":"initialize_sdlc_phase","lineno":22,"docstring":"Initialize SDLC phase for workflow"},{"name":"validate_phase_requirements","lineno":51,"docstring":"Validate current workflow against SDLC phase requirements"},{"name":"_check_requirement","lineno":94,"docstring":"Check if a specific phase requirement is met"},{"name":"_check_quality_gate","lineno":117,"docstring":"Check if a quality gate is passed"},{"name":"update_phase_progress","lineno":145,"docstring":"Update SDLC phase progress based on workflow completion"},{"name":"get_next_phase_recommendations","lineno":170,"docstring":"Get recommendations for next SDLC phase based on current workflow"}],"docstring":"Integrates SDLC phase management with workflow orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/state.py","name":"AgenticWorkflowState","data":{"name":"AgenticWorkflowState","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/orchestrator/state.py","lineno":32,"bases":["TypedDict"],"methods":[],"docstring":"State model for agentic workflows","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/parallel_executor.py","name":"ParallelTaskExecutor","data":{"name":"ParallelTaskExecutor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/parallel_executor.py","lineno":311,"bases":[],"methods":[{"name":"__init__","lineno":317,"docstring":null},{"name":"add_task","lineno":350,"docstring":"Add a task to the execution queue"},{"name":"create_task","lineno":362,"docstring":"Convenience method to create and add a task"},{"name":"validate_execution_plan","lineno":389,"docstring":"Validate the execution plan for correctness"},{"name":"_check_resource_conflicts","lineno":411,"docstring":"Check for potential resource conflicts"},{"name":"_generate_execution_report","lineno":643,"docstring":"Generate comprehensive execution report"},{"name":"get_task_status","lineno":697,"docstring":"Get detailed status of a specific task"},{"name":"_calculate_task_progress","lineno":717,"docstring":"Calculate estimated progress for a task"},{"name":"get_execution_visualization","lineno":730,"docstring":"Generate data for visualizing the execution graph"},{"name":"shutdown","lineno":751,"docstring":"Clean shutdown of the executor"}],"docstring":"Advanced parallel task execution engine with dependency management,\nresource coordination, and sophisticated error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/sdlc_phase_manager.py","name":"SDLCPhaseManager","data":{"name":"SDLCPhaseManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/old.ignore.oamat/workflows/sdlc_phase_manager.py","lineno":88,"bases":[],"methods":[{"name":"__init__","lineno":94,"docstring":null},{"name":"detect_workflow_type","lineno":133,"docstring":"Automatically detect workflow type based on user request and context.\n\nArgs:\n    user_request: The user's request text\n    context: Additional context information\n\nReturns:\n    Detected workflow pattern name"},{"name":"list_available_patterns","lineno":165,"docstring":"List all available workflow pattern files"},{"name":"load_workflow_pattern","lineno":177,"docstring":"Load a workflow pattern from configuration file.\n\nArgs:\n    pattern_name: Name of the pattern to load\n\nReturns:\n    Loaded WorkflowPattern or None if not found"},{"name":"initialize_workflow","lineno":256,"docstring":"Initialize workflow based on detected pattern.\n\nArgs:\n    user_request: The user's request\n    context: Additional context\n\nReturns:\n    True if workflow initialized successfully"},{"name":"get_next_phase","lineno":300,"docstring":"Get the next phase that should be executed based on dependencies and current status.\n\nReturns:\n    Phase ID of next phase to execute, or None if workflow is complete"},{"name":"_are_dependencies_satisfied","lineno":323,"docstring":"Check if all dependencies for a phase are satisfied"},{"name":"start_phase","lineno":339,"docstring":"Mark a phase as started and prepare its context.\n\nArgs:\n    phase_id: ID of the phase to start\n\nReturns:\n    True if phase started successfully"},{"name":"_build_phase_context","lineno":381,"docstring":"Build context data for a phase from previous phases"},{"name":"validate_phase","lineno":475,"docstring":"Validate that a phase has been completed successfully.\n\nArgs:\n    phase_id: ID of the phase to validate\n\nReturns:\n    Validation result with status and any errors"},{"name":"get_phase_context","lineno":555,"docstring":"Get context data for a specific phase"},{"name":"find_phase_for_agent","lineno":566,"docstring":"Finds the phase_id for a given agent_role."},{"name":"get_workflow_status","lineno":576,"docstring":"Get overall workflow status"},{"name":"get_enhanced_agent_prompt","lineno":615,"docstring":"Enhance agent prompt with phase context and requirements.\n\nArgs:\n    agent_role: Role of the agent\n    base_prompt: Base prompt for the agent\n    current_phase_id: Current phase being executed\n\nReturns:\n    Enhanced prompt with phase context"},{"name":"save_workflow_state","lineno":681,"docstring":"Save current workflow state to project directory"},{"name":"load_workflow_state","lineno":717,"docstring":"Load workflow state from project directory"}],"docstring":"Manages SDLC workflow patterns with phase enforcement, artifact management,\nand context injection for multi-agent workflows.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/research_team/agents/research_agent.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/research_team/agents/research_agent.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/research_team/agents/synthesis_agent.py","name":"SynthesisAgent","data":{"name":"SynthesisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/research_team/agents/synthesis_agent.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"synthesize","lineno":16,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockOpenAIInterface","data":{"name":"MockOpenAIInterface","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":41,"docstring":null},{"name":"get_model","lineno":44,"docstring":null}],"docstring":"Mock OpenAI interface for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockLangChainModel","data":{"name":"MockLangChainModel","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":51,"bases":[],"methods":[{"name":"__init__","lineno":54,"docstring":null}],"docstring":"Mock LangChain model for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockAgent","data":{"name":"MockAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":252,"bases":[],"methods":[{"name":"__init__","lineno":255,"docstring":null}],"docstring":"Mock agent for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"AgentWrapper","data":{"name":"AgentWrapper","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":265,"bases":[],"methods":[{"name":"__init__","lineno":271,"docstring":null},{"name":"_validate_and_structure_response","lineno":359,"docstring":"Validate response against Pydantic schema and return structured data"},{"name":"_extract_response_text","lineno":392,"docstring":"Extract text response from LangGraph result"},{"name":"_inject_context","lineno":409,"docstring":"Inject stored context into input data"},{"name":"_update_context","lineno":416,"docstring":"Update context store with results"},{"name":"_track_performance","lineno":426,"docstring":"Track performance metrics"},{"name":"_extract_tools_used","lineno":446,"docstring":"Extract tools used during execution"},{"name":"_extract_partial_results","lineno":451,"docstring":"Extract any partial results from failed execution"}],"docstring":"Wrapper for LangGraph agents with OpenAI structured response validation.\nProvides lifecycle management, performance tracking, and response validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":461,"bases":[],"methods":[{"name":"__init__","lineno":467,"docstring":null},{"name":"create_agent","lineno":477,"docstring":"Create OpenAI-powered agent with structured response capabilities.\n\nArgs:\n    spec: Agent specification with role, capabilities, and constraints\n\nReturns:\n    AgentWrapper with structured response validation"},{"name":"_create_openai_model","lineno":534,"docstring":"Create OpenAI model instance using shared interface"},{"name":"_create_structured_prompt","lineno":539,"docstring":"Create role-specific prompts enforcing structured JSON responses"},{"name":"_get_base_tools","lineno":589,"docstring":"Get base tools available to all agents"},{"name":"_get_research_tools","lineno":604,"docstring":"Get research-specific tools"},{"name":"_get_development_tools","lineno":619,"docstring":"Get development-specific tools"},{"name":"_get_testing_tools","lineno":634,"docstring":"Get testing-specific tools"},{"name":"_build_tools_for_role","lineno":682,"docstring":"Build appropriate tools for a specific agent role"},{"name":"get_agent_performance_metrics","lineno":701,"docstring":"Get performance metrics for all created agents"}],"docstring":"OpenAI-exclusive agent factory with structured response enforcement.\nAll agents created using create_react_agent with JSON schema validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","name":"SpecializedAgentFactory","data":{"name":"SpecializedAgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/agent_factory.py","lineno":715,"bases":[],"methods":[{"name":"__init__","lineno":718,"docstring":null},{"name":"create_manager_agent","lineno":721,"docstring":"Create manager agent with O3 model for complex coordination"},{"name":"create_requirements_expander","lineno":739,"docstring":"Create requirements expansion agent using O3 model"},{"name":"create_developer_agent","lineno":758,"docstring":"Create development agent using GPT-4.1"}],"docstring":"Factory for creating specialized agents with pre-configured settings","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","name":"ModelType","data":{"name":"ModelType","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","lineno":14,"bases":["Enum"],"methods":[],"docstring":"OpenAI model types for strategic allocation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","lineno":24,"bases":["Enum"],"methods":[],"docstring":"Agent roles in the Smart Decomposition system","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","name":"ModelConfig","data":{"name":"ModelConfig","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","lineno":40,"bases":[],"methods":[],"docstring":"OpenAI model configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","name":"SystemConfig","data":{"name":"SystemConfig","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/config.py","lineno":111,"bases":[],"methods":[],"docstring":"Main system configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/dependency_manager.py","name":"ContextPropagator","data":{"name":"ContextPropagator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/dependency_manager.py","lineno":408,"bases":[],"methods":[{"name":"__init__","lineno":414,"docstring":null}],"docstring":"Manage context propagation between agents with state contamination prevention.\nImplements isolated context distribution with integrity validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/dependency_manager.py","name":"DependencyManager","data":{"name":"DependencyManager","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/dependency_manager.py","lineno":664,"bases":[],"methods":[{"name":"__init__","lineno":670,"docstring":null}],"docstring":"Main dependency manager orchestrating Neo4j graph, context propagation,\nand blocking strategies for parallel execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/parallel_execution_engine.py","name":"ParallelExecutionEngine","data":{"name":"ParallelExecutionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/parallel_execution_engine.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":59,"docstring":null},{"name":"_get_or_create_agent","lineno":274,"docstring":"Get existing agent or create new one for the role"}],"docstring":"Parallel execution engine for Smart Decomposition agents.\nAchieves 3-5x performance improvements through intelligent coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","name":"RequirementsResponse","data":{"name":"RequirementsResponse","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","lineno":40,"bases":["BaseModel"],"methods":[{"name":"validate_specs","lineno":70,"docstring":null}],"docstring":"Structured response schema for requirements expansion agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","name":"CoordinationResponse","data":{"name":"CoordinationResponse","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","lineno":94,"bases":["BaseModel"],"methods":[],"docstring":"Structured response schema for coordination and planning agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","name":"ImplementationResponse","data":{"name":"ImplementationResponse","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","lineno":131,"bases":["BaseModel"],"methods":[{"name":"validate_code_files","lineno":154,"docstring":null}],"docstring":"Structured response schema for implementation agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","name":"ValidationResponse","data":{"name":"ValidationResponse","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/schemas.py","lineno":160,"bases":["BaseModel"],"methods":[],"docstring":"Structured response schema for validation agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/system_controller.py","name":"SystemController","data":{"name":"SystemController","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/smart_decomposition_poc/core/system_controller.py","lineno":45,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":null},{"name":"_extract_requirements_from_results","lineno":361,"docstring":"Extract requirements response from task results"},{"name":"_extract_work_plan_from_results","lineno":374,"docstring":"Extract work plan from task results"},{"name":"_extract_implementation_from_results","lineno":387,"docstring":"Extract implementation from task results"},{"name":"_extract_validation_from_results","lineno":400,"docstring":"Extract validation from task results"},{"name":"_package_application_from_results","lineno":413,"docstring":"Package complete application from all task results"},{"name":"_package_application","lineno":540,"docstring":"Legacy sequential application packaging"},{"name":"_create_error_metrics","lineno":570,"docstring":"Create error metrics for failed workflows"},{"name":"get_workflow_history","lineno":581,"docstring":"Get history of all workflow executions"},{"name":"get_performance_summary","lineno":585,"docstring":"Get performance summary across all workflows"}],"docstring":"Main system controller for the Smart Decomposition Meta-Intelligence System.\nOrchestrates autonomous application generation with parallel execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/agentic_review_schema.py","name":"AgenticAnnotation","data":{"name":"AgenticAnnotation","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/agentic_review_schema.py","lineno":15,"bases":[],"methods":[{"name":"to_dict","lineno":30,"docstring":null},{"name":"create","lineno":37,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/ai_self_assessment.py","name":"AISelfAssessment","data":{"name":"AISelfAssessment","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/ai_self_assessment.py","lineno":9,"bases":[],"methods":[{"name":"__init__","lineno":12,"docstring":null},{"name":"run_full_assessment","lineno":16,"docstring":"Run complete self-assessment battery"},{"name":"_test_logical_reasoning","lineno":49,"docstring":"Test basic logical reasoning ability"},{"name":"_test_working_memory","lineno":64,"docstring":"Test ability to maintain context"},{"name":"_test_instruction_following","lineno":78,"docstring":"Test ability to follow precise instructions"},{"name":"_test_context_awareness","lineno":97,"docstring":"Test awareness of current context"},{"name":"_test_error_detection","lineno":116,"docstring":"Test ability to detect obvious errors"},{"name":"_test_tool_competency","lineno":132,"docstring":"Test basic tool usage understanding"},{"name":"generate_assessment_report","lineno":147,"docstring":"Generate human-readable assessment report"}],"docstring":"Self-diagnostic test for AI instance quality","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/context_compression_engine.py","name":"ContextPackage","data":{"name":"ContextPackage","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/context_compression_engine.py","lineno":37,"bases":[],"methods":[],"docstring":"Compressed knowledge package for AI context restoration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/context_compression_engine.py","name":"ContextCompressionEngine","data":{"name":"ContextCompressionEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/context_compression_engine.py","lineno":55,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":null},{"name":"analyze_conversation_for_compression","lineno":68,"docstring":"Analyze conversation to identify what can be compressed vs what must be preserved"},{"name":"compress_conversation","lineno":101,"docstring":"Compress conversation to essential insights with target compression ratio"},{"name":"_group_similar_content","lineno":170,"docstring":"Group similar conversation components for redundancy analysis"},{"name":"_analyze_redundancy","lineno":200,"docstring":"Analyze redundancy within similar content items"},{"name":"_assess_criticality","lineno":228,"docstring":"Assess how critical a conversation component is for context restoration"},{"name":"_extract_insights_by_criticality","lineno":277,"docstring":"Extract insights of specific criticality level"},{"name":"_extract_shared_understanding","lineno":299,"docstring":"Extract concepts and understanding both parties shared"},{"name":"_extract_key_decisions","lineno":327,"docstring":"Extract key decisions made during conversation"},{"name":"_determine_project_state","lineno":356,"docstring":"Determine current state of the project/work"},{"name":"_identify_next_steps","lineno":382,"docstring":"Identify what should happen next"},{"name":"_generate_restoration_instructions","lineno":404,"docstring":"Generate instructions for how to use this context package"},{"name":"_compress_content","lineno":438,"docstring":"Compress content while preserving meaning"},{"name":"_needs_context","lineno":445,"docstring":"Determine if this component needs surrounding context"},{"name":"_estimate_tokens_saved","lineno":450,"docstring":"Estimate tokens saved by compressing this component"},{"name":"_estimate_tokens","lineno":458,"docstring":"Rough token estimation"},{"name":"_estimate_insight_tokens","lineno":469,"docstring":"Estimate tokens for compressed insights"},{"name":"_extract_concept_from_agreement","lineno":473,"docstring":"Extract the concept being agreed upon"},{"name":"_extract_decision_content","lineno":483,"docstring":"Extract the actual decision from content"},{"name":"_extract_rationale","lineno":488,"docstring":"Extract reasoning behind decision"},{"name":"_extract_completed_task","lineno":496,"docstring":"Extract completed task from content"},{"name":"_extract_current_focus","lineno":505,"docstring":"Extract current focus from content"},{"name":"_extract_next_step","lineno":518,"docstring":"Extract next step from content"},{"name":"save_context_package","lineno":531,"docstring":"Save compressed context package to file"},{"name":"load_context_package","lineno":541,"docstring":"Load compressed context package from file"}],"docstring":"Intelligent compression of conversations for AI context persistence","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/conversation_analyzer.py","name":"ConversationAnalyzer","data":{"name":"ConversationAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/conversation_analyzer.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":16,"docstring":null},{"name":"analyze_conversation_flow","lineno":19,"docstring":"Analyze flow patterns within a single conversation"},{"name":"analyze_cross_conversation_patterns","lineno":34,"docstring":"Analyze patterns across multiple conversations"},{"name":"find_breakthrough_moments","lineno":57,"docstring":"Identify breakthrough insights and key realizations"},{"name":"analyze_ai_performance_patterns","lineno":91,"docstring":"Analyze AI performance patterns across conversations"},{"name":"_analyze_speaker_distribution","lineno":106,"docstring":"Analyze distribution of speakers in conversation"},{"name":"_analyze_component_types","lineno":117,"docstring":"Analyze types of conversation components"},{"name":"_analyze_conversation_arc","lineno":133,"docstring":"Analyze the arc/progression of conversation"},{"name":"_analyze_response_patterns","lineno":157,"docstring":"Analyze patterns in responses between speakers"},{"name":"_analyze_complexity_progression","lineno":181,"docstring":"Analyze how complexity changes throughout conversation"},{"name":"_analyze_tool_usage","lineno":213,"docstring":"Analyze tool usage patterns"},{"name":"_find_recurring_patterns","lineno":231,"docstring":"Find patterns that recur across conversations"},{"name":"_analyze_frustration_triggers","lineno":261,"docstring":"Analyze what triggers user frustration"},{"name":"_analyze_learning_progression","lineno":295,"docstring":"Analyze learning progression across sessions"},{"name":"_calculate_trend","lineno":341,"docstring":"Calculate if trend is improving, declining, or stable"},{"name":"_classify_breakthrough","lineno":366,"docstring":"Classify type of breakthrough"},{"name":"_score_breakthrough_impact","lineno":377,"docstring":"Score the impact of a breakthrough based on subsequent conversation"},{"name":"_analyze_phase_sentiment","lineno":414,"docstring":"Analyze sentiment of conversation phase"},{"name":"_analyze_phase_complexity","lineno":437,"docstring":"Analyze complexity level of conversation phase"},{"name":"_find_response_chains","lineno":450,"docstring":"Find common response chain patterns"},{"name":"_analyze_topic_evolution","lineno":456,"docstring":"Analyze how topics evolve across conversations"},{"name":"_analyze_efficiency_trends","lineno":461,"docstring":"Analyze efficiency trends across sessions"},{"name":"_analyze_response_quality","lineno":468,"docstring":"Analyze quality of AI responses"},{"name":"_analyze_error_patterns","lineno":473,"docstring":"Analyze AI error patterns"},{"name":"_analyze_improvement_trends","lineno":478,"docstring":"Analyze AI improvement trends"},{"name":"_analyze_consistency","lineno":483,"docstring":"Analyze AI consistency metrics"},{"name":"_analyze_capability_growth","lineno":488,"docstring":"Analyze AI capability growth"}],"docstring":"Analyze atomic conversation components for insights","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/meta_thinking_engine.py","name":"MetaThinkingEngine","data":{"name":"MetaThinkingEngine","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/meta_thinking_engine.py","lineno":49,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":null},{"name":"get_insights_by_category","lineno":306,"docstring":"Get all insights of a specific category"},{"name":"get_recent_insights","lineno":310,"docstring":"Get insights from the last N hours"}],"docstring":"Engine for continuous thinking, reflection, and insight capture.\nDesigned to overcome AI task-focus limitation through structured meta-cognition.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/predictive_intelligence_engine.py","name":"CapabilityGapAnalyzer","data":{"name":"CapabilityGapAnalyzer","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/predictive_intelligence_engine.py","lineno":453,"bases":[],"methods":[{"name":"identify_gaps","lineno":456,"docstring":"Simplified gap identification"}],"docstring":"Analyzes gaps in current capabilities","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/session_consolidator.py","name":"SessionConsolidator","data":{"name":"SessionConsolidator","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/analytics/session_consolidator.py","lineno":10,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"consolidate_sessions","lineno":16,"docstring":"Merge multiple session logs into master context"},{"name":"_detect_frustration_patterns","lineno":53,"docstring":"Find user frustration indicators"},{"name":"_analyze_ai_performance","lineno":84,"docstring":"Analyze AI performance in this session"},{"name":"_load_session","lineno":99,"docstring":"Load session data from file"},{"name":"_extract_preceding_context","lineno":107,"docstring":"Get context leading up to frustration"},{"name":"_assess_startup_performance","lineno":120,"docstring":"Rate startup sequence performance 0-1"},{"name":"_assess_task_completion","lineno":144,"docstring":"Rate task completion quality 0-1"},{"name":"_calculate_error_rate","lineno":171,"docstring":"Calculate error rate for session"},{"name":"_analyze_frustration_trends","lineno":189,"docstring":"Analyze patterns in user frustration"},{"name":"_analyze_performance_variance","lineno":215,"docstring":"Analyze variance in AI performance across sessions"}],"docstring":"Consolidate multiple AI sessions into unified understanding","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/conceptual_analysis_agent.py","name":"ConceptualAnalysisAgent","data":{"name":"ConceptualAnalysisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/conceptual_analysis_agent.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"monitor_logs","lineno":43,"docstring":"Continuously monitor for new/changed cleaned logs and process them in parallel batches."},{"name":"process_log","lineno":68,"docstring":null},{"name":"_get_log_text","lineno":113,"docstring":null},{"name":"_extract_decisions","lineno":121,"docstring":null},{"name":"_extract_qa","lineno":137,"docstring":null},{"name":"_extract_blockers","lineno":165,"docstring":null},{"name":"_extract_named_entities","lineno":181,"docstring":null},{"name":"_extract_pivots","lineno":219,"docstring":null},{"name":"_insight_to_conceptual_node","lineno":235,"docstring":null},{"name":"_theme_to_conceptual_node","lineno":248,"docstring":null},{"name":"_link_concept_to_atomic","lineno":257,"docstring":null},{"name":"_store_conceptual_nodes","lineno":268,"docstring":null},{"name":"_store_conceptual_edges","lineno":284,"docstring":null},{"name":"_log_evidence","lineno":300,"docstring":null},{"name":"self_improve","lineno":313,"docstring":null},{"name":"_update_documentation_and_diagrams","lineno":327,"docstring":null},{"name":"_link_qa_pairs","lineno":338,"docstring":null},{"name":"_link_decisions_to_blockers","lineno":354,"docstring":null},{"name":"_link_pivots_to_entities","lineno":374,"docstring":null},{"name":"_contextual_linking","lineno":394,"docstring":null},{"name":"_automated_test_and_validation","lineno":416,"docstring":null},{"name":"_collab_tools_review","lineno":429,"docstring":null}],"docstring":"Autonomous agent for conceptual analysis and data entry.\nExtracts high-level concepts, decisions, themes, Q&A, blockers, pivots, and relationships from cleaned logs,\nlinks them to atomic components, and stores them in ArangoDB.\nOperates in batch/parallel mode for efficiency and self-improves after each run.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/conceptual_synthesis_agent.py","name":"ConceptualSynthesisAgent","data":{"name":"ConceptualSynthesisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/conceptual_synthesis_agent.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":46,"docstring":null},{"name":"monitor_atomic_data","lineno":58,"docstring":"Continuously monitor for new/changed atomic data and process in parallel batches."},{"name":"process_atomic_file","lineno":84,"docstring":"Process a single atomic file: synthesize conceptual knowledge and persist results."},{"name":"_load_atomic_data","lineno":99,"docstring":null},{"name":"synthesize_conceptual_knowledge","lineno":109,"docstring":"Aggregate, cluster, and interpret atomic data to form conceptual nodes/edges.\nImplements advanced synthesis logic for decisions, blockers, Q&A, themes, pivots, and advanced relationships.\nReturns conceptual_nodes, conceptual_edges."},{"name":"_parse_time","lineno":445,"docstring":null},{"name":"validate_and_log_evidence","lineno":453,"docstring":"Validate conceptual structures and log evidence for traceability."},{"name":"persist_conceptual_knowledge","lineno":474,"docstring":"Persist conceptual nodes/edges in ArangoDB, always linking to atomic evidence."},{"name":"post_batch_actions","lineno":487,"docstring":"Trigger review, documentation/diagram updates, and self-improvement after each batch."},{"name":"trigger_distributed_review","lineno":493,"docstring":null},{"name":"trigger_documentation_and_diagram_updates","lineno":505,"docstring":null},{"name":"reflect_and_log_self_improvement","lineno":517,"docstring":null},{"name":"submit_for_review","lineno":529,"docstring":"Submit conceptual nodes/edges for distributed review via collab agents.\nReturns a list of review tasks/IDs."},{"name":"collect_feedback_and_update","lineno":548,"docstring":"Collect feedback, votes, or comments from reviewers and update conceptual node/edge status.\nPersist all review actions, feedback, and consensus decisions in the knowledgebase."},{"name":"escalate_contentious","lineno":570,"docstring":"Flag unresolved or contentious concepts for further review or escalation."},{"name":"generate_mermaid_diagram","lineno":586,"docstring":"Generate a Mermaid diagram from conceptual nodes and edges and save to output_path."},{"name":"generate_documentation","lineno":609,"docstring":"Generate markdown documentation summarizing concepts, relationships, and evidence."},{"name":"trigger_continuous_update","lineno":634,"docstring":"Trigger regeneration of diagrams/docs after every batch or significant change."},{"name":"meta_analyze_and_improve","lineno":643,"docstring":"After each batch, analyze what worked, what failed, and what was ambiguous.\nUse meta_thinking_engine or LLMs to suggest improvements (stub for now).\nUpdate extraction and relationship patterns based on new evidence, feedback, and review outcomes.\nAutomatically generate or refine guardrails based on recurring issues or failures.\nPersist all guardrails and improvements as knowledgebase nodes.\nLog all self-improvement actions, pattern changes, and guardrail updates."},{"name":"run_autonomous_cycle","lineno":674,"docstring":"Orchestrate the full conceptual synthesis cycle:\n1. Advanced relationship extraction & contextual linking\n2. Distributed review, feedback, and consensus integration\n3. Automated documentation & diagram generation\n4. Continuous self-improvement, learning, and guardrail evolution\nOperates autonomously and continuously."}],"docstring":"Agent that transforms atomic parser outputs (nodes/edges) into high-level conceptual knowledge.\nSynthesizes insights, themes, decisions, blockers, Q&A, pivots, etc., and persists them in the knowledgebase.\nLinks all conceptual nodes/edges to atomic evidence for traceability.\nAutomates validation, review, documentation, and self-improvement after each batch.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/intelligence_agent.py","name":"IntelligenceAgent","data":{"name":"IntelligenceAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/intelligence_agent.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"extract_insights","lineno":23,"docstring":"Extract intelligence insights from cleaned log lines and/or atomic components.\nReturns a list of dicts matching the minimal intelligence schema."},{"name":"_find_related_components","lineno":105,"docstring":"Prototype: Link insight to atomic component IDs based on line number proximity.\nTODO: Improve with richer mapping logic."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/legacy/file_monitor.py","name":"RealTimeFileMonitor","data":{"name":"RealTimeFileMonitor","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/legacy/file_monitor.py","lineno":138,"bases":[],"methods":[{"name":"__init__","lineno":141,"docstring":null},{"name":"get_stats","lineno":236,"docstring":"Get monitoring statistics"}],"docstring":"Main file monitoring coordinator","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/meta_conceptual_synthesis_agent.py","name":"MetaConceptualSynthesisAgent","data":{"name":"MetaConceptualSynthesisAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/meta_conceptual_synthesis_agent.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"run","lineno":34,"docstring":null},{"name":"load_session","lineno":94,"docstring":null},{"name":"synthesize_conceptual_knowledge","lineno":109,"docstring":null},{"name":"persist_conceptual_knowledge","lineno":151,"docstring":null},{"name":"self_improve","lineno":179,"docstring":null},{"name":"maintenance","lineno":183,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/pipeline.py","name":"SpecStoryIntelligencePipeline","data":{"name":"SpecStoryIntelligencePipeline","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/pipeline.py","lineno":79,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":null},{"name":"_default_config","lineno":114,"docstring":"Default pipeline configuration"},{"name":"_setup_logging","lineno":136,"docstring":"Configure structured logging for pipeline"},{"name":"_setup_signal_handlers","lineno":148,"docstring":"Setup graceful shutdown handlers"},{"name":"_initialize_advanced_analytics","lineno":160,"docstring":"Initialize advanced analytics engines"},{"name":"get_status","lineno":539,"docstring":"Get current pipeline status"}],"docstring":"Main pipeline coordinator for real-time SpecStory intelligence","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/review_connect_agent.py","name":"ReviewConnectAgent","data":{"name":"ReviewConnectAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/specstory_intelligence/review_connect_agent.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":30,"docstring":null},{"name":"run","lineno":38,"docstring":null},{"name":"detect_and_link_qa_pairs","lineno":46,"docstring":"Detect Q&A pairs and create 'answers' edges."},{"name":"detect_and_link_decision_chains","lineno":104,"docstring":"Detect decision chains and create 'decision_about'/'affects' edges."},{"name":"detect_and_link_themes","lineno":109,"docstring":"Detect recurring themes/entities and create 'relates_to' edges."},{"name":"detect_and_link_orphans","lineno":114,"docstring":"Detect orphaned nodes and link to context (e.g., session/file)."},{"name":"upsert_edge","lineno":119,"docstring":"Upsert an edge with provenance and idempotency check."},{"name":"log_provenance","lineno":148,"docstring":"Log provenance for new connections."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/base.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/base.py","lineno":8,"bases":["ABC"],"methods":[{"name":"act","lineno":12,"docstring":"Perform the agent's primary action."},{"name":"observe","lineno":17,"docstring":"Receive observations or inputs from the environment/system."}],"docstring":"Abstract base class for all agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/capability_discovery.py","name":"CapabilityDiscoveryAgent","data":{"name":"CapabilityDiscoveryAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/capability_discovery.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for capability discovery agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/coach.py","name":"CoachAgent","data":{"name":"CoachAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/coach.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for coach/mentor agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/collaboration.py","name":"CollaborationAgent","data":{"name":"CollaborationAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/collaboration.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for collaboration agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/data_steward.py","name":"DataStewardAgent","data":{"name":"DataStewardAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/data_steward.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for data steward agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/explainability.py","name":"ExplainabilityAgent","data":{"name":"ExplainabilityAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/explainability.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/factory.py","lineno":6,"bases":[],"methods":[{"name":"create","lineno":9,"docstring":null}],"docstring":"Placeholder for agent factory logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/generalist.py","name":"GeneralistAgent","data":{"name":"GeneralistAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/generalist.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for generalist agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/human_override.py","name":"HumanOverrideAgent","data":{"name":"HumanOverrideAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/human_override.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for human-in-the-loop override logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/interfaces.py","name":"AgentProtocol","data":{"name":"AgentProtocol","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/interfaces.py","lineno":8,"bases":["Protocol"],"methods":[{"name":"act","lineno":9,"docstring":null},{"name":"observe","lineno":12,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/marketplace.py","name":"MarketplaceAgent","data":{"name":"MarketplaceAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/marketplace.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for marketplace/resource bidding agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/multi_tenancy.py","name":"MultiTenancyAgent","data":{"name":"MultiTenancyAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/multi_tenancy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for multi-tenancy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/policy.py","name":"PolicyAgent","data":{"name":"PolicyAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/policy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for policy/compliance agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/redundancy.py","name":"RedundancyAgent","data":{"name":"RedundancyAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/redundancy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for redundancy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/reflexion.py","name":"ReflexionAgent","data":{"name":"ReflexionAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/reflexion.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for reflexion/meta agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/registry.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":9,"docstring":null},{"name":"register","lineno":12,"docstring":null},{"name":"get","lineno":15,"docstring":null}],"docstring":"Placeholder for agent registry logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/scaling.py","name":"ScalingAgent","data":{"name":"ScalingAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/scaling.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for scaling agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/security.py","name":"SecurityAgent","data":{"name":"SecurityAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/security.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for security agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/self_improvement.py","name":"SelfImprovementAgent","data":{"name":"SelfImprovementAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/self_improvement.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for self-improvement agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/specialist.py","name":"SpecialistAgent","data":{"name":"SpecialistAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/specialist.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for specialist agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/synthesizer.py","name":"SynthesizerAgent","data":{"name":"SynthesizerAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/synthesizer.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for synthesizer agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/user_proxy.py","name":"UserProxyAgent","data":{"name":"UserProxyAgent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/agents/user_proxy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for user proxy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/interface/feedback_ui.py","name":"FeedbackUI","data":{"name":"FeedbackUI","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/interface/feedback_ui.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for feedback and explainability UI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/base.py","name":"BaseOrchestrationComponent","data":{"name":"BaseOrchestrationComponent","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/base.py","lineno":8,"bases":["ABC"],"methods":[{"name":"start","lineno":12,"docstring":null},{"name":"stop","lineno":16,"docstring":null}],"docstring":"Abstract base class for orchestration components.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/explainability_ai.py","name":"ExplainabilityAI","data":{"name":"ExplainabilityAI","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/explainability_ai.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability AI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/guardrails.py","name":"Guardrails","data":{"name":"Guardrails","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/guardrails.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for guardrails logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/policy_ai.py","name":"PolicyAI","data":{"name":"PolicyAI","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/orchestration/policy_ai.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for policy AI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/tooling/explainability_tools.py","name":"ExplainabilityTools","data":{"name":"ExplainabilityTools","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/ultimate_agents/tooling/explainability_tools.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability tools logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/workflow_mcp/agent_runner.py","name":"EmbeddedAgentRunner","data":{"name":"EmbeddedAgentRunner","file_path":"libs/opsvi-ecosystem/opsvi_ecosystem/applications/workflow_mcp/agent_runner.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null},{"name":"run_workflow","lineno":45,"docstring":null},{"name":"_build_prompt","lineno":124,"docstring":null}],"docstring":"Embedded agent execution logic for workflows.\n- Uses OpenAIResponsesInterface (shared) for all OpenAI API access (per 953-openai-api-standards).\n- If unavailable, simulates execution by echoing input and workflow spec.\n- Set OPENAI_MODEL env var to select model (default: gpt-4.1).","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-fs/opsvi_fs/exceptions/base.py","name":"LibraryConfigurationError","data":{"name":"LibraryConfigurationError","file_path":"libs/opsvi-fs/opsvi_fs/exceptions/base.py","lineno":10,"bases":["LibraryError"],"methods":[],"docstring":"Raised for invalid or missing configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-fs/opsvi_fs/exceptions/base.py","name":"ProviderError","data":{"name":"ProviderError","file_path":"libs/opsvi-fs/opsvi_fs/exceptions/base.py","lineno":14,"bases":["LibraryError"],"methods":[],"docstring":"Raised for provider-specific failures.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-fs/opsvi_fs/schemas/models.py","name":"FileLocation","data":{"name":"FileLocation","file_path":"libs/opsvi-fs/opsvi_fs/schemas/models.py","lineno":9,"bases":[],"methods":[],"docstring":"Provider-agnostic locator.\n\npath: full path or key; bucket/container optional for cloud providers","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_agents_interface.py","name":"OpenAIAgentsInterface","data":{"name":"OpenAIAgentsInterface","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_agents_interface.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"create_agent","lineno":43,"docstring":"Create an Agent with tools, handoffs, guardrails, output type, and model."},{"name":"register_tool","lineno":70,"docstring":"Decorate a function as an agent tool."},{"name":"create_file_search_tool","lineno":74,"docstring":null},{"name":"create_web_search_tool","lineno":81,"docstring":null},{"name":"run_agent_sync","lineno":85,"docstring":"Run an agent synchronously."},{"name":"as_tool","lineno":129,"docstring":"Expose an agent as a tool for orchestration."},{"name":"create_context","lineno":144,"docstring":"Create a context object for agent runs."},{"name":"log_call","lineno":149,"docstring":null},{"name":"enable_verbose_logging","lineno":165,"docstring":null},{"name":"enable_tracing","lineno":169,"docstring":null},{"name":"set_timeout","lineno":174,"docstring":null},{"name":"set_max_turns","lineno":177,"docstring":null},{"name":"set_debug","lineno":180,"docstring":null}],"docstring":"Modernized shared interface for OpenAI Agents/Assistants v2 API (python SDK).\n- Full agent, tool, thread, message, vector store, and orchestration support\n- Async, streaming, batch, error handling, logging, tracing, context, config\n- Advanced usage and extensibility patterns","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_batch_interface.py","name":"OpenAIBatchError","data":{"name":"OpenAIBatchError","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_batch_interface.py","lineno":29,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Batch API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_batch_interface.py","name":"OpenAIBatchInterface","data":{"name":"OpenAIBatchInterface","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_batch_interface.py","lineno":35,"bases":[],"methods":[{"name":"__init__","lineno":43,"docstring":"Initialize the batch interface.\n\nArgs:\n    api_key: OpenAI API key (defaults to OPENAI_API_KEY env var)\n    organization: OpenAI organization ID (defaults to OPENAI_ORG_ID env var)"},{"name":"create_batch","lineno":62,"docstring":"Create a new batch.\n\nArgs:\n    **kwargs: Batch creation parameters (input_file_id, endpoint, completion_window)\n\nReturns:\n    Dictionary containing the batch response\n\nRaises:\n    OpenAIBatchError: If the API call fails"},{"name":"retrieve_batch","lineno":88,"docstring":"Retrieve a batch by ID.\n\nArgs:\n    batch_id: The batch ID to retrieve\n\nReturns:\n    Dictionary containing the batch details\n\nRaises:\n    OpenAIBatchError: If the API call fails"},{"name":"list_batches","lineno":114,"docstring":"List all batches.\n\nArgs:\n    limit: Maximum number of batches to return\n\nReturns:\n    List of batch dictionaries\n\nRaises:\n    OpenAIBatchError: If the API call fails"},{"name":"cancel_batch","lineno":148,"docstring":"Cancel a batch.\n\nArgs:\n    batch_id: The batch ID to cancel\n\nReturns:\n    Dictionary containing the cancellation response\n\nRaises:\n    OpenAIBatchError: If the API call fails"},{"name":"get_batch_status","lineno":302,"docstring":"Get the status of a batch.\n\nArgs:\n    batch_id: The batch ID\n\nReturns:\n    Batch status string"},{"name":"is_batch_completed","lineno":318,"docstring":"Check if a batch is completed.\n\nArgs:\n    batch_id: The batch ID\n\nReturns:\n    True if completed, False otherwise"},{"name":"is_batch_failed","lineno":331,"docstring":"Check if a batch failed.\n\nArgs:\n    batch_id: The batch ID\n\nReturns:\n    True if failed, False otherwise"},{"name":"get_batches_by_status","lineno":344,"docstring":"Get batches by status.\n\nArgs:\n    status: The status to filter by\n\nReturns:\n    List of batches with the specified status"},{"name":"get_active_batches","lineno":368,"docstring":"Get all active (non-completed) batches.\n\nReturns:\n    List of active batches"},{"name":"get_batch_summary","lineno":390,"docstring":"Get a summary of all batches by status.\n\nReturns:\n    Dictionary with batch counts by status"},{"name":"validate_batch_params","lineno":417,"docstring":"Validate batch creation parameters.\n\nArgs:\n    **kwargs: Batch parameters to validate\n\nReturns:\n    True if valid, False otherwise"}],"docstring":"Comprehensive interface for OpenAI Batch API.\n\nProvides both synchronous and asynchronous methods for all batch endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_embeddings_interface.py","name":"OpenAIEmbeddingsError","data":{"name":"OpenAIEmbeddingsError","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_embeddings_interface.py","lineno":30,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Embeddings API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_embeddings_interface.py","name":"OpenAIEmbeddingsInterface","data":{"name":"OpenAIEmbeddingsInterface","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_embeddings_interface.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":44,"docstring":"Initialize the embeddings interface.\n\nArgs:\n    api_key: OpenAI API key (defaults to OPENAI_API_KEY env var)\n    organization: OpenAI organization ID (defaults to OPENAI_ORG_ID env var)"},{"name":"create_embedding","lineno":65,"docstring":"Generate embedding vector(s) for the input text.\n\nArgs:\n    input_text: Text or list of texts to embed\n    model: Embedding model to use\n    **kwargs: Additional parameters for the API call\n\nReturns:\n    Dictionary containing the embedding response\n\nRaises:\n    OpenAIEmbeddingsError: If the API call fails"},{"name":"create_batch_embeddings","lineno":139,"docstring":"Create embeddings for a batch of texts with automatic chunking.\n\nArgs:\n    texts: List of texts to embed\n    model: Embedding model to use\n    batch_size: Maximum texts per API call\n    **kwargs: Additional parameters for the API call\n\nReturns:\n    List of embedding responses"},{"name":"extract_embeddings","lineno":205,"docstring":"Extract embedding vectors from the API response.\n\nArgs:\n    response: Response from create_embedding\n\nReturns:\n    List of embedding vectors"},{"name":"get_embedding_dimension","lineno":221,"docstring":"Get the dimension of embeddings for a specific model.\n\nArgs:\n    model: Embedding model name\n\nReturns:\n    Embedding dimension"},{"name":"validate_input","lineno":240,"docstring":"Validate input text for embedding creation.\n\nArgs:\n    input_text: Text or list of texts to validate\n\nReturns:\n    True if valid, False otherwise"},{"name":"get_usage_stats","lineno":257,"docstring":"Extract usage statistics from the API response.\n\nArgs:\n    response: Response from create_embedding\n\nReturns:\n    Dictionary with usage statistics"}],"docstring":"Comprehensive interface for OpenAI Embeddings API.\n\nProvides both synchronous and asynchronous methods for all embeddings endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_models_interface.py","name":"OpenAIModelsError","data":{"name":"OpenAIModelsError","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_models_interface.py","lineno":30,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Models API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_models_interface.py","name":"OpenAIModelsInterface","data":{"name":"OpenAIModelsInterface","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_models_interface.py","lineno":51,"bases":[],"methods":[{"name":"__init__","lineno":59,"docstring":"Initialize the models interface.\n\nArgs:\n    api_key: OpenAI API key (defaults to OPENAI_API_KEY env var)\n    organization: OpenAI organization ID (defaults to OPENAI_ORG_ID env var)"},{"name":"list_models","lineno":78,"docstring":"List all available models.\n\nReturns:\n    List of ModelInfo objects\n\nRaises:\n    OpenAIModelsError: If the API call fails"},{"name":"retrieve_model","lineno":112,"docstring":"Retrieve a specific model by ID.\n\nArgs:\n    model_id: The model ID to retrieve\n\nReturns:\n    ModelInfo object for the specified model\n\nRaises:\n    OpenAIModelsError: If the API call fails"},{"name":"get_chat_models","lineno":218,"docstring":"Get only chat completion models.\n\nReturns:\n    List of chat model ModelInfo objects"},{"name":"get_embedding_models","lineno":239,"docstring":"Get only embedding models.\n\nReturns:\n    List of embedding model ModelInfo objects"},{"name":"get_models_by_owner","lineno":260,"docstring":"Get models by owner.\n\nArgs:\n    owner: The owner to filter by\n\nReturns:\n    List of ModelInfo objects owned by the specified owner"},{"name":"get_model_names","lineno":284,"docstring":"Get list of model names/IDs.\n\nReturns:\n    List of model IDs"},{"name":"model_exists","lineno":299,"docstring":"Check if a model exists.\n\nArgs:\n    model_id: The model ID to check\n\nReturns:\n    True if the model exists, False otherwise"},{"name":"_is_chat_model","lineno":315,"docstring":"Check if a model is a chat completion model.\n\nArgs:\n    model_id: The model ID to check\n\nReturns:\n    True if it's a chat model, False otherwise"},{"name":"_is_embedding_model","lineno":341,"docstring":"Check if a model is an embedding model.\n\nArgs:\n    model_id: The model ID to check\n\nReturns:\n    True if it's an embedding model, False otherwise"},{"name":"get_model_context_length","lineno":360,"docstring":"Get the context length for a specific model.\n\nArgs:\n    model_id: The model ID\n\nReturns:\n    Context length if available, None otherwise"},{"name":"get_available_models_summary","lineno":376,"docstring":"Get a summary of available models by category.\n\nReturns:\n    Dictionary with model categories and counts"}],"docstring":"Comprehensive interface for OpenAI Models API.\n\nProvides both synchronous and asynchronous methods for all models endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_provider.py","name":"OpenAIConfig","data":{"name":"OpenAIConfig","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_provider.py","lineno":28,"bases":["LLMConfig"],"methods":[],"docstring":"Configuration for OpenAI provider.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_provider.py","name":"OpenAIProvider","data":{"name":"OpenAIProvider","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_provider.py","lineno":48,"bases":["BaseLLMProvider"],"methods":[{"name":"__init__","lineno":51,"docstring":"Initialize OpenAI provider.\n\nArgs:\n    config: OpenAI configuration\n    **kwargs: Additional configuration parameters"}],"docstring":"OpenAI provider implementation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_responses_interface.py","name":"OpenAIResponsesError","data":{"name":"OpenAIResponsesError","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_responses_interface.py","lineno":56,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Responses API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"libs/opsvi-llm/opsvi_llm/providers/openai_responses_interface.py","lineno":72,"bases":[],"methods":[{"name":"__init__","lineno":78,"docstring":null},{"name":"create_response","lineno":88,"docstring":"Create a new response using the OpenAI Responses API.\nSupports retries for transient errors."},{"name":"retrieve_response","lineno":100,"docstring":null},{"name":"list_input_items","lineno":108,"docstring":null},{"name":"delete_response","lineno":118,"docstring":null},{"name":"cancel_response","lineno":126,"docstring":null},{"name":"stream_response","lineno":135,"docstring":"Stream a response (if supported by the API).\nYields Response objects as they arrive."},{"name":"get_status","lineno":158,"docstring":null},{"name":"wait_for_completion","lineno":166,"docstring":"Polls the response status until it is completed or failed, or timeout is reached."},{"name":"get_output_text","lineno":200,"docstring":null},{"name":"get_tool_calls","lineno":203,"docstring":null},{"name":"get_function_results","lineno":206,"docstring":null},{"name":"to_structured","lineno":211,"docstring":null},{"name":"list_responses","lineno":222,"docstring":"List all responses (paginated)."},{"name":"_with_retries","lineno":250,"docstring":null},{"name":"get_metadata","lineno":279,"docstring":null},{"name":"to_dict","lineno":284,"docstring":null},{"name":"call_endpoint","lineno":289,"docstring":"Generic method to call any OpenAI endpoint (for new/experimental APIs).\nArgs:\n    method: HTTP method (\"get\", \"post\", \"delete\", etc.)\n    path: API path (e.g., \"/responses/experimental\")\n    **kwargs: Request parameters (json, params, etc.)\nReturns:\n    API response (dict or object)\nExample:\n    >>> api.call_endpoint(\"post\", \"/responses/experimental\", json={...})"},{"name":"set_timeout","lineno":311,"docstring":"Set default timeout (seconds) for all requests."},{"name":"set_api_version","lineno":315,"docstring":"Set API version for all requests (if supported by OpenAI)."},{"name":"log_call","lineno":319,"docstring":"Decorator to log API calls."},{"name":"create_response_logged","lineno":335,"docstring":null},{"name":"batch_create_responses","lineno":339,"docstring":"Batch create responses (if OpenAI supports batch endpoint).\nArgs:\n    batch_params: List of parameter dicts for each response.\nReturns:\n    List of Response objects."}],"docstring":"Enhanced shared interface for the OpenAI Responses API.\nProvides sync/async, streaming, status polling, batch, tool/function, and structured output.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"AgentState","data":{"name":"AgentState","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":34,"bases":["Enum"],"methods":[],"docstring":"Agent lifecycle states.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"MessageType","data":{"name":"MessageType","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":48,"bases":["Enum"],"methods":[],"docstring":"Types of messages agents can send and receive.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"AgentMessage","data":{"name":"AgentMessage","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":63,"bases":[],"methods":[],"docstring":"Standardized message format for agent communication.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"AgentCapabilityType","data":{"name":"AgentCapabilityType","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":77,"bases":["Enum"],"methods":[],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":84,"bases":[],"methods":[],"docstring":"Represents a capability that an agent can provide.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"ToolProtocol","data":{"name":"ToolProtocol","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":94,"bases":["Protocol"],"methods":[{"name":"name","lineno":97,"docstring":"Return the tool name."}],"docstring":"Protocol for tools that can be used by agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"libs/opsvi-master/opsvi_master/agents/base_agent.py","lineno":118,"bases":["ABC"],"methods":[{"name":"__init__","lineno":129,"docstring":"Initialize the base agent.\n\nArgs:\n    agent_id: Unique identifier for this agent\n    name: Human-readable name for the agent\n    description: Brief description of the agent's purpose\n    capabilities: List of capabilities this agent provides\n    tools: List of tools available to this agent\n    message_bus: Message bus for communication\n    config: Agent-specific configuration"},{"name":"get_status","lineno":317,"docstring":"Get the current status of the agent including health metrics."}],"docstring":"Base class for all agents in the system.\n\nProvides core functionality including:\n- Lifecycle management (initialize, start, stop)\n- Message handling and communication\n- Tool integration and capability management\n- Advanced error handling and recovery\n- State management and health monitoring","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/enhanced_base_agent.py","name":"EnhancedBaseAgent","data":{"name":"EnhancedBaseAgent","file_path":"libs/opsvi-master/opsvi_master/agents/enhanced_base_agent.py","lineno":93,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":96,"docstring":"Initialize enhanced agent.\n\nArgs:\n    agent_id: Unique identifier for this agent\n    name: Human-readable name for the agent\n    description: Brief description of the agent's purpose\n    capabilities: List of capabilities this agent provides\n    tools: List of tools available to this agent\n    message_bus: Message bus for communication\n    config: Agent-specific configuration\n    cache: Cache implementation for tool results\n    state_persistence_path: Path to persist agent state"},{"name":"get_enhanced_status","lineno":315,"docstring":"Get comprehensive agent status including performance metrics."},{"name":"_generate_cache_key","lineno":355,"docstring":"Generate cache key for tool execution using secure SHA256."}],"docstring":"Enhanced base agent with monitoring, error handling, and optimization features.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/enhanced_planner_agent.py","name":"EnhancedPlannerAgent","data":{"name":"EnhancedPlannerAgent","file_path":"libs/opsvi-master/opsvi_master/agents/enhanced_planner_agent.py","lineno":28,"bases":["EnhancedBaseAgent"],"methods":[{"name":"__init__","lineno":31,"docstring":null},{"name":"_initialize_plan_metrics","lineno":433,"docstring":"Initialize metrics tracking for a new plan."},{"name":"_assess_enhanced_complexity","lineno":507,"docstring":"Enhanced complexity assessment with machine learning insights."},{"name":"_serialize_enhanced_plan","lineno":861,"docstring":"Serialize enhanced plan with additional metadata."},{"name":"_calculate_plan_duration","lineno":895,"docstring":"Calculate total plan duration."},{"name":"_update_plan_metrics","lineno":905,"docstring":"Update plan metrics with current progress."}],"docstring":"Enhanced planner agent with comprehensive monitoring and optimization.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/error_handling.py","name":"CircuitBreakerOpenError","data":{"name":"CircuitBreakerOpenError","file_path":"libs/opsvi-master/opsvi_master/agents/error_handling.py","lineno":155,"bases":["Exception"],"methods":[],"docstring":"Exception raised when circuit breaker is open.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/error_handling.py","name":"ErrorHandler","data":{"name":"ErrorHandler","file_path":"libs/opsvi-master/opsvi_master/agents/error_handling.py","lineno":367,"bases":[],"methods":[{"name":"__init__","lineno":370,"docstring":"Initialize error handler for an agent."},{"name":"get_circuit_breaker","lineno":377,"docstring":"Get or create circuit breaker for a service."},{"name":"_determine_escalation_level","lineno":499,"docstring":"Determine escalation level based on alert data."},{"name":"get_health_status","lineno":513,"docstring":"Get current health status."}],"docstring":"Comprehensive error handling for agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/implementation_agent.py","name":"ImplementationAgent","data":{"name":"ImplementationAgent","file_path":"libs/opsvi-master/opsvi_master/agents/implementation_agent.py","lineno":30,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":66,"docstring":null},{"name":"process","lineno":968,"docstring":"Process data according to implementation requirements.\n\nArgs:\n    data: Input data to process\n\nReturns:\n    Processed data"},{"name":"validate","lineno":1001,"docstring":"Validate input data.\n\nArgs:\n    data: Data to validate\n\nReturns:\n    True if data is valid, False otherwise"}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","name":"MockTool","data":{"name":"MockTool","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","lineno":34,"bases":[],"methods":[{"name":"__init__","lineno":37,"docstring":"Initialize mock tool.\n\nArgs:\n    name: Tool name\n    execution_time: Simulated execution time in seconds\n    failure_rate: Probability of failure (0.0 to 1.0)"}],"docstring":"Mock tool for testing agent functionality.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","name":"TestAgent","data":{"name":"TestAgent","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","lineno":73,"bases":["EnhancedBaseAgent"],"methods":[{"name":"__init__","lineno":80,"docstring":"Initialize test agent."},{"name":"add_test_tool","lineno":120,"docstring":"Add a mock tool for testing."}],"docstring":"Test agent implementation for integration testing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","name":"IntegrationTestSuite","data":{"name":"IntegrationTestSuite","file_path":"libs/opsvi-master/opsvi_master/agents/integration_test_suite.py","lineno":187,"bases":[],"methods":[{"name":"__init__","lineno":190,"docstring":"Initialize test suite."},{"name":"_generate_test_summary","lineno":745,"docstring":"Generate comprehensive test summary."}],"docstring":"Comprehensive integration test suite for enhanced agent systems.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","name":"PerformanceMetrics","data":{"name":"PerformanceMetrics","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","lineno":55,"bases":[],"methods":[],"docstring":"Performance metrics for an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","name":"MetricCollector","data":{"name":"MetricCollector","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","lineno":101,"bases":[],"methods":[{"name":"__init__","lineno":104,"docstring":"Initialize metric collector.\n\nArgs:\n    max_points: Maximum number of metric points to retain"},{"name":"record_counter","lineno":115,"docstring":"Record a counter metric."},{"name":"record_gauge","lineno":122,"docstring":"Record a gauge metric."},{"name":"record_timer","lineno":129,"docstring":"Record a timer metric."},{"name":"_add_point","lineno":135,"docstring":"Add a metric point."},{"name":"get_recent_values","lineno":142,"docstring":"Get recent values for a metric."},{"name":"get_statistics","lineno":151,"docstring":"Get statistics for a metric."}],"docstring":"Collects and stores metrics for analysis.","agent_type":"collector"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","name":"PerformanceMonitor","data":{"name":"PerformanceMonitor","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","lineno":168,"bases":[],"methods":[{"name":"__init__","lineno":171,"docstring":"Initialize performance monitor for an agent."},{"name":"start_task_timer","lineno":181,"docstring":"Start timing a task execution."},{"name":"end_task_timer","lineno":185,"docstring":"End task timing and record metrics."},{"name":"record_message_sent","lineno":208,"docstring":"Record that a message was sent."},{"name":"record_message_received","lineno":213,"docstring":"Record that a message was received."},{"name":"record_error","lineno":218,"docstring":"Record an error occurrence."},{"name":"update_heartbeat","lineno":223,"docstring":"Update last heartbeat timestamp."},{"name":"collect_system_metrics","lineno":228,"docstring":"Collect system resource metrics."},{"name":"get_performance_summary","lineno":250,"docstring":"Get performance summary."},{"name":"get_metric_statistics","lineno":291,"docstring":"Get statistics for a specific metric."}],"docstring":"Monitors agent performance and resource usage.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","name":"AlertManager","data":{"name":"AlertManager","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","lineno":298,"bases":[],"methods":[{"name":"__init__","lineno":301,"docstring":"Initialize alert manager."},{"name":"set_threshold","lineno":309,"docstring":"Set alert threshold for a metric.\n\nArgs:\n    metric_name: Name of metric to monitor\n    threshold_value: Threshold value\n    level: Alert level\n    comparison: Comparison type (\"greater_than\", \"less_than\", \"equals\")"},{"name":"check_thresholds","lineno":330,"docstring":"Check metrics against thresholds and generate alerts."},{"name":"resolve_alert","lineno":377,"docstring":"Resolve an alert."},{"name":"get_active_alerts","lineno":384,"docstring":"Get active alerts."},{"name":"add_alert_handler","lineno":393,"docstring":"Add an alert handler."}],"docstring":"Manages alerts and thresholds for agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","name":"AgentMonitor","data":{"name":"AgentMonitor","file_path":"libs/opsvi-master/opsvi_master/agents/monitoring.py","lineno":398,"bases":[],"methods":[{"name":"__init__","lineno":401,"docstring":"Initialize agent monitor."},{"name":"_set_default_thresholds","lineno":414,"docstring":"Set default alert thresholds."},{"name":"start_task_timer","lineno":479,"docstring":null},{"name":"end_task_timer","lineno":482,"docstring":null},{"name":"record_message_sent","lineno":485,"docstring":null},{"name":"record_message_received","lineno":488,"docstring":null},{"name":"record_error","lineno":491,"docstring":null},{"name":"update_heartbeat","lineno":494,"docstring":null},{"name":"get_performance_summary","lineno":497,"docstring":null},{"name":"get_active_alerts","lineno":500,"docstring":null},{"name":"set_threshold","lineno":503,"docstring":null}],"docstring":"Comprehensive monitoring for a single agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/performance_benchmark.py","name":"BenchmarkResult","data":{"name":"BenchmarkResult","file_path":"libs/opsvi-master/opsvi_master/agents/performance_benchmark.py","lineno":31,"bases":[],"methods":[{"name":"throughput","lineno":43,"docstring":"Calculate throughput (operations per second)."},{"name":"avg_time_per_operation","lineno":48,"docstring":"Calculate average time per operation."}],"docstring":"Container for benchmark results.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/agents/planner_agent.py","name":"PlannerAgent","data":{"name":"PlannerAgent","file_path":"libs/opsvi-master/opsvi_master/agents/planner_agent.py","lineno":90,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":352,"docstring":null},{"name":"_assess_complexity","lineno":502,"docstring":"Assess the complexity of requirements."},{"name":"_determine_scope","lineno":515,"docstring":"Determine the scope of the project."},{"name":"_serialize_plan","lineno":670,"docstring":"Serialize plan to dictionary."},{"name":"_estimate_plan_duration","lineno":708,"docstring":"Estimate total plan duration."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","name":"RegistrationStatus","data":{"name":"RegistrationStatus","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","lineno":23,"bases":["Enum"],"methods":[],"docstring":"Agent registration status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","name":"AgentRegistration","data":{"name":"AgentRegistration","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","lineno":34,"bases":[],"methods":[{"name":"is_healthy","lineno":47,"docstring":"Check if agent is considered healthy based on heartbeat."},{"name":"should_heartbeat","lineno":57,"docstring":"Check if agent should send a heartbeat."}],"docstring":"Agent registration information.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"libs/opsvi-master/opsvi_master/coordination/agent_registry.py","lineno":68,"bases":[],"methods":[{"name":"__init__","lineno":76,"docstring":"Initialize agent registry."},{"name":"find_agents_by_capability","lineno":313,"docstring":"Find agents with a specific capability. Optimized O(1) lookup.\n\nArgs:\n    capability: Capability to search for\n\nReturns:\n    List of agent IDs with the capability"},{"name":"find_agents_by_tag","lineno":328,"docstring":"Find agents with a specific tag. Optimized O(1) lookup.\n\nArgs:\n    tag: Tag to search for\n\nReturns:\n    List of agent IDs with the tag"},{"name":"find_agents_by_status","lineno":341,"docstring":"Find agents with a specific status. Optimized O(1) lookup using status index.\n\nArgs:\n    status: Status to search for\n\nReturns:\n    List of agent IDs with the status"},{"name":"get_agent_info","lineno":356,"docstring":"Get registration information for an agent.\n\nArgs:\n    agent_id: Agent ID\n\nReturns:\n    AgentRegistration if found, None otherwise"},{"name":"get_agent_instance","lineno":368,"docstring":"Get agent instance by ID.\n\nArgs:\n    agent_id: Agent ID\n\nReturns:\n    BaseAgent instance if found, None otherwise"},{"name":"list_agents","lineno":381,"docstring":"List registered agent IDs, optionally filtered by status.\n\nArgs:\n    status_filter: Optional status to filter by\n\nReturns:\n    List of agent IDs"},{"name":"get_performance_metrics","lineno":397,"docstring":"Get detailed performance metrics for monitoring.\n\nReturns:\n    Dictionary with performance metrics"},{"name":"get_registry_stats","lineno":435,"docstring":"Get comprehensive registry statistics.\n\nReturns:\n    Dictionary with detailed registry statistics"}],"docstring":"Centralized registry for agent lifecycle management and discovery.\n\nManages agent registration, deregistration, health monitoring,\nand provides discovery services for agent coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"RegistrationStatus","data":{"name":"RegistrationStatus","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":29,"bases":["Enum"],"methods":[],"docstring":"Enhanced agent registration status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"HealthLevel","data":{"name":"HealthLevel","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":41,"bases":["Enum"],"methods":[],"docstring":"Agent health levels.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"AgentMetrics","data":{"name":"AgentMetrics","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":51,"bases":[],"methods":[{"name":"to_dict","lineno":62,"docstring":"Convert to dictionary."},{"name":"from_dict","lineno":69,"docstring":"Create from dictionary."}],"docstring":"Agent performance metrics.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"AgentRegistration","data":{"name":"AgentRegistration","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":77,"bases":[],"methods":[{"name":"is_healthy","lineno":95,"docstring":"Check if agent is considered healthy based on heartbeat."},{"name":"should_heartbeat","lineno":105,"docstring":"Check if agent should send a heartbeat."},{"name":"update_health_level","lineno":115,"docstring":"Update and return current health level."},{"name":"to_dict","lineno":128,"docstring":"Convert to dictionary for storage."},{"name":"from_dict","lineno":143,"docstring":"Create from dictionary."}],"docstring":"Enhanced agent registration information.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"StorageBackend","data":{"name":"StorageBackend","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":164,"bases":["ABC"],"methods":[],"docstring":"Abstract storage backend for agent registry.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","name":"EnhancedAgentRegistry","data":{"name":"EnhancedAgentRegistry","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_agent_registry.py","lineno":429,"bases":[],"methods":[{"name":"__init__","lineno":442,"docstring":"Initialize enhanced agent registry."},{"name":"add_event_callback","lineno":789,"docstring":"Add event callback."},{"name":"remove_event_callback","lineno":793,"docstring":"Remove event callback."},{"name":"_get_agent_lock","lineno":866,"docstring":"Get or create lock for agent."}],"docstring":"Enhanced agent registry with scalability improvements.\n\nFeatures:\n- Pluggable storage backends (file, database, distributed)\n- Concurrent processing with asyncio\n- Advanced query capabilities\n- Comprehensive metrics and monitoring\n- Fault tolerance and recovery\n- Auto-scaling support","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","name":"RoutingStrategy","data":{"name":"RoutingStrategy","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","lineno":49,"bases":["Enum"],"methods":[],"docstring":"Strategies for routing messages to multiple agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","name":"AgentInfo","data":{"name":"AgentInfo","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","lineno":95,"bases":[],"methods":[{"name":"is_available","lineno":106,"docstring":"Check if agent is available for new messages."}],"docstring":"Information about registered agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","name":"LoadBalancer","data":{"name":"LoadBalancer","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","lineno":156,"bases":[],"methods":[{"name":"__init__","lineno":159,"docstring":"Initialize load balancer with routing strategy."},{"name":"select_agent","lineno":164,"docstring":"Select best agent based on routing strategy."}],"docstring":"Load balancer for distributing messages across agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","name":"DeadLetterQueue","data":{"name":"DeadLetterQueue","file_path":"libs/opsvi-master/opsvi_master/coordination/enhanced_message_bus.py","lineno":213,"bases":[],"methods":[{"name":"__init__","lineno":216,"docstring":"Initialize dead letter queue."},{"name":"add_message","lineno":222,"docstring":"Add failed message to dead letter queue."},{"name":"get_messages","lineno":232,"docstring":"Get messages from dead letter queue."},{"name":"replay_message","lineno":238,"docstring":"Remove and return message for replay."}],"docstring":"Queue for messages that failed to deliver.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/coordination/message_bus.py","name":"MessageBus","data":{"name":"MessageBus","file_path":"libs/opsvi-master/opsvi_master/coordination/message_bus.py","lineno":72,"bases":[],"methods":[{"name":"__init__","lineno":80,"docstring":"Initialize message bus.\n\nArgs:\n    max_queue_size: Maximum number of messages in queue"},{"name":"subscribe","lineno":241,"docstring":"Subscribe to messages.\n\nArgs:\n    subscriber_id: ID of subscribing agent\n    subscription_type: Type of subscription\n    handler: Message handler function\n    filter_criteria: Optional filter criteria\n\nReturns:\n    Subscription ID"},{"name":"unsubscribe","lineno":298,"docstring":"Unsubscribe from messages.\n\nArgs:\n    subscriber_id: ID of subscribing agent\n    subscription_type: Type of subscription to remove\n\nReturns:\n    True if subscription was removed, False otherwise"},{"name":"get_stats","lineno":347,"docstring":"Get message bus statistics.\n\nReturns:\n    Dictionary with statistics"},{"name":"_message_matches_filter","lineno":480,"docstring":"Check if message matches filter criteria.\n\nArgs:\n    message: Message to check\n    filter_criteria: Filter criteria\n\nReturns:\n    True if message matches, False otherwise"}],"docstring":"Asynchronous message bus for inter-agent communication.\n\nProvides message routing, topic-based publishing, direct messaging,\nand subscription management for the multi-agent system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/cache_manager.py","name":"CacheManager","data":{"name":"CacheManager","file_path":"libs/opsvi-master/opsvi_master/optimization/cache_manager.py","lineno":56,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":null}],"docstring":"Intelligent cache manager with TTL, invalidation, and performance monitoring.\n\nFeatures:\n- Type-specific TTL strategies\n- LRU eviction with access tracking\n- Hit rate monitoring and optimization\n- Intelligent prefetching capabilities\n- Memory usage monitoring and cleanup","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/database_coordinator.py","name":"DatabaseCoordinator","data":{"name":"DatabaseCoordinator","file_path":"libs/opsvi-master/opsvi_master/optimization/database_coordinator.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":36,"docstring":null},{"name":"_return_connection","lineno":424,"docstring":"Return connection to pool."}],"docstring":"High-performance database coordinator with connection pooling and optimization.\n\nFeatures:\n- Connection pooling with automatic scaling\n- Query optimization and caching\n- Transaction management with rollback\n- Performance monitoring and alerting\n- Intelligent retry mechanisms\n- Backup and recovery support","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"DatabaseConnectionError","data":{"name":"DatabaseConnectionError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":28,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":31,"docstring":null}],"docstring":"Raised when database connection or operation fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"KGOperationError","data":{"name":"KGOperationError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":45,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":48,"docstring":null}],"docstring":"Raised when Knowledge Graph operations fail.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"CacheError","data":{"name":"CacheError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":63,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":66,"docstring":null}],"docstring":"Raised when cache operations fail.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"PerformanceError","data":{"name":"PerformanceError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":80,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":83,"docstring":null}],"docstring":"Raised when performance thresholds are violated.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"ResourceRoutingError","data":{"name":"ResourceRoutingError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":100,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":103,"docstring":null}],"docstring":"Raised when resource routing fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":117,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":120,"docstring":null}],"docstring":"Raised when input validation fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","name":"TimeoutError","data":{"name":"TimeoutError","file_path":"libs/opsvi-master/opsvi_master/optimization/exceptions.py","lineno":137,"bases":["OptimizationError"],"methods":[{"name":"__init__","lineno":140,"docstring":null}],"docstring":"Raised when operations exceed timeout thresholds.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-master/opsvi_master/workflow/step_handlers.py","name":"StepHandlerError","data":{"name":"StepHandlerError","file_path":"libs/opsvi-master/opsvi_master/workflow/step_handlers.py","lineno":12,"bases":["Exception"],"methods":[],"docstring":"Exception raised for step handler errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","lineno":93,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when Brave MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","lineno":99,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"libs/opsvi-mcp/opsvi_mcp/brave_mcp_search.py","lineno":105,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/context7_mcp_client_strict.py","name":"StrictContext7MCPClient","data":{"name":"StrictContext7MCPClient","file_path":"libs/opsvi-mcp/opsvi_mcp/context7_mcp_client_strict.py","lineno":9,"bases":["Context7MCPClient"],"methods":[{"name":"_parse_library_results","lineno":17,"docstring":null}],"docstring":"Strict, OAMAT-compliant Context7 MCP client.\n- Only accepts a valid JSON array of libraries from the LLM.\n- No fallback parsing. If the LLM does not return a valid array, raises an error.\n- Use for workflows that require strict, schema-enforced, no-fallback extraction.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/intelligent_relevance_scorer.py","name":"RelevanceEvaluation","data":{"name":"RelevanceEvaluation","file_path":"libs/opsvi-mcp/opsvi_mcp/intelligent_relevance_scorer.py","lineno":33,"bases":[],"methods":[],"docstring":"Result of intelligent relevance evaluation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/intelligent_relevance_scorer.py","name":"IntelligentRelevanceScorer","data":{"name":"IntelligentRelevanceScorer","file_path":"libs/opsvi-mcp/opsvi_mcp/intelligent_relevance_scorer.py","lineno":43,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":"Initialize the relevance scoring agent\n\nArgs:\n    llm_client: Optional LLM client, will create default if not provided"},{"name":"_create_default_llm_client","lineno":61,"docstring":"Create default LLM client for relevance scoring"},{"name":"evaluate_relevance","lineno":71,"docstring":"Evaluate the relevance of a URL using intelligent LLM analysis\n\nArgs:\n    query: Original search query\n    url: URL to evaluate\n    title: Page/result title\n    description: Page/result description\n    context: Optional additional context about the research\n\nReturns:\n    RelevanceEvaluation with score, reasoning, and analysis"},{"name":"_create_relevance_prompt","lineno":108,"docstring":"Create specialized prompt for relevance evaluation"},{"name":"_get_llm_evaluation","lineno":176,"docstring":"Get evaluation from LLM"},{"name":"_parse_evaluation_response","lineno":210,"docstring":"Parse and validate LLM evaluation response"},{"name":"_fallback_scoring","lineno":249,"docstring":"Fallback to basic scoring if LLM evaluation fails"}],"docstring":"Specialized agent for intelligent relevance scoring using LLM analysis\n\nThis agent evaluates search results using sophisticated prompts and\nsemantic understanding rather than simple keyword matching.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","lineno":85,"bases":["MCPError"],"methods":[],"docstring":"Raised when MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","lineno":91,"bases":["MCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","lineno":97,"bases":["MCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","name":"ToolNotFoundError","data":{"name":"ToolNotFoundError","file_path":"libs/opsvi-mcp/opsvi_mcp/mcp_integration_template.py","lineno":103,"bases":["MCPError"],"methods":[],"docstring":"Raised when requested tool is not available on server.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/research_workflow_tool.py","name":"ResearchWorkflowTool","data":{"name":"ResearchWorkflowTool","file_path":"libs/opsvi-mcp/opsvi_mcp/research_workflow_tool.py","lineno":107,"bases":[],"methods":[{"name":"__init__","lineno":112,"docstring":"Initialize the research workflow tool"},{"name":"_get_or_create_registry","lineno":127,"docstring":"Lazily create MCP registry if needed"},{"name":"_mock_search_results","lineno":145,"docstring":"Provide mock search results for demo purposes"},{"name":"_format_urls_for_agent","lineno":209,"docstring":"Format URLs for agent consumption with scores and metadata"},{"name":"extract_urls_from_text","lineno":257,"docstring":"Extract URLs from plain text search results"},{"name":"_extract_title_for_url","lineno":290,"docstring":"Extract title for a URL from surrounding text"},{"name":"_extract_description_for_url","lineno":312,"docstring":"Extract description for a URL from surrounding text"},{"name":"_generate_title_from_url","lineno":330,"docstring":"Generate a title from URL"},{"name":"present_urls_for_selection","lineno":539,"docstring":"Present URLs to the agent for selection\n\nArgs:\n    urls: List of SearchResultURL objects\n    max_display: Maximum number of URLs to display\n\nReturns:\n    Formatted string for agent consumption"},{"name":"compile_research_report","lineno":755,"docstring":"Compile a research report from the results\n\nArgs:\n    query: Original search query\n    urls: All found URLs\n    selected_indices: Selected URL indices\n    results: Scraping results\n\nReturns:\n    ResearchReport object"},{"name":"format_research_report","lineno":786,"docstring":"Format research report for presentation\n\nArgs:\n    report: ResearchReport object\n\nReturns:\n    Formatted report string"}],"docstring":"Research workflow tool for intelligent web research","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-mcp/opsvi_mcp/servers/claude_code/config.py","name":"ServerConfig","data":{"name":"ServerConfig","file_path":"libs/opsvi-mcp/opsvi_mcp/servers/claude_code/config.py","lineno":33,"bases":[],"methods":[{"name":"__post_init__","lineno":42,"docstring":null}],"docstring":"Main server configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/config/settings.py","name":"OpsviOrchestrationSettings","data":{"name":"OpsviOrchestrationSettings","file_path":"libs/opsvi-orchestration/opsvi_orchestration/config/settings.py","lineno":10,"bases":["BaseSettings"],"methods":[{"name":"validate_log_level","lineno":25,"docstring":"Validate log level."}],"docstring":"Settings for opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationError","data":{"name":"OpsviOrchestrationError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":8,"bases":["OPSVIError"],"methods":[],"docstring":"Base exception for all opsvi-orchestration errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationConfigurationError","data":{"name":"OpsviOrchestrationConfigurationError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":12,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Configuration-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationConnectionError","data":{"name":"OpsviOrchestrationConnectionError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":16,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Connection-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationValidationError","data":{"name":"OpsviOrchestrationValidationError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":20,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Validation-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationTimeoutError","data":{"name":"OpsviOrchestrationTimeoutError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":24,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Timeout-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationResourceError","data":{"name":"OpsviOrchestrationResourceError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":28,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Resource-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationInitializationError","data":{"name":"OpsviOrchestrationInitializationError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":32,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Initialization-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","name":"OpsviOrchestrationShutdownError","data":{"name":"OpsviOrchestrationShutdownError","file_path":"libs/opsvi-orchestration/opsvi_orchestration/exceptions/base.py","lineno":36,"bases":["OpsviOrchestrationError"],"methods":[],"docstring":"Shutdown-related errors in opsvi-orchestration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/meta_orchestrator.py","name":"MetaOrchestrator","data":{"name":"MetaOrchestrator","file_path":"libs/opsvi-orchestration/opsvi_orchestration/meta_orchestrator.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the meta-orchestrator."},{"name":"_prepare_task_input","lineno":332,"docstring":"Prepare input data for a task."}],"docstring":"Meta-orchestrator for coordinating pipeline execution.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-orchestration/opsvi_orchestration/registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"libs/opsvi-orchestration/opsvi_orchestration/registry.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":"Initialize the agent registry."},{"name":"register_agent","lineno":20,"docstring":"Register an agent function."},{"name":"register_agent_from_path","lineno":33,"docstring":"Register an agent from a dotted import path."},{"name":"get_agent","lineno":58,"docstring":"Get an agent by name."},{"name":"get_agent_config","lineno":62,"docstring":"Get configuration for an agent."},{"name":"get_agent_metadata","lineno":66,"docstring":"Get metadata for an agent."},{"name":"list_agents","lineno":70,"docstring":"List all registered agent names."},{"name":"has_agent","lineno":74,"docstring":"Check if an agent is registered."},{"name":"execute_agent","lineno":78,"docstring":"Execute an agent with input data."},{"name":"get_agent_signature","lineno":140,"docstring":"Get the signature of an agent function."},{"name":"validate_agent_input","lineno":148,"docstring":"Validate input data against agent signature."}],"docstring":"Registry for managing AI agents with dynamic loading.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/gateway.py","name":"PromptGateway","data":{"name":"PromptGateway","file_path":"libs/opsvi-pipeline/opsvi_pipeline/gateway.py","lineno":18,"bases":["IPromptGateway"],"methods":[{"name":"__init__","lineno":21,"docstring":"Initialize the Prompt Gateway.\n\nArgs:\n    openai_client: OpenAI client instance\n    pga: Prompt Generation Agent"},{"name":"create_response","lineno":38,"docstring":"Create a response using DPG-enhanced prompt.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    constraints: Additional constraints\n    tools: Available tools\n    response_schema: Expected response schema\n    stream: Whether to enable streaming\n    **kwargs: Additional parameters\n\nReturns:\n    OpenAI response or stream"},{"name":"_create_repair_prompt","lineno":305,"docstring":"Create a prompt for auto-repair."},{"name":"create_with_reasoning","lineno":333,"docstring":"Create a response with reasoning using DPG.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    effort: Reasoning effort level\n    include_encrypted: Whether to include encrypted reasoning\n    constraints: Additional constraints\n    tools: Available tools\n    **kwargs: Additional parameters\n\nReturns:\n    Response with reasoning"},{"name":"create_background_task","lineno":397,"docstring":"Create a background task using DPG.\n\nArgs:\n    run_id: Run identifier\n    role: Agent role\n    task_type: Task type\n    user_goal: User's goal/request\n    constraints: Additional constraints\n    tools: Available tools\n    **kwargs: Additional parameters\n\nReturns:\n    Background task response"},{"name":"_compute_cache_key","lineno":455,"docstring":"Compute cache key for prompt pack.\n\nArgs:\n    prompt_pack: The prompt pack\n\nReturns:\n    Cache key"},{"name":"_apply_dpg_configurations","lineno":476,"docstring":"Apply DPG-specific configurations to OpenAI parameters.\n\nArgs:\n    openai_params: OpenAI parameters to modify\n    prompt_pack: The prompt pack"},{"name":"_process_response","lineno":509,"docstring":"Process the response and update metrics.\n\nArgs:\n    response: OpenAI response\n    prompt_pack: The prompt pack used\n    latency: Response latency"},{"name":"get_prompt_pack","lineno":559,"docstring":"Get a prompt pack by ID.\n\nArgs:\n    pack_id: Prompt pack ID\n\nReturns:\n    Prompt pack if found"},{"name":"list_recent_prompt_packs","lineno":577,"docstring":"List recent prompt packs.\n\nArgs:\n    limit: Maximum number of packs to return\n\nReturns:\n    List of recent prompt packs"},{"name":"clear_cache","lineno":593,"docstring":"Clear the prompt pack cache."},{"name":"get_stats","lineno":598,"docstring":"Get gateway statistics.\n\nReturns:\n    Dictionary with statistics"}],"docstring":"Gateway that intercepts OpenAI calls and applies DPG.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/models.py","name":"SafetyConfig","data":{"name":"SafetyConfig","file_path":"libs/opsvi-pipeline/opsvi_pipeline/models.py","lineno":56,"bases":["BaseModel"],"methods":[],"docstring":"Safety and guardrail configuration.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/pga.py","name":"PromptGenerationAgent","data":{"name":"PromptGenerationAgent","file_path":"libs/opsvi-pipeline/opsvi_pipeline/pga.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":23,"docstring":"Initialize the Prompt Generation Agent.\n\nArgs:\n    neo4j_client: Neo4j client for graph queries\n    context_store: Context store for bundles\n    default_models: Default model mapping for roles/tasks"},{"name":"_select_model_and_complexity","lineno":230,"docstring":"Select appropriate model and complexity level.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    context_bundles: Context bundles\n\nReturns:\n    Tuple of (model, complexity)"},{"name":"_compress_context","lineno":270,"docstring":"Compress context bundles to fit within limits.\n\nArgs:\n    bundles: Original context bundles\n    complexity: Task complexity\n\nReturns:\n    Compressed context bundles"},{"name":"_compress_single_bundle","lineno":308,"docstring":"Compress a single context bundle.\n\nArgs:\n    bundle: Original bundle\n    available_tokens: Available token budget\n\nReturns:\n    Compressed bundle or None if too large"},{"name":"_build_messages","lineno":339,"docstring":"Build message history for the prompt.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    goal: User goal\n    bundles: Context bundles\n    constraints: Additional constraints\n\nReturns:\n    List of messages"},{"name":"_build_system_message","lineno":377,"docstring":"Build system message for the agent.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    constraints: Additional constraints\n\nReturns:\n    System message content"},{"name":"_build_context_summary","lineno":419,"docstring":"Build a summary of context bundles.\n\nArgs:\n    bundles: Context bundles\n\nReturns:\n    Context summary"},{"name":"_configure_tools","lineno":437,"docstring":"Configure tools for the prompt.\n\nArgs:\n    tools: Available tools\n\nReturns:\n    Configured tools with strict validation"},{"name":"_configure_response_format","lineno":457,"docstring":"Configure response format.\n\nArgs:\n    schema: Expected response schema\n    role: Agent role\n    task_type: Task type\n\nReturns:\n    Response format configuration"},{"name":"_configure_controls","lineno":483,"docstring":"Configure control parameters.\n\nArgs:\n    stream: Whether to enable streaming\n    model: Selected model\n    response_format: Response format\n    role: Agent role\n    task_type: Task type\n\nReturns:\n    Controls configuration"},{"name":"_configure_routing","lineno":531,"docstring":"Configure routing parameters.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    complexity: Task complexity\n    model: Selected model\n\nReturns:\n    Routing configuration"},{"name":"_configure_safety","lineno":565,"docstring":"Configure safety parameters.\n\nArgs:\n    role: Agent role\n    task_type: Task type\n    constraints: Additional constraints\n\nReturns:\n    Safety configuration"},{"name":"_estimate_tokens","lineno":595,"docstring":"Estimate total token count for the prompt pack.\n\nArgs:\n    prompt_pack: The prompt pack\n\nReturns:\n    Estimated token count"}],"docstring":"Agent responsible for generating context-aware PromptPacks.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/coder.py","name":"CodeOutput","data":{"name":"CodeOutput","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/coder.py","lineno":27,"bases":["BaseModel"],"methods":[],"docstring":"Coder agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/critic.py","name":"CriticOutput","data":{"name":"CriticOutput","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/critic.py","lineno":29,"bases":["BaseModel"],"methods":[],"docstring":"Critic agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/planner.py","name":"PlanOutput","data":{"name":"PlanOutput","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/planner.py","lineno":21,"bases":["BaseModel"],"methods":[],"docstring":"Planner agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/specifier.py","name":"Constraint","data":{"name":"Constraint","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/specifier.py","lineno":17,"bases":["BaseModel"],"methods":[],"docstring":"A constraint on the system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/specifier.py","name":"SpecificationOutput","data":{"name":"SpecificationOutput","file_path":"libs/opsvi-pipeline/opsvi_pipeline/schemas/specifier.py","lineno":28,"bases":["BaseModel"],"methods":[],"docstring":"Specifier agent output schema.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","name":"AgentHubResponse","data":{"name":"AgentHubResponse","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","lineno":38,"bases":[],"methods":[],"docstring":"Response from Agent Hub execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","name":"AgentSelection","data":{"name":"AgentSelection","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","lineno":61,"bases":["Enum"],"methods":[],"docstring":"Agent Hub agent types","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","name":"AgentHubClient","data":{"name":"AgentHubClient","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","lineno":77,"bases":[],"methods":[{"name":"__init__","lineno":80,"docstring":null},{"name":"_prepare_agent_params","lineno":154,"docstring":"Prepare agent-specific parameters based on context analysis"}],"docstring":"Client for Agent Hub API communication","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","name":"CollaborationInterface","data":{"name":"CollaborationInterface","file_path":"libs/opsvi-shared/opsvi_shared/collaboration_framework.py","lineno":401,"bases":[],"methods":[{"name":"__init__","lineno":404,"docstring":null},{"name":"_calculate_performance_metrics","lineno":560,"docstring":"Calculate performance metrics for this collaboration"},{"name":"_update_performance_metrics","lineno":601,"docstring":"Update overall performance metrics"},{"name":"_evaluate_pattern_effectiveness","lineno":619,"docstring":"Evaluate how effective the applied patterns were"},{"name":"_evaluate_context_accuracy","lineno":635,"docstring":"Evaluate how accurate the context analysis was"},{"name":"_discover_new_patterns","lineno":648,"docstring":"Discover new patterns from this collaboration"},{"name":"_calculate_prediction_accuracy","lineno":668,"docstring":"Calculate how accurate our predictions were"},{"name":"_analyze_agent_effectiveness","lineno":677,"docstring":"Analyze which agents are most effective"},{"name":"_analyze_pattern_accuracy","lineno":711,"docstring":"Analyze pattern prediction accuracy"},{"name":"_identify_optimization_opportunities","lineno":733,"docstring":"Identify opportunities for system optimization"},{"name":"_generate_system_improvements","lineno":771,"docstring":"Generate specific system improvement recommendations"},{"name":"_calculate_recent_success_rate","lineno":808,"docstring":"Calculate success rate for recent collaborations"}],"docstring":"Main interface for Agent Collaboration Framework","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/database/core/cognitive_database.py","name":"CognitiveDatabase","data":{"name":"CognitiveDatabase","file_path":"libs/opsvi-shared/opsvi_shared/database/core/cognitive_database.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":"Initialize database connection using existing patterns"},{"name":"_validate_connection","lineno":32,"docstring":"Validate database connection and collections"},{"name":"find_memories_about","lineno":51,"docstring":"Find memories related to a specific topic"},{"name":"get_foundational_memories","lineno":72,"docstring":"Get high-quality foundational memories"},{"name":"get_concepts_by_domain","lineno":88,"docstring":"Get cognitive concepts filtered by domain"},{"name":"get_memories_by_type","lineno":104,"docstring":"Get memories filtered by type (operational, procedural, etc.)"},{"name":"get_startup_context","lineno":120,"docstring":"Get essential startup context and foundational knowledge"},{"name":"assess_system_health","lineno":132,"docstring":"Comprehensive system health assessment"},{"name":"_calculate_health_score","lineno":158,"docstring":"Calculate overall system health score"},{"name":"_execute_query","lineno":171,"docstring":"Execute AQL query with error handling and validation"}],"docstring":"Agent-friendly interface to cognitive database operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/database/consolidated_arango.py","name":"ConsolidatedArangoDB","data":{"name":"ConsolidatedArangoDB","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/database/consolidated_arango.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":null},{"name":"_validate_connection","lineno":75,"docstring":null},{"name":"search","lineno":90,"docstring":null},{"name":"_search_content","lineno":137,"docstring":"Search for content across document fields"},{"name":"_search_tags","lineno":175,"docstring":"Search documents by tags with AND/OR logic"},{"name":"_search_date_range","lineno":206,"docstring":"Search documents within date range"},{"name":"_search_type","lineno":228,"docstring":"Search documents by type field"},{"name":"_search_recent","lineno":244,"docstring":"Get recent documents within time window"},{"name":"_search_by_id","lineno":265,"docstring":"Direct document lookup by ID"},{"name":"modify","lineno":279,"docstring":"Unified modification interface with operation-based routing\n\noperations: insert, update, delete, upsert"},{"name":"_modify_insert","lineno":310,"docstring":"Insert new document with optional validation"},{"name":"_modify_update","lineno":344,"docstring":"Update documents by key or criteria"},{"name":"_modify_delete","lineno":406,"docstring":"Delete documents by key or criteria with confirmation"},{"name":"_modify_upsert","lineno":463,"docstring":"Insert or update based on matching fields"},{"name":"_search_by_criteria","lineno":499,"docstring":"Helper: Search documents by exact criteria match"},{"name":"manage","lineno":515,"docstring":"Unified management interface with action-based routing\n\nactions: collection_info, backup, health, count, exists, create_collection"},{"name":"_manage_collection_info","lineno":544,"docstring":"Get detailed collection information and statistics"},{"name":"_manage_backup","lineno":574,"docstring":"Backup collections to specified directory"},{"name":"_manage_health","lineno":612,"docstring":"Agent-IDE database health assessment"},{"name":"_manage_count","lineno":661,"docstring":"Count documents in collection with optional criteria"},{"name":"_manage_exists","lineno":699,"docstring":"Check if documents matching criteria exist"},{"name":"_manage_create_collection","lineno":732,"docstring":"Create new collection"},{"name":"_build_filter_conditions","lineno":759,"docstring":"Build AQL filter conditions from criteria dictionary"},{"name":"_execute_query","lineno":773,"docstring":"Execute AQL query with comprehensive error handling"},{"name":"_error_response","lineno":803,"docstring":"Standardized error response format"}],"docstring":"Main database abstraction providing 3 consolidated tools:\n- arango_search: All search/query operations\n- arango_modify: All CRUD operations\n- arango_manage: All admin operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_agents_interface.py","name":"OpenAIAgentsInterface","data":{"name":"OpenAIAgentsInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_agents_interface.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"create_agent","lineno":43,"docstring":"Create an Agent with tools, handoffs, guardrails, output type, and model."},{"name":"register_tool","lineno":70,"docstring":"Decorate a function as an agent tool."},{"name":"create_file_search_tool","lineno":74,"docstring":null},{"name":"create_web_search_tool","lineno":81,"docstring":null},{"name":"run_agent_sync","lineno":85,"docstring":"Run an agent synchronously."},{"name":"as_tool","lineno":129,"docstring":"Expose an agent as a tool for orchestration."},{"name":"create_context","lineno":144,"docstring":"Create a context object for agent runs."},{"name":"log_call","lineno":149,"docstring":null},{"name":"enable_verbose_logging","lineno":165,"docstring":null},{"name":"enable_tracing","lineno":169,"docstring":null},{"name":"set_timeout","lineno":174,"docstring":null},{"name":"set_max_turns","lineno":177,"docstring":null},{"name":"set_debug","lineno":180,"docstring":null}],"docstring":"Modernized shared interface for OpenAI Agents/Assistants v2 API (python SDK).\n- Full agent, tool, thread, message, vector store, and orchestration support\n- Async, streaming, batch, error handling, logging, tracing, context, config\n- Advanced usage and extensibility patterns","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesError","data":{"name":"OpenAIResponsesError","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","lineno":48,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Responses API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","lineno":64,"bases":[],"methods":[{"name":"__init__","lineno":70,"docstring":null},{"name":"create","lineno":73,"docstring":"Create a new response object. Params per OpenAI docs."},{"name":"retrieve","lineno":77,"docstring":"Retrieve a response by ID."},{"name":"delete","lineno":81,"docstring":"Delete a response by ID."},{"name":"cancel","lineno":85,"docstring":"Cancel an in-progress response by ID."},{"name":"list_input_items","lineno":89,"docstring":"List input items for a response (paginated)."},{"name":"stream","lineno":95,"docstring":"Stream a response (Server-Sent Events). Params must include stream=True."}],"docstring":"Shared interface for the OpenAI Responses API (sync).\nImplements all official endpoints and features.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","name":"AsyncOpenAIResponsesInterface","data":{"name":"AsyncOpenAIResponsesInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","lineno":102,"bases":[],"methods":[{"name":"__init__","lineno":108,"docstring":null}],"docstring":"Shared interface for the OpenAI Responses API (async).\nImplements all official endpoints and features.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/llm/openai_responses_interface.py","lineno":140,"bases":[],"methods":[{"name":"__init__","lineno":146,"docstring":null},{"name":"create_response","lineno":156,"docstring":"Create a new response using the OpenAI Responses API.\nSupports retries for transient errors."},{"name":"retrieve_response","lineno":168,"docstring":null},{"name":"list_input_items","lineno":176,"docstring":null},{"name":"delete_response","lineno":186,"docstring":null},{"name":"cancel_response","lineno":194,"docstring":null},{"name":"stream_response","lineno":203,"docstring":"Stream a response (if supported by the API).\nYields Response objects as they arrive."},{"name":"get_status","lineno":226,"docstring":null},{"name":"wait_for_completion","lineno":234,"docstring":"Polls the response status until it is completed or failed, or timeout is reached."},{"name":"get_output_text","lineno":268,"docstring":null},{"name":"get_tool_calls","lineno":271,"docstring":null},{"name":"get_function_results","lineno":274,"docstring":null},{"name":"to_structured","lineno":279,"docstring":null},{"name":"list_responses","lineno":290,"docstring":"List all responses (paginated)."},{"name":"_with_retries","lineno":318,"docstring":null},{"name":"get_metadata","lineno":347,"docstring":null},{"name":"to_dict","lineno":352,"docstring":null},{"name":"call_endpoint","lineno":357,"docstring":"Generic method to call any OpenAI endpoint (for new/experimental APIs).\nArgs:\n    method: HTTP method (\"get\", \"post\", \"delete\", etc.)\n    path: API path (e.g., \"/responses/experimental\")\n    **kwargs: Request parameters (json, params, etc.)\nReturns:\n    API response (dict or object)\nExample:\n    >>> api.call_endpoint(\"post\", \"/responses/experimental\", json={...})"},{"name":"set_timeout","lineno":379,"docstring":"Set default timeout (seconds) for all requests."},{"name":"set_api_version","lineno":383,"docstring":"Set API version for all requests (if supported by OpenAI)."},{"name":"log_call","lineno":387,"docstring":"Decorator to log API calls."},{"name":"create_response_logged","lineno":403,"docstring":null},{"name":"batch_create_responses","lineno":407,"docstring":"Batch create responses (if OpenAI supports batch endpoint).\nArgs:\n    batch_params: List of parameter dicts for each response.\nReturns:\n    List of Response objects."}],"docstring":"Enhanced shared interface for the OpenAI Responses API.\nProvides sync/async, streaming, status polling, batch, tool/function, and structured output.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/messaging/notification_interface.py","name":"NotificationInterface","data":{"name":"NotificationInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/messaging/notification_interface.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"_init_client","lineno":29,"docstring":null},{"name":"send_email","lineno":61,"docstring":"Send an email using the configured provider. Supports CC, BCC, reply-to, attachments, and HTML.\nReturns structured result: {success, error, result}"},{"name":"batch_send_email","lineno":144,"docstring":"Batch send emails to multiple recipients. Each recipient is a dict with keys: to, cc, bcc, reply_to, etc.\nReturns a list of structured results."},{"name":"send_notification","lineno":218,"docstring":"Send a notification (Slack, Teams, SMS). Not implemented.\nReturns structured result."}],"docstring":"Authoritative shared interface for email services (SMTP, SES, SendGrid).\nSee official docs for each provider.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/orchestration/crewai_interface.py","name":"CrewAIInterface","data":{"name":"CrewAIInterface","file_path":"libs/opsvi-shared/opsvi_shared/interfaces/orchestration/crewai_interface.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"create_agent","lineno":34,"docstring":null},{"name":"create_task","lineno":47,"docstring":null},{"name":"create_crew","lineno":69,"docstring":null},{"name":"run_crew","lineno":83,"docstring":null},{"name":"register_tool","lineno":97,"docstring":null}],"docstring":"Authoritative shared interface for building, orchestrating, and executing CrewAI multi-agent workflows.\nSee: https://docs.crewai.com/","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/live_collaboration_integration.py","name":"LiveCollaborationBridge","data":{"name":"LiveCollaborationBridge","file_path":"libs/opsvi-shared/opsvi_shared/live_collaboration_integration.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"classify_intent","lineno":74,"docstring":"Classify user intent using SpecStory intelligence patterns"},{"name":"select_optimal_agent","lineno":137,"docstring":"Select optimal agent based on intent and intelligence patterns"},{"name":"prepare_agent_params","lineno":194,"docstring":"Prepare agent-specific parameters based on actual method signatures"},{"name":"analyze_collaboration_outcome","lineno":212,"docstring":"Analyze the collaboration outcome for learning"},{"name":"generate_learning_insight","lineno":229,"docstring":"Generate learning insights for future improvements"}],"docstring":"Bridge between SpecStory Intelligence and live Agent Hub","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","lineno":93,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when Brave MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","lineno":99,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/brave_mcp_search.py","lineno":105,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/context7_mcp_client_strict.py","name":"StrictContext7MCPClient","data":{"name":"StrictContext7MCPClient","file_path":"libs/opsvi-shared/opsvi_shared/mcp/context7_mcp_client_strict.py","lineno":9,"bases":["Context7MCPClient"],"methods":[{"name":"_parse_library_results","lineno":17,"docstring":null}],"docstring":"Strict, OAMAT-compliant Context7 MCP client.\n- Only accepts a valid JSON array of libraries from the LLM.\n- No fallback parsing. If the LLM does not return a valid array, raises an error.\n- Use for workflows that require strict, schema-enforced, no-fallback extraction.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/intelligent_relevance_scorer.py","name":"RelevanceEvaluation","data":{"name":"RelevanceEvaluation","file_path":"libs/opsvi-shared/opsvi_shared/mcp/intelligent_relevance_scorer.py","lineno":33,"bases":[],"methods":[],"docstring":"Result of intelligent relevance evaluation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/intelligent_relevance_scorer.py","name":"IntelligentRelevanceScorer","data":{"name":"IntelligentRelevanceScorer","file_path":"libs/opsvi-shared/opsvi_shared/mcp/intelligent_relevance_scorer.py","lineno":43,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":"Initialize the relevance scoring agent\n\nArgs:\n    llm_client: Optional LLM client, will create default if not provided"},{"name":"_create_default_llm_client","lineno":61,"docstring":"Create default LLM client for relevance scoring"},{"name":"evaluate_relevance","lineno":71,"docstring":"Evaluate the relevance of a URL using intelligent LLM analysis\n\nArgs:\n    query: Original search query\n    url: URL to evaluate\n    title: Page/result title\n    description: Page/result description\n    context: Optional additional context about the research\n\nReturns:\n    RelevanceEvaluation with score, reasoning, and analysis"},{"name":"_create_relevance_prompt","lineno":108,"docstring":"Create specialized prompt for relevance evaluation"},{"name":"_get_llm_evaluation","lineno":176,"docstring":"Get evaluation from LLM"},{"name":"_parse_evaluation_response","lineno":210,"docstring":"Parse and validate LLM evaluation response"},{"name":"_fallback_scoring","lineno":249,"docstring":"Fallback to basic scoring if LLM evaluation fails"}],"docstring":"Specialized agent for intelligent relevance scoring using LLM analysis\n\nThis agent evaluates search results using sophisticated prompts and\nsemantic understanding rather than simple keyword matching.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","lineno":85,"bases":["MCPError"],"methods":[],"docstring":"Raised when MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","lineno":91,"bases":["MCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","lineno":97,"bases":["MCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","name":"ToolNotFoundError","data":{"name":"ToolNotFoundError","file_path":"libs/opsvi-shared/opsvi_shared/mcp/mcp_integration_template.py","lineno":103,"bases":["MCPError"],"methods":[],"docstring":"Raised when requested tool is not available on server.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/mcp/research_workflow_tool.py","name":"ResearchWorkflowTool","data":{"name":"ResearchWorkflowTool","file_path":"libs/opsvi-shared/opsvi_shared/mcp/research_workflow_tool.py","lineno":107,"bases":[],"methods":[{"name":"__init__","lineno":112,"docstring":"Initialize the research workflow tool"},{"name":"_get_or_create_registry","lineno":127,"docstring":"Lazily create MCP registry if needed"},{"name":"_mock_search_results","lineno":145,"docstring":"Provide mock search results for demo purposes"},{"name":"_format_urls_for_agent","lineno":209,"docstring":"Format URLs for agent consumption with scores and metadata"},{"name":"extract_urls_from_text","lineno":257,"docstring":"Extract URLs from plain text search results"},{"name":"_extract_title_for_url","lineno":290,"docstring":"Extract title for a URL from surrounding text"},{"name":"_extract_description_for_url","lineno":312,"docstring":"Extract description for a URL from surrounding text"},{"name":"_generate_title_from_url","lineno":330,"docstring":"Generate a title from URL"},{"name":"present_urls_for_selection","lineno":539,"docstring":"Present URLs to the agent for selection\n\nArgs:\n    urls: List of SearchResultURL objects\n    max_display: Maximum number of URLs to display\n\nReturns:\n    Formatted string for agent consumption"},{"name":"compile_research_report","lineno":755,"docstring":"Compile a research report from the results\n\nArgs:\n    query: Original search query\n    urls: All found URLs\n    selected_indices: Selected URL indices\n    results: Scraping results\n\nReturns:\n    ResearchReport object"},{"name":"format_research_report","lineno":786,"docstring":"Format research report for presentation\n\nArgs:\n    report: ResearchReport object\n\nReturns:\n    Formatted report string"}],"docstring":"Research workflow tool for intelligent web research","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/api_keys_interface.py","name":"OpenAIAPIKeysInterface","data":{"name":"OpenAIAPIKeysInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/api_keys_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_api_key","lineno":12,"docstring":"Create an API key.\nPOST /v1/api_keys"},{"name":"list_api_keys","lineno":23,"docstring":"List all API keys.\nGET /v1/api_keys"},{"name":"retrieve_api_key","lineno":34,"docstring":"Retrieve an API key by ID.\nGET /v1/api_keys/{api_key_id}"},{"name":"delete_api_key","lineno":45,"docstring":"Delete an API key by ID.\nDELETE /v1/api_keys/{api_key_id}"}],"docstring":"Interface for OpenAI API Keys API.\nReference: https://platform.openai.com/docs/api-reference/api-keys","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/assistants_interface.py","name":"OpenAIAssistantsInterface","data":{"name":"OpenAIAssistantsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/assistants_interface.py","lineno":13,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_assistant","lineno":22,"docstring":null},{"name":"retrieve_assistant","lineno":38,"docstring":"Retrieve an assistant by ID.\nGET /v1/assistants/{assistant_id}"},{"name":"modify_assistant","lineno":53,"docstring":"Modify an assistant.\nPOST /v1/assistants/{assistant_id}"},{"name":"delete_assistant","lineno":68,"docstring":"Delete an assistant.\nDELETE /v1/assistants/{assistant_id}"},{"name":"list_assistants","lineno":83,"docstring":"List all assistants.\nGET /v1/assistants"},{"name":"create_thread","lineno":98,"docstring":"Create a thread.\nPOST /v1/threads"},{"name":"retrieve_thread","lineno":113,"docstring":"Retrieve a thread by ID.\nGET /v1/threads/{thread_id}"},{"name":"modify_thread","lineno":128,"docstring":"Modify a thread.\nPOST /v1/threads/{thread_id}"},{"name":"delete_thread","lineno":143,"docstring":"Delete a thread.\nDELETE /v1/threads/{thread_id}"},{"name":"list_threads","lineno":158,"docstring":"List all threads.\nGET /v1/threads"},{"name":"create_message","lineno":173,"docstring":"Create a message in a thread.\nPOST /v1/threads/{thread_id}/messages"},{"name":"list_messages","lineno":190,"docstring":"List all messages in a thread.\nGET /v1/threads/{thread_id}/messages"},{"name":"retrieve_message","lineno":205,"docstring":"Retrieve a message by ID.\nGET /v1/threads/{thread_id}/messages/{message_id}"},{"name":"run_thread","lineno":222,"docstring":"Run a thread.\nPOST /v1/threads/{thread_id}/runs"},{"name":"retrieve_run","lineno":239,"docstring":"Retrieve a run by ID.\nGET /v1/threads/{thread_id}/runs/{run_id}"},{"name":"list_runs","lineno":256,"docstring":"List all runs in a thread.\nGET /v1/threads/{thread_id}/runs"},{"name":"cancel_run","lineno":271,"docstring":"Cancel a run.\nPOST /v1/threads/{thread_id}/runs/{run_id}/cancel"},{"name":"list_run_steps","lineno":288,"docstring":"List all run steps in a run.\nGET /v1/threads/{thread_id}/runs/{run_id}/steps"},{"name":"retrieve_run_step","lineno":305,"docstring":"Retrieve a run step by ID.\nGET /v1/threads/{thread_id}/runs/{run_id}/steps/{step_id}"}],"docstring":"Interface for OpenAI Assistants API (OpenAI Python SDK >=1.0.0).\nOnly approved models compatible with Assistants API are allowed: gpt-4.1, gpt-4.1-mini, gpt-4.1-nano, o4-mini.\nAll methods use self.client.beta.assistants, self.client.beta.threads, etc.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/audio_interface.py","name":"OpenAIAudioInterface","data":{"name":"OpenAIAudioInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/audio_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_transcription","lineno":17,"docstring":"Transcribe audio into text.\nPOST /v1/audio/transcriptions"},{"name":"create_translation","lineno":28,"docstring":"Translate audio into English.\nPOST /v1/audio/translations"},{"name":"create_speech","lineno":39,"docstring":"Generate spoken audio from text.\nPOST /v1/audio/speech"}],"docstring":"Interface for OpenAI Audio API (Whisper, TTS).\nReference: https://platform.openai.com/docs/api-reference/audio\n\nThis interface provides both synchronous and asynchronous methods for all audio endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/base.py","name":"OpenAIBaseInterface","data":{"name":"OpenAIBaseInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/base.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":null},{"name":"_handle_error","lineno":33,"docstring":null},{"name":"_get_headers","lineno":37,"docstring":null}],"docstring":"Base class for all OpenAI API interfaces.\nHandles authentication, error handling, and SDK/raw HTTP selection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/batch_interface.py","name":"OpenAIBatchInterface","data":{"name":"OpenAIBatchInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/batch_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_batch","lineno":14,"docstring":"Create a batch.\nPOST /v1/batches"},{"name":"retrieve_batch","lineno":25,"docstring":"Retrieve a batch by ID.\nGET /v1/batches/{batch_id}"},{"name":"list_batches","lineno":36,"docstring":"List all batches.\nGET /v1/batches"},{"name":"cancel_batch","lineno":47,"docstring":"Cancel a batch.\nPOST /v1/batches/{batch_id}/cancel"}],"docstring":"Interface for OpenAI Batch API.\nReference: https://platform.openai.com/docs/api-reference/batch","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/chat_completions_interface.py","name":"OpenAIChatCompletionsInterface","data":{"name":"OpenAIChatCompletionsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/chat_completions_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_chat_completion","lineno":15,"docstring":"Create a chat completion for the provided conversation messages and parameters.\nPOST /v1/chat/completions"}],"docstring":"Interface for OpenAI Chat Completions API.\nReference: https://platform.openai.com/docs/api-reference/chat\n\nThis interface provides both synchronous and asynchronous methods for all chat completions endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/completions_interface.py","name":"OpenAICompletionsInterface","data":{"name":"OpenAICompletionsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/completions_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_completion","lineno":15,"docstring":"Create a completion for the provided prompt and parameters.\nPOST /v1/completions"}],"docstring":"Interface for OpenAI Completions API (legacy).\nReference: https://platform.openai.com/docs/api-reference/completions\n\nThis interface provides both synchronous and asynchronous methods for all completions endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/embeddings_interface.py","name":"OpenAIEmbeddingsInterface","data":{"name":"OpenAIEmbeddingsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/embeddings_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"__init__","lineno":17,"docstring":null},{"name":"create_embedding","lineno":21,"docstring":"Generate an embedding vector for the input text.\nPOST /v1/embeddings"}],"docstring":"Interface for OpenAI Embeddings API (openai>=1.0.0).\nReference: https://platform.openai.com/docs/api-reference/embeddings\n\nThis interface provides both synchronous and asynchronous methods for all embeddings endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/files_interface.py","name":"OpenAIFilesInterface","data":{"name":"OpenAIFilesInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/files_interface.py","lineno":9,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_files","lineno":15,"docstring":"List all files.\nGET /v1/files"},{"name":"upload_file","lineno":26,"docstring":"Upload a file for a specific purpose.\nPOST /v1/files"},{"name":"delete_file","lineno":40,"docstring":"Delete a file by ID.\nDELETE /v1/files/{file_id}"},{"name":"retrieve_file","lineno":51,"docstring":"Retrieve file metadata by ID.\nGET /v1/files/{file_id}"},{"name":"retrieve_file_content","lineno":62,"docstring":"Retrieve the content of a file by ID.\nGET /v1/files/{file_id}/content"}],"docstring":"Interface for OpenAI Files API.\nReference: https://platform.openai.com/docs/api-reference/files","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/fine_tuning_interface.py","name":"OpenAIFineTuningInterface","data":{"name":"OpenAIFineTuningInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/fine_tuning_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_job","lineno":15,"docstring":"Create a fine-tuning job.\nPOST /v1/fine_tuning/jobs"},{"name":"list_jobs","lineno":28,"docstring":"List all fine-tuning jobs.\nGET /v1/fine_tuning/jobs"},{"name":"retrieve_job","lineno":39,"docstring":"Retrieve a fine-tuning job by ID.\nGET /v1/fine_tuning/jobs/{fine_tuning_job_id}"},{"name":"list_events","lineno":50,"docstring":"List events for a fine-tuning job.\nGET /v1/fine_tuning/jobs/{fine_tuning_job_id}/events"},{"name":"cancel_job","lineno":61,"docstring":"Cancel a fine-tuning job.\nPOST /v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel"},{"name":"list_fine_tuned_models","lineno":72,"docstring":"List all fine-tuned models.\nGET /v1/models (filtered for fine-tuned models)"}],"docstring":"Interface for OpenAI Fine-tuning API.\nReference: https://platform.openai.com/docs/api-reference/fine-tuning\n\nThis interface provides both synchronous and asynchronous methods for all fine-tuning endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/images_interface.py","name":"OpenAIImagesInterface","data":{"name":"OpenAIImagesInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/images_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_image","lineno":17,"docstring":"Generate an image from a prompt.\nPOST /v1/images/generations"},{"name":"edit_image","lineno":28,"docstring":"Edit an image based on a prompt and a mask.\nPOST /v1/images/edits"},{"name":"create_image_variation","lineno":43,"docstring":"Create a variation of a given image.\nPOST /v1/images/variations"}],"docstring":"Interface for OpenAI Images API (DALL·E).\nReference: https://platform.openai.com/docs/api-reference/images\n\nThis interface provides both synchronous and asynchronous methods for all images endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/models_interface.py","name":"OpenAIModelsInterface","data":{"name":"OpenAIModelsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/models_interface.py","lineno":7,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_models","lineno":16,"docstring":"List all available models.\nGET /v1/models"},{"name":"retrieve_model","lineno":27,"docstring":"Retrieve a specific model by ID.\nGET /v1/models/{model}"}],"docstring":"Interface for OpenAI Models API.\nReference: https://platform.openai.com/docs/api-reference/models\n\nThis interface provides both synchronous and asynchronous methods for all models endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/moderations_interface.py","name":"OpenAIModerationsInterface","data":{"name":"OpenAIModerationsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/moderations_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_moderation","lineno":12,"docstring":"Classify if text violates OpenAI's content policy.\nPOST /v1/moderations"}],"docstring":"Interface for OpenAI Moderations API.\nReference: https://platform.openai.com/docs/api-reference/moderations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/openai_responses_client.py","name":"OpenAIResponsesClient","data":{"name":"OpenAIResponsesClient","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/openai_responses_client.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"get_structured_response","lineno":28,"docstring":"Get a structured (JSON) response from the OpenAI Responses API.\nArgs:\n    prompt: The user prompt.\n    model: The model to use (must be in allowed list).\n    tools: Optional tool definitions.\n    kwargs: Additional parameters for the API.\nReturns:\n    Dict with structured response fields.\nRaises:\n    ValueError if model is not allowed."}],"docstring":"Standards-compliant client for OpenAI Responses API.\nEnforces allowed models, structured output, and unified logging.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/organizations_interface.py","name":"OpenAIOrganizationsInterface","data":{"name":"OpenAIOrganizationsInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/organizations_interface.py","lineno":4,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_organizations","lineno":10,"docstring":"List all organizations.\nGET /v1/organizations"},{"name":"retrieve_organization","lineno":21,"docstring":"Retrieve an organization by ID.\nGET /v1/organizations/{organization_id}"},{"name":"list_memberships","lineno":32,"docstring":"List all memberships in an organization.\nGET /v1/organizations/{organization_id}/memberships"}],"docstring":"Interface for OpenAI Organizations API.\nReference: https://platform.openai.com/docs/api-reference/organizations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/responses_interface.py","lineno":9,"bases":["OpenAIBaseInterface"],"methods":[{"name":"__init__","lineno":15,"docstring":null},{"name":"create_response","lineno":21,"docstring":"Create a response using the OpenAI Responses API.\nSupports structured outputs (JSON schema), reasoning, and conversation state.\nArgs:\n    model: Model name (e.g., 'gpt-4.1-mini', 'o3', etc.)\n    input: List of dicts (role/content) or string\n    instructions: Optional system instructions\n    text_format: None, 'json_object', or dict for JSON schema (legacy, prefer response_format)\n    response_format: dict, e.g. {\"type\": \"json_object\"} (preferred for structured output)\n    reasoning: dict, e.g. {\"effort\": \"medium\", \"summary\": \"auto\"}\n    previous_response_id: str, for conversation state\n    store: bool, whether to store response\n    max_output_tokens: int, output token limit\n    debug: bool, enable debug logging\nReturns:\n    dict: API response"},{"name":"create_response_stream","lineno":97,"docstring":"Create a streaming response (POST /responses with stream=True)\nYields events as they arrive."},{"name":"parse_json_output","lineno":116,"docstring":"Try to parse output_text as JSON. Returns dict/list or None if parsing fails."},{"name":"retrieve_response","lineno":127,"docstring":"Retrieve a response by ID (GET /responses/{response_id})"},{"name":"list_input_items","lineno":147,"docstring":"List input items for a response (GET /responses/{response_id}/input_items)"},{"name":"delete_response","lineno":168,"docstring":"Delete a response by ID (DELETE /responses/{response_id})"},{"name":"cancel_response","lineno":184,"docstring":"Cancel a response (POST /responses/{response_id}/cancel)"}],"docstring":"Interface for OpenAI Responses API (Beta).\nSupports structured outputs, reasoning, and conversation state per latest OpenAI docs.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/usage_interface.py","name":"OpenAIUsageInterface","data":{"name":"OpenAIUsageInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/usage_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"retrieve_usage","lineno":12,"docstring":"Retrieve usage statistics.\nGET /v1/dashboard/billing/usage"},{"name":"retrieve_subscription","lineno":23,"docstring":"Retrieve subscription information.\nGET /v1/dashboard/billing/subscription"}],"docstring":"Interface for OpenAI Usage API.\nReference: https://platform.openai.com/docs/api-reference/usage","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/vector_stores_interface.py","name":"OpenAIVectorStoresInterface","data":{"name":"OpenAIVectorStoresInterface","file_path":"libs/opsvi-shared/opsvi_shared/openai_interfaces/vector_stores_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_vector_store","lineno":14,"docstring":"Create a vector store.\nPOST /v1/vector_stores"},{"name":"retrieve_vector_store","lineno":25,"docstring":"Retrieve a vector store by ID.\nGET /v1/vector_stores/{vector_store_id}"},{"name":"list_vector_stores","lineno":36,"docstring":"List all vector stores.\nGET /v1/vector_stores"},{"name":"update_vector_store","lineno":47,"docstring":"Update a vector store.\nPOST /v1/vector_stores/{vector_store_id}"},{"name":"delete_vector_store","lineno":58,"docstring":"Delete a vector store.\nDELETE /v1/vector_stores/{vector_store_id}"},{"name":"list_files","lineno":69,"docstring":"List files in a vector store.\nGET /v1/vector_stores/{vector_store_id}/files"},{"name":"add_file","lineno":80,"docstring":"Add a file to a vector store.\nPOST /v1/vector_stores/{vector_store_id}/files"},{"name":"remove_file","lineno":91,"docstring":"Remove a file from a vector store.\nDELETE /v1/vector_stores/{vector_store_id}/files/{file_id}"},{"name":"list_file_batches","lineno":102,"docstring":"List file batches in a vector store.\nGET /v1/vector_stores/{vector_store_id}/file_batches"},{"name":"retrieve_file_batch","lineno":113,"docstring":"Retrieve a file batch by ID.\nGET /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}"}],"docstring":"Interface for OpenAI Vector Stores API (Beta).\nReference: https://platform.openai.com/docs/api-reference/vector-stores","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/api_spec_generator.py","name":"APISpecGenerator","data":{"name":"APISpecGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/api_spec_generator.py","lineno":48,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initialize the APISpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file."},{"name":"generate_api_specs","lineno":94,"docstring":"Generate comprehensive API specifications.\n\nArgs:\n    input_data: APISpecInput containing interface design and requirements.\n\nReturns:\n    APISpecOutput with generated specifications."}],"docstring":"Main API specification generator using OpenAI O3 models.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    config_manager: ConfigManager for loading configuration.\n    client: OpenAI client instance.\n    input_loader: UniversalInputLoader for reading input files.\n    directory_manager: DirectoryManager for managing directories.\n    file_generator: FileGenerator for writing output files.\n    prompt_builder: PromptBuilder for constructing model prompts.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_designer.py","name":"ArchitectureAnalyzer","data":{"name":"ArchitectureAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_designer.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":56,"docstring":"Initialize the architecture analyzer with a logger."},{"name":"analyze_requirements","lineno":60,"docstring":"Analyze system requirements and extract architectural insights.\n\nArgs:\n    requirements_text: Natural language system requirements\n\nReturns:\n    A dict containing architectural analysis"}],"docstring":"Analyzes system requirements and generates architectural insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_designer.py","name":"ArchitectureDesigner","data":{"name":"ArchitectureDesigner","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_designer.py","lineno":143,"bases":[],"methods":[{"name":"__init__","lineno":146,"docstring":"Initialize the architecture designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_setup_directories","lineno":167,"docstring":"Create required output directories using DirectoryManager."},{"name":"design_system_architecture","lineno":177,"docstring":"Design system architecture based on input requirements.\n\nArgs:\n    input_data: ArchitectureInput instance\n\nReturns:\n    ArchitectureOutput instance with results"}],"docstring":"Main architecture designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_validator.py","name":"ArchitectureValidator","data":{"name":"ArchitectureValidator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/architecture_validator.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize the architecture validator."},{"name":"_create_directories","lineno":75,"docstring":"Create necessary output directories."},{"name":"validate_architecture","lineno":88,"docstring":"Validate comprehensive architecture design."},{"name":"check_consistency","lineno":124,"docstring":"Check architecture consistency."},{"name":"assess_scalability","lineno":139,"docstring":"Assess architecture scalability."},{"name":"verify_security","lineno":154,"docstring":"Verify architecture security."},{"name":"_perform_comprehensive_validation","lineno":174,"docstring":"Perform comprehensive architecture validation."},{"name":"_generate_validation_report","lineno":199,"docstring":"Generate comprehensive validation report using O3 model."},{"name":"_build_validation_prompt","lineno":229,"docstring":"Build comprehensive prompt for validation report generation."},{"name":"_create_validation_files","lineno":236,"docstring":"Create validation report files."},{"name":"_convert_to_markdown","lineno":263,"docstring":"Convert validation report to Markdown format."},{"name":"_check_naming_consistency","lineno":304,"docstring":"Check naming consistency across architecture."},{"name":"_check_pattern_consistency","lineno":316,"docstring":"Check pattern consistency across architecture."},{"name":"_check_interface_consistency","lineno":326,"docstring":"Check interface consistency across architecture."},{"name":"_check_data_flow_consistency","lineno":336,"docstring":"Check data flow consistency across architecture."},{"name":"_assess_horizontal_scaling","lineno":346,"docstring":"Assess horizontal scaling capabilities."},{"name":"_assess_vertical_scaling","lineno":358,"docstring":"Assess vertical scaling capabilities."},{"name":"_identify_performance_bottlenecks","lineno":368,"docstring":"Identify performance bottlenecks."},{"name":"_generate_scaling_recommendations","lineno":374,"docstring":"Generate scaling recommendations."},{"name":"_verify_authentication","lineno":384,"docstring":"Verify authentication mechanisms."},{"name":"_verify_authorization","lineno":394,"docstring":"Verify authorization mechanisms."},{"name":"_verify_encryption","lineno":404,"docstring":"Verify encryption mechanisms."},{"name":"_identify_security_vulnerabilities","lineno":412,"docstring":"Identify security vulnerabilities."},{"name":"_generate_security_recommendations","lineno":418,"docstring":"Generate security recommendations."},{"name":"_assess_performance","lineno":428,"docstring":"Assess performance characteristics."},{"name":"_assess_maintainability","lineno":438,"docstring":"Assess maintainability characteristics."},{"name":"_assess_reliability","lineno":448,"docstring":"Assess reliability characteristics."},{"name":"_check_compliance","lineno":458,"docstring":"Check compliance with standards."}],"docstring":"Main architecture validator class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/ast_analyzer.py","name":"ASTAnalyzer","data":{"name":"ASTAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/ast_analyzer.py","lineno":93,"bases":[],"methods":[{"name":"__init__","lineno":101,"docstring":"Initialize the AST analyzer and its logger."},{"name":"analyze_file","lineno":134,"docstring":"Analyze a single Python file.\n\nArgs:\n    file_path: Path to the Python file to analyze\n\nReturns:\n    FileAnalysis: Complete analysis of the file"},{"name":"_extract_import_patterns","lineno":188,"docstring":"Extract import patterns from AST."},{"name":"_classify_import","lineno":219,"docstring":"Classify an import as absolute, relative, standard_library, or third_party."},{"name":"_extract_class_patterns","lineno":232,"docstring":"Extract class patterns from AST."},{"name":"_extract_method_patterns","lineno":273,"docstring":"Extract method patterns from AST."},{"name":"_extract_error_handling_patterns","lineno":321,"docstring":"Extract error handling patterns from AST."},{"name":"_extract_logging_patterns","lineno":351,"docstring":"Extract logging patterns from AST."},{"name":"_has_main_function","lineno":384,"docstring":"Check if file has a main function."},{"name":"_has_setup_logger","lineno":391,"docstring":"Check if file has setup_logger call."},{"name":"_uses_absolute_imports","lineno":403,"docstring":"Check if file uses absolute imports."},{"name":"_uses_shared_utilities","lineno":407,"docstring":"Check if file uses shared utilities."},{"name":"_get_attribute_name","lineno":411,"docstring":"Get the full name of an attribute node."},{"name":"_has_logging_in_node","lineno":419,"docstring":"Check if a node contains logging calls."},{"name":"_has_raise_in_node","lineno":431,"docstring":"Check if a node contains raise statements."}],"docstring":"Performs deep structural analysis of Python code using AST.\n\nExtracts patterns for imports, classes, methods, error handling,\nlogging, and overall code organization.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/auto_rules_generator.py","name":"AutoRulesGenerator","data":{"name":"AutoRulesGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/auto_rules_generator.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":"Initialize the auto rules generator."},{"name":"generate_rules","lineno":90,"docstring":"Generate comprehensive rules based on codebase analysis.\n\nArgs:\n    validate_only: If True, only validate existing rules without generating new ones\n\nReturns:\n    AutoRulesGenerationResult: Complete result of the generation process"},{"name":"_perform_ast_analysis","lineno":175,"docstring":"Perform AST analysis on all discovered files."},{"name":"_generate_output_files","lineno":198,"docstring":"Generate output files with the analysis results."},{"name":"_generate_updated_project_rules","lineno":299,"docstring":"Generate updated project_rules.md with new rules."},{"name":"_generate_updated_universal_rules","lineno":365,"docstring":"Generate updated universal_rules.md with new rules."},{"name":"_format_rules_for_markdown","lineno":434,"docstring":"Format rules for markdown output."},{"name":"_generate_summary","lineno":505,"docstring":"Generate a summary of the generation process."},{"name":"_generate_recommendations","lineno":533,"docstring":"Generate recommendations based on validation results."}],"docstring":"Main orchestrator for the auto rules generation system.\n\nCoordinates all components to generate comprehensive, current rules\nbased on actual codebase patterns.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/bulletproofing_orchestrator.py","name":"BulletproofingOrchestrator","data":{"name":"BulletproofingOrchestrator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/bulletproofing_orchestrator.py","lineno":47,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":"Initialize the bulletproofing orchestrator."},{"name":"run_comprehensive_validation","lineno":63,"docstring":"Run comprehensive bulletproofing validation."},{"name":"_check_performance_thresholds","lineno":139,"docstring":"Check if performance meets thresholds."},{"name":"_check_recovery_capabilities","lineno":156,"docstring":"Check if recovery capabilities are adequate."},{"name":"_generate_recommendations","lineno":168,"docstring":"Generate recommendations based on validation results."},{"name":"enable_git_hooks","lineno":214,"docstring":"Enable git hooks only if system is bulletproof."},{"name":"disable_git_hooks","lineno":238,"docstring":"Disable git hooks for safety."},{"name":"run_dry_run","lineno":255,"docstring":"Run bulletproofing validation in dry-run mode."},{"name":"generate_comprehensive_report","lineno":272,"docstring":"Generate a comprehensive bulletproofing report."},{"name":"setup_default_recovery_strategies","lineno":331,"docstring":"Setup default recovery strategies for common error types."},{"name":"cleanup_old_data","lineno":403,"docstring":"Clean up old performance and backup data."}],"docstring":"Main orchestrator for bulletproofing the auto rules generation system.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/rule_generator_engine.py","name":"RuleGeneratorEngine","data":{"name":"RuleGeneratorEngine","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/rule_generator_engine.py","lineno":69,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":"Initialize the rule generator engine."},{"name":"generate_rules","lineno":117,"docstring":"Generate rules based on pattern analysis.\n\nArgs:\n    pattern_analysis: Complete pattern analysis of the codebase.\n\nReturns:\n    RuleGenerationResult: Generated rules and metadata."},{"name":"_generate_rule_candidates","lineno":145,"docstring":"Generate initial rule candidates from pattern analysis."},{"name":"_generate_import_rules","lineno":164,"docstring":"Generate rules from import patterns."},{"name":"_generate_class_rules","lineno":199,"docstring":"Generate rules from class patterns."},{"name":"_generate_method_rules","lineno":244,"docstring":"Generate rules from method patterns."},{"name":"_generate_error_handling_rules","lineno":291,"docstring":"Generate rules from error handling patterns."},{"name":"_generate_logging_rules","lineno":339,"docstring":"Generate rules from logging patterns."},{"name":"_generate_violation_rules","lineno":386,"docstring":"Generate rules from violation patterns."},{"name":"_enhance_rules_with_o3","lineno":419,"docstring":"Use O3 model to enhance and validate rules."},{"name":"_create_rule_enhancement_prompt","lineno":436,"docstring":"Create prompt for O3 model to enhance a rule."},{"name":"_apply_o3_enhancements","lineno":460,"docstring":"Apply O3 model enhancements to a rule."},{"name":"_resolve_rule_conflicts","lineno":477,"docstring":"Resolve conflicts between rules."},{"name":"_rules_conflict","lineno":488,"docstring":"Check if two rules conflict."},{"name":"_create_rule_hierarchy","lineno":496,"docstring":"Create rule hierarchy by type."},{"name":"_calculate_confidence_scores","lineno":509,"docstring":"Calculate adjusted confidence scores for rules."},{"name":"_generate_rule_recommendations","lineno":525,"docstring":"Generate recommendations for rule implementation."}],"docstring":"Uses O3ModelGenerator to generate intelligent rules based on pattern analysis.\n\nAnalyzes pattern data, generates rule candidates, enhances them via O3 model,\nresolves conflicts, organizes hierarchy, and produces implementation recommendations.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    model_generator: O3ModelGenerator instance for interfacing with the O3 model.\n    rule_templates: Templates for rule text generation by pattern type and severity.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/rule_validator.py","name":"ValidationReport","data":{"name":"ValidationReport","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/auto_rules_generation/rule_validator.py","lineno":40,"bases":[],"methods":[],"docstring":"Complete validation report.\n\nAttributes:\n    total_rules: Total number of rules processed.\n    valid_rules: Count of rules that passed validation.\n    invalid_rules: Count of rules that failed validation.\n    average_confidence: Average confidence score across all rules.\n    validation_results: Mapping from rule name to its ValidationResult.\n    overall_issues: Consolidated list of all issues found.\n    overall_warnings: Consolidated list of all warnings generated.\n    rollback_recommendations: Actions suggested for rollback scenarios.\n    safety_score: Overall safety score computed from valid rules.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/brainstorming_tool.py","name":"BrainstormingProcessor","data":{"name":"BrainstormingProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/brainstorming_tool.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize the brainstorming processor."},{"name":"run","lineno":71,"docstring":"Run a brainstorming session end-to-end with enhanced conversation context.\n\nArgs:\n    input_data: Structured input for brainstorming\n\nReturns:\n    BrainstormingOutput with results and metadata"},{"name":"_build_enhanced_brainstorming_prompt","lineno":170,"docstring":"Build enhanced prompt with conversation context."},{"name":"_process_and_categorize_ideas","lineno":220,"docstring":"Process and categorize generated ideas."},{"name":"_prioritize_ideas","lineno":242,"docstring":"Prioritize ideas based on impact and feasibility."},{"name":"_extract_categories","lineno":267,"docstring":"Extract unique categories from ideas."}],"docstring":"Main processor for brainstorming using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"ProjectAnalyzer","data":{"name":"ProjectAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":47,"docstring":"Initialize ProjectAnalyzer with O3Logger."},{"name":"analyze_project","lineno":51,"docstring":"Analyze project for CI/CD requirements.\n\nArgs:\n    project_path: Path to the project directory\n\nReturns:\n    Dictionary containing project analysis"},{"name":"_detect_project_type","lineno":79,"docstring":"Detect the type of project."},{"name":"_analyze_dependencies","lineno":103,"docstring":"Analyze project dependencies."},{"name":"_detect_testing_framework","lineno":134,"docstring":"Detect testing frameworks used in the project."},{"name":"_detect_build_tools","lineno":171,"docstring":"Detect build tools used in the project."},{"name":"_detect_deployment_targets","lineno":207,"docstring":"Detect deployment targets from configuration files."},{"name":"_detect_environment_configs","lineno":243,"docstring":"Detect environment configurations."},{"name":"_detect_security_requirements","lineno":263,"docstring":"Detect security requirements."},{"name":"_detect_performance_requirements","lineno":290,"docstring":"Detect performance requirements."}],"docstring":"Analyzes project structure and requirements for CI/CD configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"GitHubActionsGenerator","data":{"name":"GitHubActionsGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":312,"bases":[],"methods":[{"name":"__init__","lineno":315,"docstring":"Initialize GitHubActionsGenerator with OpenAI client and logger."},{"name":"generate_workflow","lineno":321,"docstring":"Generate GitHub Actions workflow.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated GitHub Actions workflow content"},{"name":"_generate_fallback_workflow","lineno":362,"docstring":"Generate a fallback GitHub Actions workflow."}],"docstring":"Generates GitHub Actions workflows using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"GitLabCIGenerator","data":{"name":"GitLabCIGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":374,"bases":[],"methods":[{"name":"__init__","lineno":377,"docstring":"Initialize GitLabCIGenerator with OpenAI client and logger."},{"name":"generate_pipeline","lineno":383,"docstring":"Generate GitLab CI pipeline.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated GitLab CI pipeline content"},{"name":"_generate_fallback_pipeline","lineno":424,"docstring":"Generate a fallback GitLab CI pipeline."}],"docstring":"Generates GitLab CI pipelines using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"JenkinsGenerator","data":{"name":"JenkinsGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":436,"bases":[],"methods":[{"name":"__init__","lineno":439,"docstring":"Initialize JenkinsGenerator with OpenAI client and logger."},{"name":"generate_pipeline","lineno":445,"docstring":"Generate Jenkins pipeline.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated Jenkins pipeline content"},{"name":"_generate_fallback_pipeline","lineno":486,"docstring":"Generate a fallback Jenkins pipeline."}],"docstring":"Generates Jenkins pipeline configurations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"CICDPipelineGenerator","data":{"name":"CICDPipelineGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":498,"bases":[],"methods":[{"name":"__init__","lineno":501,"docstring":"Initialize CICDPipelineGenerator.\n\nArgs:\n    config: CICDPipelineGeneratorInput schema instance"},{"name":"generate_pipelines","lineno":526,"docstring":"Generate CI/CD pipelines for the project.\n\nReturns:\n    CICDPipelineGeneratorOutput with generated pipelines"},{"name":"_write_pipeline_files","lineno":581,"docstring":"Write pipeline files to the project directory.\n\nArgs:\n    pipelines: Mapping of platform to pipeline content\n    project_path: Root path of the project\n\nReturns:\n    List of written file paths"}],"docstring":"Main CI/CD pipeline generator orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","name":"SecurityAnalyzer","data":{"name":"SecurityAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":195,"bases":[],"methods":[{"name":"__init__","lineno":198,"docstring":"Initialize SecurityAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_security","lineno":211,"docstring":"Analyze code for security vulnerabilities.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    List of security issues found"}],"docstring":"Analyzes code for security vulnerabilities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","name":"QualityAnalyzer","data":{"name":"QualityAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":250,"bases":[],"methods":[{"name":"__init__","lineno":253,"docstring":"Initialize QualityAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_quality","lineno":266,"docstring":"Analyze code quality and adherence to best practices.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    Dictionary containing quality analysis"}],"docstring":"Analyzes code quality and best practices.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","name":"PerformanceAnalyzer","data":{"name":"PerformanceAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":305,"bases":[],"methods":[{"name":"__init__","lineno":308,"docstring":"Initialize PerformanceAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_performance","lineno":321,"docstring":"Analyze code for performance issues.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    List of performance issues found"}],"docstring":"Analyzes code for performance issues.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","name":"CodeReviewer","data":{"name":"CodeReviewer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":362,"bases":[],"methods":[{"name":"__init__","lineno":365,"docstring":"Initialize CodeReviewer.\n\nArgs:\n    config_path: Optional path to configuration file\n\nAttributes:\n    config_manager: ConfigManager instance\n    logger: O3Logger instance\n    parser: CodeParser instance\n    security_analyzer: SecurityAnalyzer instance\n    quality_analyzer: QualityAnalyzer instance\n    performance_analyzer: PerformanceAnalyzer instance\n    directory_manager: DirectoryManager instance\n    file_generator: FileGenerator instance\n    output_formatter: OutputFormatter instance"},{"name":"_setup_directories","lineno":394,"docstring":"Create necessary directories for reports and logs."},{"name":"review_code","lineno":400,"docstring":"Perform comprehensive code review.\n\nArgs:\n    input_data: Code review input data\n\nReturns:\n    Code review output with results"},{"name":"_generate_comprehensive_review","lineno":471,"docstring":"Generate comprehensive review summary.\n\nArgs:\n    file_info: Parsed file information\n    security_issues: Found security issues\n    quality_analysis: Quality analysis results\n    performance_issues: Found performance issues\n    input_data: Input data\n\nReturns:\n    Comprehensive review data structure"},{"name":"_generate_recommendations","lineno":536,"docstring":"Generate actionable recommendations.\n\nArgs:\n    security_issues: Security issues found\n    quality_analysis: Quality analysis results\n    performance_issues: Performance issues found\n\nReturns:\n    List of recommendations"},{"name":"_identify_priority_actions","lineno":579,"docstring":"Identify priority actions to take.\n\nArgs:\n    security_issues: Security issues found\n    quality_analysis: Quality analysis results\n    performance_issues: Performance issues found\n\nReturns:\n    List of priority actions"},{"name":"_save_review_report","lineno":625,"docstring":"Save review report to file.\n\nArgs:\n    review: Review data\n    file_path: Original file path\n\nReturns:\n    Path to saved report"},{"name":"_get_current_timestamp","lineno":645,"docstring":"Get current timestamp string.\n\nReturns:\n    Current timestamp in 'YYYY-MM-DD HH:MM:SS' format"}],"docstring":"Main class for code review and analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/component_designer.py","name":"ComponentAnalyzer","data":{"name":"ComponentAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/component_designer.py","lineno":87,"bases":[],"methods":[{"name":"__init__","lineno":90,"docstring":"Initialize the component analyzer."},{"name":"analyze_component_requirements","lineno":94,"docstring":"Analyze component requirements and extract design insights.\n\nArgs:\n    component_requirements: Natural language component requirements\n    architecture_design: Overall architecture design\n\nReturns:\n    Dictionary containing component analysis"},{"name":"_analyze_component_boundaries","lineno":145,"docstring":"Analyze component boundaries and responsibilities."},{"name":"_extract_interface_requirements","lineno":220,"docstring":"Extract interface requirements from component requirements."},{"name":"_extract_dependency_requirements","lineno":286,"docstring":"Extract dependency requirements from component requirements."},{"name":"_analyze_performance_requirements","lineno":349,"docstring":"Analyze performance requirements for the component."},{"name":"_analyze_security_requirements","lineno":386,"docstring":"Analyze security requirements for the component."},{"name":"_extract_testing_requirements","lineno":423,"docstring":"Extract testing requirements from component requirements."},{"name":"_analyze_deployment_requirements","lineno":453,"docstring":"Analyze deployment requirements for the component."},{"name":"_estimate_complexity","lineno":483,"docstring":"Estimate component complexity based on requirements."}],"docstring":"Analyzes component requirements and generates design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/component_designer.py","name":"ComponentDesigner","data":{"name":"ComponentDesigner","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/component_designer.py","lineno":611,"bases":[],"methods":[{"name":"__init__","lineno":614,"docstring":"Initialize the component designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":641,"docstring":"Create necessary output directories."},{"name":"design_components","lineno":655,"docstring":"Design comprehensive component specifications based on requirements.\n\nArgs:\n    input_data: Component design input specification\n\nReturns:\n    Component design output with specifications and diagrams"},{"name":"define_interfaces","lineno":710,"docstring":"Define detailed interfaces for components.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    Detailed interface definitions"},{"name":"specify_dependencies","lineno":735,"docstring":"Specify detailed dependencies for components.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    Detailed dependency specifications"},{"name":"generate_component_diagrams","lineno":764,"docstring":"Generate comprehensive component diagrams.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    List of generated diagram file paths"},{"name":"_generate_with_o3_model","lineno":802,"docstring":"Generate component specifications using O3 model.\n\nArgs:\n    input_data: Component input specification\n    component_analysis: Analyzed component requirements\n\nReturns:\n    Generated component specifications"},{"name":"_build_prompt","lineno":842,"docstring":"Build comprehensive prompt for component design.\n\nArgs:\n    input_data: Component input specification\n    component_analysis: Analyzed component requirements\n\nReturns:\n    Formatted prompt for O3 model"},{"name":"_generate_diagrams","lineno":858,"docstring":"Generate visual diagrams for the component design.\n\nArgs:\n    component_specifications: Component specifications\n    input_data: Component input specification\n\nReturns:\n    List of generated diagram file paths"},{"name":"_create_component_files","lineno":873,"docstring":"Create component specification files.\n\nArgs:\n    component_specifications: Component specifications\n    input_data: Component input specification\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":909,"docstring":"Convert component specifications to Markdown format."},{"name":"_define_rest_interfaces","lineno":944,"docstring":"Define REST interfaces for components."},{"name":"_define_message_interfaces","lineno":959,"docstring":"Define message interfaces for components."},{"name":"_define_database_interfaces","lineno":974,"docstring":"Define database interfaces for components."},{"name":"_define_event_interfaces","lineno":989,"docstring":"Define event interfaces for components."},{"name":"_specify_external_dependencies","lineno":1004,"docstring":"Specify external dependencies for components."},{"name":"_specify_internal_dependencies","lineno":1018,"docstring":"Specify internal dependencies for components."},{"name":"_specify_infrastructure_dependencies","lineno":1032,"docstring":"Specify infrastructure dependencies for components."},{"name":"_specify_configuration_dependencies","lineno":1046,"docstring":"Specify configuration dependencies for components."}],"docstring":"Main component designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/performance_module.py","name":"PerformanceManager","data":{"name":"PerformanceManager","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/performance_module.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize PerformanceManager.\n\nArgs:\n    max_workers (int): Maximum threads for concurrent execution (default: 10)\n    cache_maxsize (int): Maximum cached responses (default: 128)"},{"name":"_update_metrics","lineno":73,"docstring":"Update performance metrics in a thread-safe manner."},{"name":"_evict_if_needed","lineno":85,"docstring":"Evict oldest cache entry if cache exceeds max size."},{"name":"_make_key","lineno":95,"docstring":"Create a unique key for the input data for caching purposes."},{"name":"clear_cache","lineno":104,"docstring":"Clear the entire response cache."},{"name":"get_metrics","lineno":113,"docstring":"Retrieve a snapshot of current performance metrics, including average latency.\n\nReturns:\n    dict: metrics with fields total_requests, cache_hits, cache_misses, average_latency"},{"name":"submit","lineno":134,"docstring":"Submit a code generation job for concurrent execution.\n\nArgs:\n    input_data: The input to pass into the generator function.\n    generator_fn (callable): Function that generates response. If stream=True,\n                             it must return an iterator of chunks.\n    callback (callable, optional): Function to call with the future when done.\n    stream (bool): Whether to use streaming mode.\n\nReturns:\n    concurrent.futures.Future: Future representing the pending result."},{"name":"_execute","lineno":155,"docstring":"Internal method to handle execution, caching, streaming, and metrics."}],"docstring":"Manages performance optimizations for O3 code generator:\n- In-memory response caching\n- Parallel request processing\n- Streaming support\n- Detailed performance metrics\n\nAttributes:\n    max_workers (int): maximum number of worker threads in the pool\n    cache_maxsize (int): maximum number of entries in the cache\n    _executor (ThreadPoolExecutor): thread pool executor for concurrent tasks\n    _cache (dict): thread-safe in-memory cache mapping keys to responses\n    _cache_lock (Lock): lock for synchronizing cache access\n    _metrics (dict): performance metrics (requests, hits, misses, total_latency)\n    _metrics_lock (Lock): lock for synchronizing metrics updates\n    logger: O3Logger instance for logging","agent_type":"worker"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/self_improvement/run_self_improvement.py","name":"SelfImprovementOrchestrator","data":{"name":"SelfImprovementOrchestrator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/self_improvement/run_self_improvement.py","lineno":28,"bases":[],"methods":[{"name":"__init__","lineno":31,"docstring":"Initialize the orchestrator."},{"name":"run_self_improvement","lineno":41,"docstring":"Run the self-improvement process.\n\nArgs:\n    improvement_type: Type of improvement to run (\"all\" or specific file)"},{"name":"_run_all_improvements","lineno":57,"docstring":"Run all improvement files in sequence."},{"name":"_run_specific_improvement","lineno":62,"docstring":"Run a specific improvement file."},{"name":"_run_improvement_file","lineno":72,"docstring":"Run a specific improvement file."},{"name":"_save_generated_code","lineno":205,"docstring":"Save generated code to a temporary file using shared FileGenerator."},{"name":"_create_backup_if_exists","lineno":224,"docstring":"Create backup of original file if it exists using shared FileGenerator."},{"name":"_apply_improvement","lineno":238,"docstring":"Apply the generated improvement automatically."},{"name":"_validate_improvement","lineno":327,"docstring":"Validate the generated improvement using the validation framework."},{"name":"_sample_func_before","lineno":362,"docstring":"Sample function for before improvement benchmarking."},{"name":"_sample_func_after","lineno":366,"docstring":"Sample function for after improvement benchmarking."},{"name":"_sample_api_test","lineno":370,"docstring":"Sample API test function."},{"name":"_sample_error_func","lineno":374,"docstring":"Sample error function for testing error handling."},{"name":"_is_patch_file","lineno":378,"docstring":"Check if the generated file is a patch (partial file) or complete replacement."},{"name":"_apply_patch_to_file","lineno":411,"docstring":"Apply a patch to an existing file by replacing specific methods."},{"name":"_extract_method_name","lineno":454,"docstring":"Extract the method name from the patch content."},{"name":"_replace_method_in_file","lineno":467,"docstring":"Replace a method in the target file with the patch content."},{"name":"analyze_current_state","lineno":500,"docstring":"Analyze the current state and identify improvement opportunities."},{"name":"_analyze_api_usage","lineno":515,"docstring":"Analyze current API usage patterns."},{"name":"_analyze_security_features","lineno":531,"docstring":"Analyze current security features."},{"name":"_analyze_performance_features","lineno":540,"docstring":"Analyze current performance features."},{"name":"_analyze_logging_features","lineno":549,"docstring":"Analyze current logging features."},{"name":"_analyze_configuration_features","lineno":558,"docstring":"Analyze current configuration features."},{"name":"run_improvement_config","lineno":567,"docstring":"Run an in-memory improvement config and return the result."},{"name":"_restore_backup","lineno":635,"docstring":"Restore backup of the original file if it exists."}],"docstring":"Orchestrates the self-improvement process for the O3 code generator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/self_improvement/validation_framework.py","name":"ValidationFramework","data":{"name":"ValidationFramework","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/config/self_improvement/validation_framework.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":59,"docstring":"Initialize the ValidationFramework and its logger.\n\nArgs:\n    log_file (str): Path to the log file (not directly used; logging is configured globally)."},{"name":"run_check","lineno":69,"docstring":"Run a single validation check and record the result.\n\nArgs:\n    category (str): Name of the validation category.\n    check_callable (Callable[..., bool]): The function performing the check.\n    *args: Positional arguments for the check.\n    expected (str | None): Expected text for diff generation.\n    actual (str | None): Actual text for diff generation.\n    **kwargs: Keyword arguments for the check."},{"name":"log_failure","lineno":119,"docstring":"Log detailed failure information for a validation category.\n\nArgs:\n    category (str): The failed validation category.\n    details (dict[str, Any]): Contains error_message, stack_trace, and code_diff."},{"name":"run_all_checks","lineno":134,"docstring":"Execute all provided validation checks sequentially.\n\nArgs:\n    checks (dict[str, Callable[..., bool]]): Mapping of category names to check callables.\n\nReturns:\n    dict[str, Any]: Aggregated report of all check results."},{"name":"run_all_validations","lineno":149,"docstring":"Perform a comprehensive suite of validations on generated code including alignment checks.\n\nArgs:\n    code (str): Source code to validate.\n    func_before (Callable[..., Any]): Function to test pre-improvement behavior.\n    func_after (Callable[..., Any]): Function to test post-improvement behavior.\n    api_test (Callable[..., Any]): Function that tests API functionality.\n    error_test (Callable[..., Any]): Function that should raise an error for handling tests.\n\nReturns:\n    dict[str, Any]: Detailed results for each validation category."},{"name":"_validate_alignment","lineno":326,"docstring":"Validate code against alignment scanner rules.\n\nArgs:\n    code (str): Source code to validate.\n\nReturns:\n    dict[str, Any]: Alignment validation results."}],"docstring":"A framework for running validation checks on generated code with detailed diagnostics.\n\nAttributes:\n    logger (Any): An O3Logger instance for logging messages.\n    report (dict[str, Any]): Aggregated results of each validation category.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/data_flow_designer.py","name":"DataFlowAnalyzer","data":{"name":"DataFlowAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/data_flow_designer.py","lineno":49,"bases":[],"methods":[{"name":"__init__","lineno":52,"docstring":"Initialize the data flow analyzer and its logger."},{"name":"analyze_data_requirements","lineno":56,"docstring":"Analyze data flow requirements and extract design insights.\n\nArgs:\n    data_requirements: Raw textual requirements describing data flows.\n    system_architecture: Contextual system architecture details.\n\nReturns:\n    A dictionary containing extracted analysis insights."},{"name":"_extract_data_sources","lineno":87,"docstring":"Extract data sources from requirements."},{"name":"_extract_data_destinations","lineno":120,"docstring":"Extract data destinations from requirements."},{"name":"_extract_data_transformations","lineno":147,"docstring":"Extract data transformation requirements."},{"name":"_analyze_data_volume","lineno":174,"docstring":"Analyze data volume characteristics."},{"name":"_analyze_data_velocity","lineno":187,"docstring":"Analyze data velocity characteristics."},{"name":"_analyze_data_variety","lineno":200,"docstring":"Analyze data variety characteristics."},{"name":"_extract_integration_patterns","lineno":213,"docstring":"Extract integration patterns from requirements."},{"name":"_extract_data_quality_requirements","lineno":230,"docstring":"Extract data quality requirements."},{"name":"_extract_data_security_requirements","lineno":243,"docstring":"Extract data security requirements."}],"docstring":"Performs analysis of data flow requirements to identify dependencies and design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/database_schema_generator.py","name":"DatabaseSchemaGenerator","data":{"name":"DatabaseSchemaGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/database_schema_generator.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the DatabaseSchemaGenerator.\n\nArgs:\n    config_path: Optional path to configuration file."},{"name":"_create_directories","lineno":88,"docstring":"Create necessary directories for output and logs."},{"name":"generate_schema","lineno":113,"docstring":"Generate comprehensive database schema.\n\nArgs:\n    input_data: Input data for database schema generation.\n\nReturns:\n    DatabaseSpecOutput containing generated database schema."},{"name":"_build_prompt","lineno":172,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for database schema generation.\n\nReturns:\n    Formatted prompt string."},{"name":"_save_schema_files","lineno":194,"docstring":"Save database schema files in the specified format.\n\nArgs:\n    schema: The database schema data to save.\n    fmt: The format to save in.\n    base_name: Base filename for the output.\n\nReturns:\n    List of generated file paths."},{"name":"_convert_to_sql","lineno":246,"docstring":"Convert database schema to SQL format.\n\nArgs:\n    schema: Database schema dictionary.\n\nReturns:\n    SQL string."},{"name":"define_tables","lineno":310,"docstring":"Define database tables based on data models.\n\nArgs:\n    data_models: Data models dictionary.\n\nReturns:\n    List of table definitions."},{"name":"specify_relationships","lineno":348,"docstring":"Specify relationships between database tables.\n\nArgs:\n    tables: List of table definitions.\n\nReturns:\n    List of relationship specifications."},{"name":"generate_migrations","lineno":388,"docstring":"Generate database migration scripts.\n\nArgs:\n    schema: Database schema dictionary.\n\nReturns:\n    List of migration scripts."}],"docstring":"Generates database schemas based on provided configurations and manages schema-related operations.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    config_manager: ConfigManager for loading configurations.\n    client: OpenAI client for API calls.\n    directory_manager: DirectoryManager for filesystem operations.\n    file_generator: FileGenerator for writing files.\n    input_loader: UniversalInputLoader for loading input data.\n    output_formatter: OutputFormatter for formatting outputs.\n    prompt_builder: PromptBuilder for building prompts.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/dependency_analyzer.py","name":"DependencyAnalyzer","data":{"name":"DependencyAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/dependency_analyzer.py","lineno":568,"bases":[],"methods":[{"name":"__init__","lineno":571,"docstring":"Initialize with configuration."},{"name":"_setup_directories","lineno":589,"docstring":"Create necessary directories."},{"name":"analyze_project","lineno":597,"docstring":"Analyze project dependencies.\n\nArgs:\n    input_data: Dependency analysis input data\n\nReturns:\n    Dependency analysis output with results"},{"name":"_parse_project_dependencies","lineno":653,"docstring":"Parse all dependency files in the project.\n\nArgs:\n    project_path: Path to the project\n\nReturns:\n    Dictionary containing all dependencies"},{"name":"_generate_analysis_report","lineno":690,"docstring":"Generate comprehensive analysis report.\n\nArgs:\n    dependencies: Parsed dependencies\n    vulnerabilities: Found vulnerabilities\n    optimization: Optimization analysis\n    input_data: Input data\n\nReturns:\n    Analysis report"},{"name":"_save_analysis_report","lineno":729,"docstring":"Save analysis report to file.\n\nArgs:\n    report: Analysis report\n    project_path: Project path\n\nReturns:\n    Path to saved report"},{"name":"_get_current_timestamp","lineno":747,"docstring":"Get current timestamp string."}],"docstring":"Main class for dependency analysis.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/docker_orchestrator.py","name":"DockerAnalyzer","data":{"name":"DockerAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/docker_orchestrator.py","lineno":60,"bases":[],"methods":[{"name":"__init__","lineno":63,"docstring":null},{"name":"analyze_application","lineno":66,"docstring":"Analyze application to determine Docker requirements.\n\nArgs:\n    app_path: Path to the application\n\nReturns:\n    Dictionary containing application analysis"},{"name":"_extract_python_dependencies","lineno":137,"docstring":"Extract Python dependencies from requirements.txt."},{"name":"_extract_node_dependencies","lineno":164,"docstring":"Extract Node.js dependencies from package.json."},{"name":"_extract_java_dependencies","lineno":182,"docstring":"Extract Java dependencies from pom.xml."},{"name":"_extract_go_dependencies","lineno":201,"docstring":"Extract Go dependencies from go.mod."},{"name":"_detect_framework","lineno":226,"docstring":"Detect the framework used in the application."},{"name":"_detect_entry_point","lineno":287,"docstring":"Detect the entry point for the application."},{"name":"_analyze_config_files","lineno":350,"docstring":"Analyze configuration files for ports, environment variables, etc."}],"docstring":"Analyze application requirements to determine optimal Docker configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/docker_orchestrator.py","name":"DockerOrchestrator","data":{"name":"DockerOrchestrator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/docker_orchestrator.py","lineno":449,"bases":[],"methods":[{"name":"__init__","lineno":452,"docstring":"Initialize the Docker orchestrator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":469,"docstring":"Create necessary output directories."},{"name":"generate_docker_configuration","lineno":478,"docstring":"Generate comprehensive Docker configuration.\n\nArgs:\n    input_data: Input data containing application path and configuration\n\nReturns:\n    DockerOutput containing generated configuration and file paths"},{"name":"_generate_with_o3_model","lineno":531,"docstring":"Generate Docker configuration using OpenAI's O3 model with current API standards.\n\nArgs:\n    input_data: Input data containing configuration\n    app_info: Analyzed application information\n\nReturns:\n    Generated Docker configuration dictionary"},{"name":"_build_prompt","lineno":589,"docstring":"Build comprehensive prompt for Docker configuration generation.\n\nArgs:\n    input_data: Input data containing configuration\n    app_info: Analyzed application information\n\nReturns:\n    Formatted prompt string"},{"name":"_create_docker_files","lineno":634,"docstring":"Create Docker configuration files.\n\nArgs:\n    docker_config: Generated Docker configuration\n    input_data: Input data containing configuration\n\nReturns:\n    List of created file paths"},{"name":"_generate_dockerfile","lineno":704,"docstring":"Generate Dockerfile content."},{"name":"_generate_multi_stage_dockerfile","lineno":713,"docstring":"Generate multi-stage Dockerfile."},{"name":"_generate_single_stage_dockerfile","lineno":719,"docstring":"Generate single-stage Dockerfile."},{"name":"_generate_dockerignore","lineno":725,"docstring":"Generate .dockerignore file."},{"name":"_generate_orchestration_files","lineno":731,"docstring":"Generate orchestration files (docker-compose, kubernetes)."},{"name":"_generate_docker_compose","lineno":761,"docstring":"Generate docker-compose.yml configuration."},{"name":"_generate_kubernetes_manifest","lineno":786,"docstring":"Generate Kubernetes deployment manifest."},{"name":"_generate_security_scripts","lineno":827,"docstring":"Generate security scanning scripts."},{"name":"_generate_security_scan_script","lineno":850,"docstring":"Generate security scanning script."},{"name":"_generate_build_script","lineno":856,"docstring":"Generate build script."}],"docstring":"Generate comprehensive Docker configuration using OpenAI's O3 models.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","name":"OpenAIConfig","data":{"name":"OpenAIConfig","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","lineno":24,"bases":[],"methods":[],"docstring":"Configuration parameters for the OpenAI API call.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","name":"PromptExpander","data":{"name":"PromptExpander","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":null},{"name":"_validate_api_key","lineno":44,"docstring":"Ensure that the OPENAI_API_KEY environment variable is set."},{"name":"expand","lineno":53,"docstring":"Expand a prompt intelligently using the specified OpenAI model.\n\nArgs:\n    prompt: The user prompt to expand.\n    context: Optional additional context to improve expansion quality.\n\nReturns:\n    The expanded prompt as a string."},{"name":"_parse_response","lineno":107,"docstring":"Extract the content string from OpenAI's ChatCompletion response."}],"docstring":"Service for expanding prompts using OpenAI's O3 model.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/feasibility_assessor.py","name":"FeasibilityProcessor","data":{"name":"FeasibilityProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/feasibility_assessor.py","lineno":390,"bases":[],"methods":[{"name":"__init__","lineno":393,"docstring":"Initialize the FeasibilityProcessor with configuration and utilities.\n\nArgs:\n    config_path (str | None): Path to configuration file"},{"name":"_create_directories","lineno":424,"docstring":"Create necessary output directories."},{"name":"run_feasibility_assessment","lineno":433,"docstring":"Run feasibility assessment using O3 models.\n\nArgs:\n    input_data: Structured input data for feasibility assessment\n\nReturns:\n    FeasibilityOutput containing assessment results"},{"name":"_calculateoverall_feasibility","lineno":524,"docstring":"Calculate overall feasibility based on individual assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    Overall feasibility level"},{"name":"_generaterecommendations","lineno":570,"docstring":"Generate recommendations based on feasibility assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    List of recommendations"},{"name":"_identifyrisks","lineno":614,"docstring":"Identify risks based on feasibility assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    List of identified risks"},{"name":"_generate_with_o3_model","lineno":676,"docstring":"Generate enhanced feasibility assessment using O3 model.\n\nArgs:\n    input_data: Input data for feasibility assessment\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n    overall_feasibility: Overall feasibility level\n    recommendations: Generated recommendations\n    risks: Identified risks\n\nReturns:\n    Enhanced feasibility assessment results"},{"name":"_build_prompt","lineno":748,"docstring":"Build prompt for O3 model feasibility assessment.\n\nArgs:\n    input_data: Input data for feasibility assessment\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n    overall_feasibility: Overall feasibility level\n    recommendations: Generated recommendations\n    risks: Identified risks\n\nReturns:\n    Formatted prompt string"},{"name":"_extract_insights_from_text","lineno":782,"docstring":"Extract insights from text response when JSON parsing fails.\n\nArgs:\n    text: Text response from O3 model\n\nReturns:\n    Dictionary of extracted insights"},{"name":"_create_feasibility_files","lineno":815,"docstring":"Create output files for feasibility assessment.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":858,"docstring":"Convert feasibility assessment results to Markdown format.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    Markdown formatted string"},{"name":"_convert_to_html","lineno":906,"docstring":"Convert feasibility assessment results to HTML format.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    HTML formatted string"}],"docstring":"Main processor for feasibility assessment using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/git_hooks/post-commit-auto-align.py","name":"SmartAutoAlignmentHook","data":{"name":"SmartAutoAlignmentHook","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/git_hooks/post-commit-auto-align.py","lineno":47,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":"Initialize the smart auto-alignment hook."},{"name":"_find_project_root","lineno":69,"docstring":"Find the project root directory."},{"name":"_get_committed_files","lineno":82,"docstring":"Get files that were committed in the last commit."},{"name":"_get_related_files","lineno":105,"docstring":"Get files that might be affected by the committed changes."},{"name":"_load_alignment_cache","lineno":142,"docstring":"Load the alignment cache to avoid re-aligning recently aligned files."},{"name":"_save_alignment_cache","lineno":158,"docstring":"Save the alignment cache."},{"name":"_load_alignment_session","lineno":170,"docstring":"Load the current alignment session."},{"name":"_save_alignment_session","lineno":194,"docstring":"Save the alignment session."},{"name":"_clear_alignment_session","lineno":206,"docstring":"Clear the alignment session."},{"name":"_check_recursive_loop","lineno":220,"docstring":"Check if we're in a recursive loop."},{"name":"_detect_alignment_needs","lineno":233,"docstring":"Check if a file needs alignment without making changes."},{"name":"_align_file","lineno":261,"docstring":"Align a single file using the enhanced auto-align system."},{"name":"_commit_alignment_changes","lineno":316,"docstring":"Commit alignment changes in a separate commit."},{"name":"run","lineno":352,"docstring":"Run the post-commit auto-alignment hook."}],"docstring":"Post-commit hook for intelligent auto-alignment.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/git_hooks/pre-commit-auto-rules.py","name":"AutoRulesPreCommitHook","data":{"name":"AutoRulesPreCommitHook","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/git_hooks/pre-commit-auto-rules.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":"Initialize the pre-commit hook."},{"name":"_find_project_root","lineno":68,"docstring":"Find the project root directory (where .git is located)."},{"name":"_get_staged_files","lineno":81,"docstring":"Get list of staged files for the current commit."},{"name":"_is_relevant_file","lineno":104,"docstring":"Check if a file is relevant for rule regeneration."},{"name":"_has_relevant_changes","lineno":135,"docstring":"Check if any staged files are relevant for rule regeneration."},{"name":"_run_auto_rules_generation","lineno":144,"docstring":"Run the auto rules generation system."},{"name":"_stage_updated_rules","lineno":170,"docstring":"Stage any updated rule files."},{"name":"run","lineno":209,"docstring":"Run the pre-commit hook."}],"docstring":"Pre-commit hook for intelligent auto rules generation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","name":"IdeaFormationAnalyzer","data":{"name":"IdeaFormationAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","lineno":326,"bases":[],"methods":[{"name":"__init__","lineno":329,"docstring":"Initialize the idea formation analyzer.\nAttributes:\n    logger: Logger instance for this class"},{"name":"analyze_concept","lineno":337,"docstring":"Analyze a concept for clarity, completeness, and potential.\n\nArgs:\n    concept_description: Natural language description of the concept\n    target_market: Optional target market information\n\nReturns:\n    Dictionary containing concept analysis results"},{"name":"validate_idea","lineno":381,"docstring":"Validate an idea for market fit and viability.\n\nArgs:\n    concept_description: Natural language description of the concept\n    target_market: Optional target market information\n\nReturns:\n    Dictionary containing validation results"},{"name":"refine_concept","lineno":421,"docstring":"Refine a concept based on analysis and feedback.\n\nArgs:\n    concept_description: Original concept description\n    feedback: Optional feedback for refinement\n\nReturns:\n    Dictionary containing refined concept and improvements"},{"name":"assess_feasibility","lineno":457,"docstring":"Assess the feasibility of implementing a concept.\n\nArgs:\n    concept_description: Natural language description of the concept\n\nReturns:\n    Dictionary containing feasibility assessment"},{"name":"_analyze_concept_clarity","lineno":492,"docstring":null},{"name":"_analyze_concept_completeness","lineno":498,"docstring":null},{"name":"_analyze_concept_potential","lineno":508,"docstring":null},{"name":"_validate_market_fit","lineno":516,"docstring":null},{"name":"_assess_viability","lineno":524,"docstring":null},{"name":"_analyze_uniqueness","lineno":530,"docstring":null},{"name":"_generate_refined_concept","lineno":536,"docstring":null},{"name":"_identify_improvements","lineno":541,"docstring":null},{"name":"_assess_technical_feasibility","lineno":548,"docstring":null},{"name":"_assess_economic_feasibility","lineno":554,"docstring":null},{"name":"_assess_operational_feasibility","lineno":560,"docstring":null}],"docstring":"Analyzes concepts and ideas for formation and development.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","name":"IdeaFormationProcessor","data":{"name":"IdeaFormationProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","lineno":569,"bases":[],"methods":[{"name":"__init__","lineno":572,"docstring":"Initialize the idea formation processor.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":607,"docstring":"Create necessary output directories."},{"name":"analyze_idea_formation","lineno":624,"docstring":"Analyze idea formation using O3 models.\n\nArgs:\n    input_data: Structured input data for analysis\n\nReturns:\n    IdeaFormationOutput containing analysis results"},{"name":"_generate_with_o3_model","lineno":694,"docstring":"Generate enhanced analysis using O3 model.\n\nArgs:\n    input_data: Input data for analysis\n    idea_analysis: Initial analysis results\n\nReturns:\n    Enhanced analysis results"},{"name":"_perform_market_research","lineno":735,"docstring":"Perform market research analysis.\n\nArgs:\n    input_data: Input data containing concept and target market\n\nReturns:\n    Market research results"}],"docstring":"Main processor for idea formation analysis using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/integrated_o3_analyzer.py","name":"IntegratedO3Analyzer","data":{"name":"IntegratedO3Analyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/integrated_o3_analyzer.py","lineno":27,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":"Initialize the analyzer with logger, formatter, file generator, and directory manager."},{"name":"parse_arguments","lineno":48,"docstring":"Parse command-line arguments for the code generation input.\n\nReturns:\n    argparse.Namespace: Parsed arguments including target_file, improvements, user_guidance, and output."},{"name":"get_input","lineno":87,"docstring":"Prompt the user for input via the command line.\n\nArgs:\n    prompt_text: The prompt to display to the user.\n\nReturns:\n    The user input string.\n\nRaises:\n    SystemExit: If no input is received (EOF)."},{"name":"build_input_dict","lineno":110,"docstring":"Build the code generation input dictionary.\n\nArgs:\n    target_file: Target file name.\n    improvements: Description of improvements.\n    user_guidance: Additional user guidance.\n\nReturns:\n    A dictionary conforming to the CodeGenerationInput schema."},{"name":"validate_input","lineno":131,"docstring":"Validate that the input contains necessary information.\n\nArgs:\n    data: The input data dictionary.\n\nRaises:\n    ValueError: If required fields are missing or empty."},{"name":"run","lineno":150,"docstring":"Execute the main logic: parse arguments, collect input, validate, format, and save JSON."}],"docstring":"Class to generate and save CodeGenerationInput JSON files using shared O3 utilities.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    output_formatter: Instance of OutputFormatter for formatting data.\n    file_generator: Instance of FileGenerator for writing files.\n    directory_manager: Instance of DirectoryManager for directory operations.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/integration_spec_generator.py","name":"IntegrationSpecGenerator","data":{"name":"IntegrationSpecGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/integration_spec_generator.py","lineno":69,"bases":[],"methods":[{"name":"__init__","lineno":72,"docstring":"Initialize the IntegrationSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":91,"docstring":"Create necessary directories for the generator."},{"name":"define_integrations","lineno":106,"docstring":"Define comprehensive integration specifications.\n\nArgs:\n    input_data: Input data for integration specification generation\n\nReturns:\n    IntegrationSpecOutput containing generated integration specifications"},{"name":"_build_prompt","lineno":199,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for integration specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"_save_integration_files","lineno":220,"docstring":"Save integration specification files in the specified format.\n\nArgs:\n    integration_specs: The integration specification data to save\n    output_format: The format to save in\n    base_filename: Base filename for the output\n\nReturns:\n    List of generated file paths"},{"name":"_convert_to_markdown","lineno":276,"docstring":"Convert integration specifications to Markdown format."},{"name":"specify_protocols","lineno":359,"docstring":"Specify integration protocols for external services.\n\nArgs:\n    external_services: List of external services to integrate with\n    requirements: Integration requirements\n\nReturns:\n    Dictionary containing protocol specifications"},{"name":"generate_connectors","lineno":390,"docstring":"Generate connector specifications for integrations.\n\nArgs:\n    integration_specs: Integration specifications\n\nReturns:\n    List of connector specifications"},{"name":"validate_integrations","lineno":420,"docstring":"Validate integration specifications for consistency and completeness.\n\nArgs:\n    integration_specs: Integration specifications to validate\n\nReturns:\n    Dictionary containing validation results"}],"docstring":"Main integration specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/intelligent_o3_analyzer.py","name":"IntelligentFileAnalyzer","data":{"name":"IntelligentFileAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/intelligent_o3_analyzer.py","lineno":92,"bases":[],"methods":[{"name":"__init__","lineno":110,"docstring":null},{"name":"_serialize_for_json","lineno":135,"docstring":"Recursively convert Path objects to str for JSON serialization."},{"name":"analyze_file","lineno":148,"docstring":"Analyze a single file and return improvement suggestions as a dict."},{"name":"process_file","lineno":273,"docstring":"Process a single file: analyze and display or save improvements."},{"name":"process_paths","lineno":323,"docstring":"Process a list of file or directory paths."}],"docstring":"Intelligent File Analyzer using the O3 model.\n\nAttributes:\n    mode: 'analysis' or 'full'.\n    filters: list of improvement types to include or None.\n    loader: UniversalInputLoader instance.\n    directory_manager: DirectoryManager instance.\n    formatter: OutputFormatter instance.\n    file_generator: FileGenerator instance.\n    generator: O3CodeGenerator instance.\n    improvement_dir: Path to save improvement files.\n    max_retries: maximum retry attempts for model generation.\n    retry_delay: delay in seconds between retries.\n    logger: O3Logger instance.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/interface_designer.py","name":"InterfaceAnalyzer","data":{"name":"InterfaceAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/interface_designer.py","lineno":54,"bases":[],"methods":[{"name":"__init__","lineno":57,"docstring":"Initialize the interface analyzer."},{"name":"analyze_interface_requirements","lineno":61,"docstring":"Analyze interface requirements and extract design insights.\n\nArgs:\n    interface_requirements: Natural language interface requirements\n    component_specifications: Component specifications\n\nReturns:\n    Dictionary containing interface analysis"},{"name":"_analyze_interface_patterns","lineno":115,"docstring":"Analyze interface patterns from requirements."},{"name":"_extract_protocol_requirements","lineno":144,"docstring":"Extract protocol requirements from interface requirements."},{"name":"_extract_authentication_requirements","lineno":157,"docstring":"Extract authentication requirements from interface requirements."},{"name":"_extract_documentation_requirements","lineno":170,"docstring":"Extract documentation requirements from interface requirements."},{"name":"_analyze_performance_requirements","lineno":181,"docstring":"Analyze performance requirements from interface requirements."},{"name":"_analyze_security_requirements","lineno":190,"docstring":"Analyze security requirements from interface requirements."},{"name":"_extract_compatibility_requirements","lineno":199,"docstring":"Extract compatibility requirements."},{"name":"_estimate_complexity","lineno":205,"docstring":"Estimate interface complexity."}],"docstring":"Analyzes interface requirements and generates design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/interface_designer.py","name":"InterfaceDesigner","data":{"name":"InterfaceDesigner","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/interface_designer.py","lineno":293,"bases":[],"methods":[{"name":"__init__","lineno":296,"docstring":"Initialize the interface designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":320,"docstring":"Create necessary output directories."},{"name":"design_apis","lineno":332,"docstring":"Design comprehensive interface specifications based on requirements.\n\nArgs:\n    input_data: Interface design input specification\n\nReturns:\n    Interface design output with specifications and diagrams"},{"name":"_generate_with_o3_model","lineno":388,"docstring":"Generate interface specifications using O3 model.\n\nArgs:\n    input_data: Interface input data\n    interface_analysis: Interface analysis results\n\nReturns:\n    Generated interface specifications"},{"name":"_build_prompt","lineno":424,"docstring":"Build the prompt for interface design."},{"name":"_parse_structured_response","lineno":454,"docstring":"Parse structured response when JSON parsing fails."},{"name":"_generate_diagrams","lineno":465,"docstring":"Generate interface diagrams."},{"name":"_create_interface_files","lineno":493,"docstring":"Create interface specification files."},{"name":"_convert_to_markdown","lineno":523,"docstring":"Convert interface specifications to Markdown."},{"name":"_generate_openapi_spec","lineno":552,"docstring":"Generate OpenAPI specification."}],"docstring":"Main interface designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/market_research_integrator.py","name":"MarketResearchProcessor","data":{"name":"MarketResearchProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/market_research_integrator.py","lineno":250,"bases":[],"methods":[{"name":"__init__","lineno":253,"docstring":"Initialize processor: load config, setup logger, create utilities.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_initialize_directories","lineno":303,"docstring":"Ensure required output directories exist."},{"name":"run_market_research","lineno":319,"docstring":"Execute market research steps and generate outputs.\n\nArgs:\n    input_data: Structured input for market research\n\nReturns:\n    MarketResearchOutput with analysis and file paths"}],"docstring":"Orchestrates market research workflow using shared utilities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/natural_language_enhancement_generator.py","name":"NaturalLanguageEnhancementGenerator","data":{"name":"NaturalLanguageEnhancementGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/natural_language_enhancement_generator.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":34,"docstring":"Initialize utilities and logger."},{"name":"parse_arguments","lineno":43,"docstring":"Parse command line arguments for prompt and mode.\n\nReturns:\n    argparse.Namespace: Parsed arguments with 'prompt' and 'mode' attributes."},{"name":"validate_and_process_prompt","lineno":65,"docstring":"Validate and process the prompt based on the mode.\n\nArgs:\n    prompt (str): The raw input prompt.\n    mode (str): The operational mode ('enhancement' or 'new_code').\n\nReturns:\n    dict[str, str]: Processed data containing 'description' and 'target_file'.\n\nRaises:\n    ValueError: If validation fails."},{"name":"determine_output_path","lineno":115,"docstring":"Determine and ensure the output directory based on the mode.\n\nArgs:\n    mode (str): The operational mode.\n\nReturns:\n    Path: The directory path for output files.\n\nRaises:\n    ValueError: If mode is invalid.\n    Exception: If directory creation fails."},{"name":"generate_output_filename","lineno":150,"docstring":"Generate an output filename based on mode and timestamp.\n\nArgs:\n    mode (str): The operational mode.\n\nReturns:\n    str: Generated filename.\n\nRaises:\n    ValueError: If mode is invalid."},{"name":"create_output_data","lineno":175,"docstring":"Build and validate output data conforming to CodeGenerationInput schema.\n\nArgs:\n    processed_data (dict[str, str]): Contains 'description' and 'target_file'.\n    mode (str): Operational mode.\n    output_dir (Path): Directory where outputs will be placed.\n\nReturns:\n    dict[str, Any]: Validated data ready for serialization.\n\nRaises:\n    Exception: If schema validation fails."},{"name":"write_output_file","lineno":221,"docstring":"Serialize data to JSON and save to a file via FileGenerator.\n\nArgs:\n    output_dir (Path): Directory path for the file.\n    filename (str): Name of the output file.\n    data (dict[str, Any]): Data to serialize.\n\nRaises:\n    Exception: If file saving fails."},{"name":"run","lineno":248,"docstring":"Execute the end-to-end generation pipeline."}],"docstring":"Main class orchestrating the natural language enhancement and new code generation workflow.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/o3_logger/logger.py","name":"O3Logger","data":{"name":"O3Logger","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/o3_logger/logger.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":"Initialize the O3 logger.\n\nArgs:\n    config: Logging configuration"},{"name":"_setup_loggers","lineno":76,"docstring":"Setup all loggers with proper configuration."},{"name":"log_configuration_loaded","lineno":149,"docstring":"Log configuration loading event."},{"name":"log_model_selection","lineno":156,"docstring":"Log model selection event."},{"name":"log_api_call_start","lineno":163,"docstring":"Log the start of an API call."},{"name":"log_api_call_success","lineno":170,"docstring":"Log successful API call."},{"name":"log_api_call_error","lineno":179,"docstring":"Log API call error."},{"name":"log_file_generation","lineno":186,"docstring":"Log file generation event."},{"name":"log_file_save","lineno":195,"docstring":"Log file save event."},{"name":"log_validation_error","lineno":205,"docstring":"Log validation errors."},{"name":"log_performance_metric","lineno":212,"docstring":"Log performance metrics."},{"name":"log_user_action","lineno":222,"docstring":"Log user actions."},{"name":"log_system_event","lineno":232,"docstring":"Log system events."},{"name":"log_error","lineno":240,"docstring":"Log errors with full stack trace."},{"name":"log_warning","lineno":249,"docstring":"Log warnings."},{"name":"log_info","lineno":257,"docstring":"Log informational messages."},{"name":"log_debug","lineno":263,"docstring":"Log debug messages."},{"name":"get_correlation_id","lineno":269,"docstring":"Get the current correlation ID."},{"name":"set_correlation_id","lineno":273,"docstring":"Set a new correlation ID."},{"name":"_is_help_mode","lineno":278,"docstring":"Check if we're in help mode (--help flag present)."}],"docstring":"Comprehensive logging system for O3 Code Generator.\n\nProvides:\n- Standard application logging\n- Debug logging with detailed information\n- Error logging with stack traces\n- Performance tracking\n- Structured logging capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_optimizer.py","name":"CodeAnalyzer","data":{"name":"CodeAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_optimizer.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize CodeAnalyzer.\n\nArgs:\n    client: OpenAI client instance for AI interactions"},{"name":"analyze_code_performance","lineno":66,"docstring":"Analyze code for performance issues across the project.\n\nArgs:\n    project_path: Path to the project directory\n    config: Analysis configuration\n\nReturns:\n    Dictionary of aggregated performance analysis results"},{"name":"_analyze_python_files","lineno":104,"docstring":"Analyze Python files for performance issues.\n\nArgs:\n    files: List of Python file paths\n    config: Analysis configuration\n\nReturns:\n    List of detected issues"},{"name":"_analyze_js_files","lineno":139,"docstring":"Analyze JavaScript/TypeScript files for performance issues.\n\nArgs:\n    files: List of JS/TS file paths\n    config: Analysis configuration\n\nReturns:\n    List of detected issues"},{"name":"_analyze_with_ai","lineno":174,"docstring":"Send analysis prompt to AI and parse response.\n\nArgs:\n    prompt: Full analysis prompt\n    filename: Name of the file being analyzed\n\nReturns:\n    List of issue dictionaries or empty list on failure"},{"name":"_analyze_algorithms","lineno":213,"docstring":"Perform basic algorithm complexity analysis.\n\nReturns:\n    List with algorithm analysis summary"},{"name":"_analyze_complexity","lineno":234,"docstring":"Perform basic code complexity analysis.\n\nReturns:\n    List with complexity analysis summary"}],"docstring":"Analyzes code for performance issues and optimization opportunities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_optimizer.py","name":"OptimizationRecommender","data":{"name":"OptimizationRecommender","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_optimizer.py","lineno":303,"bases":[],"methods":[{"name":"__init__","lineno":306,"docstring":"Initialize OptimizationRecommender.\n\nArgs:\n    client: OpenAI client instance"},{"name":"generate_recommendations","lineno":317,"docstring":"Generate optimization recommendations.\n\nArgs:\n    project_name: Name of the project\n    analysis_results: Results from CodeAnalyzer\n    profiling_results: Results from Profiler\n    config: Optimization configuration\n\nReturns:\n    Recommendations dictionary"},{"name":"_fallback_recommendations","lineno":381,"docstring":"Provide fallback recommendations."}],"docstring":"Generates optimization recommendations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_spec_generator.py","name":"PerformanceSpecGenerator","data":{"name":"PerformanceSpecGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/performance_spec_generator.py","lineno":65,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the PerformanceSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":87,"docstring":"Create necessary directories for the generator."},{"name":"define_performance_requirements","lineno":102,"docstring":"Define comprehensive performance specifications.\n\nArgs:\n    input_data: Input data for performance specification generation\n\nReturns:\n    PerformanceSpecOutput containing generated performance specifications"},{"name":"_build_prompt","lineno":193,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for performance specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"_save_performance_files","lineno":228,"docstring":"Save performance specification files in the specified format.\n\nArgs:\n    performance_specs: The performance specification data to save\n    output_format: The format to save in\n    base_filename: Base filename for the output\n\nReturns:\n    List of generated file paths"},{"name":"_convert_to_markdown","lineno":284,"docstring":"Convert performance specifications to Markdown format."},{"name":"specify_benchmarks","lineno":408,"docstring":"Specify performance benchmarks based on requirements and constraints.\n\nArgs:\n    requirements: Performance requirements\n    constraints: Performance constraints\n\nReturns:\n    Dictionary containing benchmark specifications"},{"name":"generate_test_scenarios","lineno":439,"docstring":"Generate performance test scenarios.\n\nArgs:\n    performance_specs: Performance specifications\n\nReturns:\n    List of test scenario specifications"}],"docstring":"Main performance specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/project_initializer.py","name":"ProjectInitializer","data":{"name":"ProjectInitializer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/project_initializer.py","lineno":834,"bases":[],"methods":[{"name":"__init__","lineno":837,"docstring":"Initialize the project initializer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"initialize_project","lineno":861,"docstring":"Initialize a new project based on the input specifications.\n\nArgs:\n    input_data: Project initialization input specification\n\nReturns:\n    Project initialization output with results"},{"name":"_generate_next_steps","lineno":935,"docstring":"Generate next steps for the user."}],"docstring":"Main project initializer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/requirements_analyzer.py","name":"RequirementsProcessor","data":{"name":"RequirementsProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/requirements_analyzer.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":33,"docstring":"Initialize the requirements processor."},{"name":"analyze_requirements","lineno":43,"docstring":"Analyze requirements and return structured output."}],"docstring":"Simple processor for requirements analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_input_schema.py","name":"DockerOrchestratorInput","data":{"name":"DockerOrchestratorInput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_input_schema.py","lineno":44,"bases":["BaseModel"],"methods":[],"docstring":"Input schema for Docker Orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_output_schema.py","name":"DockerOrchestratorOutput","data":{"name":"DockerOrchestratorOutput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_output_schema.py","lineno":12,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for Docker Orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"AnalysisType","data":{"name":"AnalysisType","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":14,"bases":["str","Enum"],"methods":[],"docstring":"Types of analysis available for idea formation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"IdeaFormationOutputFormat","data":{"name":"IdeaFormationOutputFormat","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":23,"bases":["str","Enum"],"methods":[],"docstring":"Available output formats for idea formation tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"BrainstormingInput","data":{"name":"BrainstormingInput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":99,"bases":["BaseModel"],"methods":[],"docstring":"Structured input schema for brainstorming sessions.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"BrainstormingOutput","data":{"name":"BrainstormingOutput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":133,"bases":["BaseModel"],"methods":[],"docstring":"Structured output schema for brainstorming sessions.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/output_schema.py","name":"CodeGenerationOutput","data":{"name":"CodeGenerationOutput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/output_schema.py","lineno":10,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for code generation responses.\n\nAll fields are required by OpenAI's structured output API to ensure\nthe AI model provides complete, consistent responses every time.\nNo fallbacks needed - the system works correctly on first attempt.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_input_schema.py","name":"RequirementsAnalyzerInput","data":{"name":"RequirementsAnalyzerInput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_input_schema.py","lineno":36,"bases":["BaseModel"],"methods":[],"docstring":"Input schema for Requirements Analyzer.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_output_schema.py","name":"RequirementsAnalyzerOutput","data":{"name":"RequirementsAnalyzerOutput","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_output_schema.py","lineno":22,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for Requirements Analyzer.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/security_scanner.py","name":"SecurityAnalyzer","data":{"name":"SecurityAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/security_scanner.py","lineno":88,"bases":[],"methods":[{"name":"__init__","lineno":91,"docstring":null},{"name":"analyze_security","lineno":94,"docstring":"Analyze target for security vulnerabilities.\n\nArgs:\n    target_path: Path to the target for analysis\n\nReturns:\n    Dictionary containing security analysis results"},{"name":"_analyze_dependencies","lineno":137,"docstring":"Analyze dependencies for known vulnerabilities."},{"name":"_check_dependency_vulnerability","lineno":201,"docstring":"Check if a dependency has known vulnerabilities."},{"name":"_analyze_configuration","lineno":217,"docstring":"Analyze configuration files for security issues."},{"name":"_analyze_code_security","lineno":285,"docstring":"Analyze code for security vulnerabilities."},{"name":"_analyze_compliance","lineno":365,"docstring":"Analyze for compliance issues (OWASP, GDPR, etc.)."}],"docstring":"Analyze code and dependencies for security vulnerabilities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/security_scanner.py","name":"SecurityScanner","data":{"name":"SecurityScanner","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/security_scanner.py","lineno":424,"bases":[],"methods":[{"name":"__init__","lineno":432,"docstring":"Initialize the security scanner.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":448,"docstring":"Create necessary output directories."},{"name":"scan_security","lineno":459,"docstring":"Perform comprehensive security scanning.\n\nArgs:\n    input_data: Input data containing target path and configuration\n\nReturns:\n    SecurityOutput containing security scan results"},{"name":"_generate_with_o3_model","lineno":498,"docstring":"Generate security report using OpenAI's O3 model.\n\nArgs:\n    input_data: Input configuration\n    security_info: Security analysis information\n\nReturns:\n    Generated security report"},{"name":"_build_prompt","lineno":564,"docstring":"Build the prompt for the O3 model.\n\nArgs:\n    input_data: Input configuration\n    security_info: Security analysis information\n\nReturns:\n    Formatted prompt string"},{"name":"_create_security_reports","lineno":580,"docstring":"Create security reports from generated configuration.\n\nArgs:\n    security_report: Generated security report\n    input_data: Input configuration\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":613,"docstring":"Convert security report to Markdown format."},{"name":"_convert_to_html","lineno":648,"docstring":"Convert security report to HTML format."},{"name":"_generate_remediation_plan","lineno":665,"docstring":"Generate remediation plan files."},{"name":"_generate_remediation_content","lineno":693,"docstring":"Generate remediation plan content."},{"name":"_generate_remediation_script","lineno":716,"docstring":"Generate remediation script content."}],"docstring":"Advanced security scanner using OpenAI's O3 models.\n\nScans code, dependencies, and configurations for security vulnerabilities,\ncompliance issues, and best practices.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/simple_research_script.py","name":"SimpleResearcher","data":{"name":"SimpleResearcher","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/simple_research_script.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":54,"docstring":"Initialize the SimpleResearcher, setting up MCP tool clients.\nRaises ImportError if MCP tools are not available."},{"name":"save_research_report","lineno":210,"docstring":"Save research report to a JSON file.\n\nArgs:\n    report: Research report dictionary.\n    output_dir: Directory to save the report.\n\nReturns:\n    Path to the saved file."}],"docstring":"Represents a basic researcher with methods to conduct and manage research tasks.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    brave_search: Instance of BraveMCPSearch if available, else None.\n    firecrawl_client: Instance of FirecrawlMCPClient if available, else None.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/technical_spec_generator.py","name":"TechnicalSpecGenerator","data":{"name":"TechnicalSpecGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/technical_spec_generator.py","lineno":376,"bases":[],"methods":[{"name":"__init__","lineno":379,"docstring":"Initialize the TechnicalSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":400,"docstring":"Create necessary directories for the generator."},{"name":"generate_technical_specs","lineno":415,"docstring":"Generate comprehensive technical specifications.\n\nArgs:\n    input_data: Input data for specification generation\n\nReturns:\n    TechnicalSpecOutput containing generated specifications"},{"name":"_build_prompt","lineno":528,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"define_system_requirements","lineno":674,"docstring":"Define system requirements based on architecture and technology stack.\n\nArgs:\n    architecture: System architecture description\n    technology_stack: Technology stack configuration\n\nReturns:\n    Dictionary containing system requirements"},{"name":"specify_implementation_details","lineno":710,"docstring":"Specify detailed implementation details for the technical specifications.\n\nArgs:\n    specifications: Generated technical specifications\n\nReturns:\n    Dictionary containing implementation details"}],"docstring":"Main technical specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"ProjectAnalyzer","data":{"name":"ProjectAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":74,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":null},{"name":"analyze_project","lineno":80,"docstring":"Analyze project for testing requirements.\n\nArgs:\n    project_path: Path to the project directory\n\nReturns:\n    Dictionary containing project analysis"},{"name":"_detect_project_type","lineno":104,"docstring":"Detect the type of project."},{"name":"_find_existing_tests","lineno":119,"docstring":"Find existing test files in the project."},{"name":"_identify_testable_components","lineno":143,"docstring":"Identify components that need testing."},{"name":"_analyze_dependencies","lineno":182,"docstring":"Analyze project dependencies for testing."},{"name":"_detect_framework_preferences","lineno":203,"docstring":"Detect testing framework preferences."},{"name":"_assess_testing_needs","lineno":236,"docstring":"Assess testing needs for the project."}],"docstring":"Analyzes project structure and requirements for testing configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"TestGenerator","data":{"name":"TestGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":268,"bases":[],"methods":[{"name":"__init__","lineno":271,"docstring":null},{"name":"generate_tests","lineno":275,"docstring":"Generate test files for project components.\n\nArgs:\n    project_name: Name of the project\n    components: Components to test\n    framework: Testing framework to use\n    config: Test generation configuration\n\nReturns:\n    Dictionary containing generated test files"},{"name":"_generate_component_tests","lineno":309,"docstring":"Generate tests for a specific component."},{"name":"_generate_test_filename","lineno":350,"docstring":"Generate test filename based on component and framework."},{"name":"_generate_fallback_tests","lineno":362,"docstring":"Generate fallback tests when AI generation fails."}],"docstring":"Generates test files using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"FrameworkConfigGenerator","data":{"name":"FrameworkConfigGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":373,"bases":[],"methods":[{"name":"__init__","lineno":376,"docstring":null},{"name":"generate_configurations","lineno":380,"docstring":"Generate testing framework configurations.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    framework: Testing framework\n    config: Configuration settings\n\nReturns:\n    Dictionary containing generated configuration files"},{"name":"_generate_main_config","lineno":421,"docstring":"Generate main configuration file for the testing framework."},{"name":"_get_config_filename","lineno":452,"docstring":"Get configuration filename for the framework."},{"name":"_generate_pytest_conftest","lineno":462,"docstring":"Generate pytest conftest.py file."},{"name":"_generate_jest_config","lineno":468,"docstring":"Generate Jest configuration file."},{"name":"_generate_fallback_config","lineno":474,"docstring":"Generate fallback configuration when AI generation fails."}],"docstring":"Generates testing framework configurations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"TestingFrameworkGenerator","data":{"name":"TestingFrameworkGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":484,"bases":[],"methods":[{"name":"__init__","lineno":487,"docstring":null},{"name":"generate_testing_framework","lineno":520,"docstring":"Generate comprehensive testing framework for the project.\n\nReturns:\n    TestingFrameworkGeneratorOutput with generated framework"},{"name":"_write_testing_files","lineno":569,"docstring":"Write testing files to the project directory and validate them."}],"docstring":"Main testing framework generator orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/assistants_api_manager.py","name":"AssistantsAPIManager","data":{"name":"AssistantsAPIManager","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/assistants_api_manager.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the Assistants API Manager.\n\nArgs:\n    api_key: OpenAI API key (defaults to environment variable)\n    model: Model to use for the assistant"},{"name":"create_assistant","lineno":43,"docstring":"Create a new assistant with specified configuration.\n\nArgs:\n    name: Name of the assistant\n    instructions: Instructions for the assistant's behavior\n    tools: List of tools to enable (code_interpreter, file_search, functions)\n\nReturns:\n    Created assistant object"},{"name":"create_thread","lineno":72,"docstring":"Create a new conversation thread.\n\nReturns:\n    Created thread object"},{"name":"add_message","lineno":88,"docstring":"Add a message to the current thread.\n\nArgs:\n    content: Message content\n    role: Message role (user/assistant)\n\nReturns:\n    Created message object"},{"name":"run_assistant","lineno":114,"docstring":"Run the assistant on the current thread.\n\nReturns:\n    Run object"},{"name":"wait_for_run_completion","lineno":136,"docstring":"Wait for a run to complete.\n\nArgs:\n    run: Run to wait for (defaults to current run)\n    timeout: Maximum time to wait in seconds\n\nReturns:\n    Completed run object"},{"name":"get_latest_messages","lineno":170,"docstring":"Get the latest messages from the thread.\n\nArgs:\n    limit: Maximum number of messages to retrieve\n\nReturns:\n    List of messages (most recent first)"},{"name":"get_assistant_response","lineno":194,"docstring":"Get the latest assistant response from the thread.\n\nReturns:\n    Assistant's response text or None if no response"},{"name":"handle_required_action","lineno":213,"docstring":"Handle required actions from the assistant (e.g., function calls).\n\nArgs:\n    run: Run that requires action\n\nReturns:\n    Updated run after handling action"},{"name":"start_conversation","lineno":250,"docstring":"Start a new conversation with the assistant.\n\nArgs:\n    name: Assistant name\n    instructions: Assistant instructions\n    initial_message: First user message\n\nReturns:\n    Assistant's response"},{"name":"continue_conversation","lineno":290,"docstring":"Continue an existing conversation.\n\nArgs:\n    message: User message\n\nReturns:\n    Assistant's response"},{"name":"cleanup","lineno":322,"docstring":"Clean up resources (delete assistant and thread)."}],"docstring":"Manages OpenAI Assistants API for conversational interactions.\n\nThis class provides a high-level interface for creating assistants,\nmanaging threads, and conducting real-time conversations.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/base_processor.py","name":"BaseProcessor","data":{"name":"BaseProcessor","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/base_processor.py","lineno":48,"bases":[],"methods":[{"name":"__init__","lineno":64,"docstring":"Initialize BaseProcessor.\n\nArgs:\n    config_manager: Configuration manager instance.\n    module_name: Name of the module for directory management."},{"name":"process_analysis","lineno":98,"docstring":"Process analysis with standardized workflow.\n\nArgs:\n    input_data: Input data object containing analysis parameters.\n    system_prompt: System prompt for the analysis.\n    output_schema: Pydantic schema for structured output.\n    title: Title for the analysis and output files.\n    instructions: Optional additional instructions.\n    context_files: Optional list of context file paths.\n    output_formats: Optional list of output formats. Defaults to ['json', 'markdown', 'html'].\n\nReturns:\n    Dictionary containing the analysis results and file paths.\n\nRaises:\n    ValueError: If required parameters are missing or invalid.\n    Exception: If processing fails."},{"name":"process_generation","lineno":180,"docstring":"Process code generation with standardized workflow.\n\nArgs:\n    input_data: Input data object containing generation parameters.\n    system_prompt: System prompt for the generation.\n    title: Title for the generation and output files.\n    context: Optional context dictionary for generation.\n    format_instructions: Optional format instructions.\n    context_files: Optional list of context file paths.\n    output_formats: Optional list of output formats. Defaults to ['json', 'markdown'].\n\nReturns:\n    Dictionary containing the generation results and file paths.\n\nRaises:\n    ValueError: If required parameters are missing or invalid.\n    Exception: If processing fails."},{"name":"load_and_validate_input","lineno":268,"docstring":"Load and validate input file.\n\nArgs:\n    file_path: Path to the input file.\n    required_fields: Optional list of required fields to validate.\n\nReturns:\n    Dictionary containing the loaded data.\n\nRaises:\n    ValueError: If file loading or validation fails.\n    Exception: If unexpected errors occur."},{"name":"create_summary_report","lineno":309,"docstring":"Create a summary report in markdown format.\n\nArgs:\n    data: Data to include in the summary report.\n    title: Title for the report.\n\nReturns:\n    Markdown formatted summary report.\n\nRaises:\n    ValueError: If data is not a dictionary or title is empty.\n    Exception: If report generation fails."},{"name":"cleanup_old_files","lineno":344,"docstring":"Clean up old files in the module's output directory.\n\nArgs:\n    days_old: Age threshold in days for file deletion.\n\nRaises:\n    Exception: If cleanup operation fails."},{"name":"_prepare_analysis_context","lineno":387,"docstring":"Prepare analysis context from input data.\n\nArgs:\n    input_data: Input data object.\n\nReturns:\n    Dictionary containing analysis context.\n\nRaises:\n    Exception: If context preparation fails."},{"name":"_load_context_files","lineno":423,"docstring":"Load and concatenate context files for prompt inclusion.\n\nArgs:\n    file_paths: List of file paths to include.\n\nReturns:\n    Concatenated content of all context files.\n\nRaises:\n    Exception: If file reading fails."}],"docstring":"Comprehensive class for centralized processing workflows in the O3 Code Generator.\n\nAttributes:\n    config_manager: Configuration manager instance.\n    logger: O3Logger instance.\n    module_name: Name of the current module for directory management.\n    directory_manager: DirectoryManager instance for filesystem operations.\n    input_loader: UniversalInputLoader instance for loading input files.\n    prompt_builder: PromptBuilder instance for constructing prompts.\n    o3_model_generator: O3ModelGenerator instance for interacting with models.\n    output_formatter: OutputFormatter instance for formatting outputs.\n    file_generator: FileGenerator instance for file creation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","name":"O3ModelGenerator","data":{"name":"O3ModelGenerator","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":"Initialize the O3ModelGenerator with API key and model name.\n\nArgs:\n    api_key (Optional[str]): OpenAI API key; if None, fetched from environment variable 'OPENAI_API_KEY'.\n    model (str): Model identifier for the generation. Defaults to 'o4-mini'."},{"name":"generate","lineno":79,"docstring":"Generate a response from the model using the appropriate API.\n\nArgs:\n    messages (list): List of message dicts (role/content)\n    response_format (Optional[Dict[str, Any]]): JSON schema for structured output\n\nReturns:\n    str: Model output (JSON string if requested by prompt)"},{"name":"_ensure_json_string","lineno":165,"docstring":"Helper to ensure the output is a JSON string if possible, else return as-is."},{"name":"generate_stream","lineno":181,"docstring":"Generate a streaming response. This method streams tokens as they are generated.\n\nArgs:\n    messages (List[Dict[str, str]]): List of messages in the conversation.\n    response_format (Optional[Union[str, Dict[str, Any]]]): Expected response format schema or identifier.\n    temperature (float): Sampling temperature.\n    stream_handler (Optional[Any]): A callable that processes each streamed token. Should accept a single argument.\n    **kwargs: Additional arguments to pass to the API call.\n\nRaises:\n    OpenAIError: If there is an error during the API streaming call.\n    Exception: For other unforeseen errors."}],"docstring":"Modernized O3ModelGenerator class using the latest OpenAI Python SDK patterns.\nSupports both ChatCompletions and Responses APIs with structured JSON outputs.\n\nAttributes:\n    api_key (str): OpenAI API key for authentication.\n    model (str): Model name (supports gpt-4.1* and o3* families).","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","name":"OpenAIError","data":{"name":"OpenAIError","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","lineno":17,"bases":["Exception"],"methods":[],"docstring":"Generic OpenAI error for compatibility.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/prompt_builder.py","name":"PromptBuilder","data":{"name":"PromptBuilder","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/utils/prompt_builder.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize PromptBuilder.\n\nLoads project and universal rules, sets up default prompt templates,\nand maximum prompt length."},{"name":"_load_rules","lineno":58,"docstring":"Load project_rules.md and universal_rules.md into memory.\n\nLogs a warning if either file is missing or unreadable."},{"name":"_prepend_rules","lineno":89,"docstring":"Prepend loaded project and universal rules to the system prompt.\n\nArgs:\n    system_prompt: Original system prompt.\n\nReturns:\n    Combined prompt string with rules at the top."},{"name":"_build_prompt","lineno":111,"docstring":"Generic prompt builder that handles rule injection, formatting, and validation.\n\nArgs:\n    template_key: Key for default_templates to use.\n    input_data: Input data object for the prompt.\n    system_prompt: Base system prompt.\n    template_vars: Additional variables required by the template.\n\nReturns:\n    Formatted prompt string with rules prepended.\n\nRaises:\n    ValueError: If input_data is None."},{"name":"build_analysis_prompt","lineno":171,"docstring":"Build comprehensive prompt for analysis with prepended rules.\n\nArgs:\n    input_data: Input data object containing analysis parameters.\n    analysis_data: Dictionary containing analysis context and results.\n    system_prompt: Base system prompt (cannot be empty).\n    instructions: Optional additional instructions.\n\nReturns:\n    Formatted prompt string for analysis.\n\nRaises:\n    ValueError: If input_data is None or system_prompt is empty."},{"name":"build_generation_prompt","lineno":206,"docstring":"Build prompt for code generation with prepended rules.\n\nArgs:\n    input_data: Input data object containing generation parameters.\n    context: Optional context dictionary for generation.\n    system_prompt: Base system prompt.\n    format_instructions: Optional format instructions.\n\nReturns:\n    Formatted prompt string for code generation.\n\nRaises:\n    ValueError: If input_data is None."},{"name":"validate_prompt_length","lineno":237,"docstring":"Validate prompt length for model limits.\n\nArgs:\n    prompt: Prompt string to validate.\n    max_length: Maximum allowed length (defaults to instance max_prompt_length).\n\nReturns:\n    True if prompt is within length limits, False otherwise."},{"name":"_get_default_templates","lineno":264,"docstring":"Get default prompt templates.\n\nReturns:\n    Dictionary of default prompt templates."}],"docstring":"Centralized prompt construction for O3 models with automatic rule injection.\n\nOn initialization, loads project-specific and universal rules and injects them\nat the top of every system prompt in analysis and generation methods.\n\nAttributes:\n    max_prompt_length: Maximum allowed prompt length.\n    default_templates: Default templates for prompts.\n    project_rules: Contents of project_rules.md or empty string if unavailable.\n    universal_rules: Contents of universal_rules.md or empty string if unavailable.\n    logger: Logger instance.\n    loader: UniversalInputLoader instance.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/validate_with_analyzer.py","name":"ValidateWithAnalyzer","data":{"name":"ValidateWithAnalyzer","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/validate_with_analyzer.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":34,"docstring":"Initialize the validator with logger and analyzer."},{"name":"validate_syntax","lineno":41,"docstring":"Check for syntax errors in a Python file.\n\nArgs:\n    file_path: Path to the Python file to validate.\n\nRaises:\n    SyntaxError: If a syntax error is found in the file.\n    Exception: If there is an error reading the file."},{"name":"run","lineno":66,"docstring":"Run syntax validation and analysis on the specified file.\n\nArgs:\n    file_path_str: String path to the file to process."}],"docstring":"Class to validate Python files using a syntax check and IntelligentFileAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging messages.\n    analyzer: IntelligentFileAnalyzer instance for file quality analysis.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/workflow/autonomous_workflow.py","name":"AutonomousWorkflow","data":{"name":"AutonomousWorkflow","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/workflow/autonomous_workflow.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":"Initialize the autonomous workflow orchestrator.\n\nArgs:\n    output_base_dir: Base directory for workflow outputs"},{"name":"_initialize_step_executors","lineno":53,"docstring":"Initialize step executors for each workflow phase."},{"name":"execute_workflow","lineno":102,"docstring":"Execute the complete autonomous workflow.\n\nArgs:\n    problem_statement: The initial problem to solve\n    enabled_steps: Optional list of steps to execute (defaults to all)\n    workflow_config: Optional configuration for workflow execution\n\nReturns:\n    Completed WorkflowContext with all results"},{"name":"_execute_step","lineno":203,"docstring":"Execute a single workflow step with context.\n\nArgs:\n    step_name: Name of the step to execute\n    context: Current workflow context\n\nReturns:\n    Step output"},{"name":"_execute_brainstorm","lineno":224,"docstring":"Execute brainstorm step with workflow context."},{"name":"_execute_idea_analyze","lineno":264,"docstring":"Execute idea analysis step with automatic best idea selection."},{"name":"_execute_market_research","lineno":299,"docstring":"Execute market research step with workflow context."},{"name":"_execute_feasibility_assess","lineno":394,"docstring":"Execute feasibility assessment step with workflow context."},{"name":"_execute_requirements_analyze","lineno":474,"docstring":"Execute requirements analysis step - SDLC focused, no market research."},{"name":"_format_competitor_info","lineno":550,"docstring":"Format competitor information for requirements context."},{"name":"_extract_technical_reqs","lineno":566,"docstring":"Extract technical requirements from requirements analysis result."},{"name":"_extract_performance_reqs","lineno":577,"docstring":"Extract performance requirements."},{"name":"_extract_security_reqs","lineno":594,"docstring":"Extract security requirements."},{"name":"_extract_scalability_reqs","lineno":611,"docstring":"Extract scalability requirements."},{"name":"_extract_usability_reqs","lineno":622,"docstring":"Extract usability requirements."},{"name":"_extract_reliability_reqs","lineno":639,"docstring":"Extract reliability requirements."},{"name":"_generate_use_cases","lineno":656,"docstring":"Generate use cases from user stories."},{"name":"_execute_tech_spec_generate","lineno":673,"docstring":"Generate technical specifications with real AI (replacing broken generator)."},{"name":"_execute_api_spec_generate","lineno":744,"docstring":"Generate API specification using O3 model (removes logger issues)."},{"name":"_execute_database_generate","lineno":807,"docstring":"Execute database schema generation step with workflow context."},{"name":"_create_placeholder_market_research_result","lineno":866,"docstring":"Create a placeholder market research result when the actual processor fails."},{"name":"_extract_opportunities","lineno":948,"docstring":"Extract market opportunities from analysis."},{"name":"_extract_threats","lineno":976,"docstring":"Extract market threats from analysis."},{"name":"_execute_system_design","lineno":1008,"docstring":"Execute system design step with real AI generation."},{"name":"_format_requirements_list","lineno":1135,"docstring":"Format requirements list for prompts."},{"name":"_format_system_components","lineno":1151,"docstring":"Format system components for prompts."},{"name":"_extract_components_from_text","lineno":1172,"docstring":"Extract system components from text response."},{"name":"_extract_tech_stack_from_text","lineno":1213,"docstring":"Extract technology stack from text response."},{"name":"_extract_components_from_design_text","lineno":1253,"docstring":"Extract detailed components from design text response."},{"name":"_extract_component_name","lineno":1294,"docstring":"Extract component name from text."},{"name":"_extract_component_description","lineno":1314,"docstring":"Extract component description from text."},{"name":"_extract_responsibilities","lineno":1328,"docstring":"Extract component responsibilities from text."},{"name":"_extract_interfaces","lineno":1346,"docstring":"Extract component interfaces from text."},{"name":"_extract_relationships_from_text","lineno":1358,"docstring":"Extract component relationships from text."},{"name":"_extract_user_interfaces_from_text","lineno":1380,"docstring":"Extract user interface specifications from text."},{"name":"_extract_api_interfaces_from_text","lineno":1429,"docstring":"Extract API interface specifications from text."},{"name":"_extract_integration_patterns_from_text","lineno":1460,"docstring":"Extract integration patterns from text."},{"name":"_extract_interface_name","lineno":1481,"docstring":"Extract interface name from line."},{"name":"_extract_ui_components","lineno":1501,"docstring":"Extract UI components from line."},{"name":"_map_api_protocol","lineno":1523,"docstring":"Map API keyword to protocol."},{"name":"_execute_component_design","lineno":1534,"docstring":"Execute component design step with real AI generation."},{"name":"_execute_interface_design","lineno":1683,"docstring":"Execute interface design step with real AI generation."},{"name":"_execute_implementation_plan","lineno":1844,"docstring":"Generate a detailed implementation roadmap using an O3 model."},{"name":"_execute_testing_strategy","lineno":1952,"docstring":"Generate a comprehensive testing strategy using an O3 model."},{"name":"_format_user_stories","lineno":2040,"docstring":"Format user stories for technical specification context."},{"name":"_generate_api_endpoints","lineno":2053,"docstring":"Generate API endpoints based on functional requirements."},{"name":"_generate_api_models","lineno":2108,"docstring":"Generate API models based on data models."},{"name":"_generate_database_tables","lineno":2138,"docstring":"Generate database tables based on API models."},{"name":"_generate_database_relationships","lineno":2169,"docstring":"Generate database relationships."},{"name":"_generate_database_indexes","lineno":2183,"docstring":"Generate database indexes."},{"name":"_map_api_type_to_db_type","lineno":2193,"docstring":"Map API types to database types."},{"name":"_create_placeholder_tech_spec_result","lineno":2205,"docstring":"Create placeholder technical specification result."},{"name":"_create_placeholder_api_spec_result","lineno":2259,"docstring":"Create placeholder API specification result."},{"name":"_create_placeholder_database_result","lineno":2313,"docstring":"Create placeholder database schema result."},{"name":"_placeholder_executor","lineno":2378,"docstring":"Placeholder executor for steps not yet implemented."},{"name":"_generate_workflow_summary","lineno":2394,"docstring":"Generate a comprehensive workflow summary."},{"name":"resume_workflow","lineno":2501,"docstring":"Resume a workflow from a saved context.\n\nArgs:\n    context_file: Path to saved workflow context\n    from_step: Optional step to resume from (defaults to next incomplete step)\n\nReturns:\n    Updated WorkflowContext"},{"name":"get_available_steps","lineno":2578,"docstring":"Get list of all available workflow steps."},{"name":"validate_step_sequence","lineno":2582,"docstring":"Validate and reorder steps according to dependencies.\n\nArgs:\n    steps: List of steps to validate\n\nReturns:\n    Validated and properly ordered step list"}],"docstring":"Orchestrates autonomous execution of the complete code generation workflow.\n\nTakes a single problem statement and executes all phases automatically,\nmanaging context flow between steps and ensuring optimal idea selection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/workflow/idea_selector.py","name":"BestIdeaSelector","data":{"name":"BestIdeaSelector","file_path":"libs/opsvi-shared/opsvi_shared/tools/code_generation/o3_code_generator/workflow/idea_selector.py","lineno":12,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":"Initialize the idea selector."},{"name":"select_best_idea","lineno":37,"docstring":"Select the best idea from brainstorm results.\n\nArgs:\n    brainstorm_results: Results from brainstorm step\n    original_problem: The original problem statement\n    selection_criteria: Optional custom weights for criteria\n\nReturns:\n    Tuple of (selected_idea, selection_rationale)"},{"name":"_score_idea","lineno":99,"docstring":"Score an individual idea across all criteria.\n\nArgs:\n    idea: The idea to score\n    original_problem: Original problem statement for alignment scoring\n\nReturns:\n    Dictionary of scores for each criterion (0.0 to 1.0)"},{"name":"_score_feasibility","lineno":120,"docstring":"Score the feasibility of implementing the idea.\n\nConsiders:\n- Implementation complexity\n- Resource requirements\n- Technical difficulty\n- Timeline feasibility"},{"name":"_score_impact","lineno":199,"docstring":"Score the potential impact of the idea.\n\nConsiders:\n- User value\n- Market potential\n- Problem-solving effectiveness\n- Scalability"},{"name":"_score_novelty","lineno":276,"docstring":"Score the novelty and innovation of the idea.\n\nConsiders:\n- Uniqueness\n- Innovation level\n- Creative approach\n- Differentiation"},{"name":"_score_alignment","lineno":351,"docstring":"Score how well the idea aligns with the original problem.\n\nUses keyword matching and semantic similarity to determine alignment."},{"name":"_score_clarity","lineno":391,"docstring":"Score how clearly defined and detailed the idea is.\n\nConsiders:\n- Description completeness\n- Implementation detail\n- Specificity\n- Structure"},{"name":"_generate_selection_rationale","lineno":442,"docstring":"Generate a human-readable rationale for why this idea was selected.\n\nArgs:\n    best_idea_entry: The selected best idea with scores\n    all_scored_ideas: All ideas with their scores\n    original_problem: Original problem statement\n\nReturns:\n    Detailed rationale string"},{"name":"compare_ideas","lineno":543,"docstring":"Compare and rank all ideas with detailed scoring.\n\nArgs:\n    ideas: List of ideas to compare\n    original_problem: Original problem statement\n\nReturns:\n    List of ideas with scores, sorted by total score"}],"docstring":"Intelligent algorithm for automatically selecting the best idea from brainstorm results.\n\nUses a multi-criteria scoring system that considers:\n- Feasibility (ease of implementation)\n- Impact (potential value and reach)\n- Novelty (innovation and uniqueness)\n- Alignment (match with original problem)\n- Clarity (how well-defined the idea is)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"multi_critic_integration.py","name":"DevelopmentSession","data":{"name":"DevelopmentSession","file_path":"multi_critic_integration.py","lineno":18,"bases":[],"methods":[{"name":"__post_init__","lineno":29,"docstring":null}],"docstring":"Tracks a complete development session with main agent and critics.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"multi_critic_integration.py","name":"MultiCriticWorkflow","data":{"name":"MultiCriticWorkflow","file_path":"multi_critic_integration.py","lineno":34,"bases":[],"methods":[{"name":"__init__","lineno":46,"docstring":null},{"name":"start_development_session","lineno":51,"docstring":"Start a new development session."},{"name":"_build_final_result","lineno":170,"docstring":"Build final result from development session."}],"docstring":"Complete workflow integrating main agent with multi-critic system.\n\nPattern:\n1. Main agent generates code\n2. Multi-critic analyzes in parallel\n3. Consolidator provides single verdict + ordered actions\n4. Main agent applies fixes\n5. Repeat until accept or budget exhausted","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","lineno":57,"bases":["BaseModel"],"methods":[],"docstring":"Describes agent capabilities for discovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","name":"AgentManifest","data":{"name":"AgentManifest","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","lineno":68,"bases":["BaseModel"],"methods":[],"docstring":"Agent service manifest for discovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","name":"AgentDiscoveryService","data":{"name":"AgentDiscoveryService","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/agent_discovery.py","lineno":83,"bases":[],"methods":[{"name":"__init__","lineno":86,"docstring":null},{"name":"setup_routes","lineno":93,"docstring":"Setup Agent Protocol compliant endpoints"},{"name":"_generate_manifest","lineno":432,"docstring":"Generate agent manifest for service discovery"},{"name":"_get_capabilities","lineno":464,"docstring":"Get list of agent capabilities"}],"docstring":"Service for agent discovery, registration, and protocol compliance","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/example_external_agent.py","name":"ExternalAIAgent","data":{"name":"ExternalAIAgent","file_path":"opsvi/opsvi_opsvi/applications/agent_hub/example_external_agent.py","lineno":12,"bases":[],"methods":[{"name":"__init__","lineno":17,"docstring":null}],"docstring":"Example external AI agent that discovers and uses our Agent Hub","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"BaseLLMAgent","data":{"name":"BaseLLMAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":139,"bases":[],"methods":[{"name":"__init__","lineno":140,"docstring":null},{"name":"run","lineno":145,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"AnalystAgent","data":{"name":"AnalystAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":158,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":159,"docstring":null},{"name":"run","lineno":162,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":166,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":167,"docstring":null},{"name":"run","lineno":170,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":174,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":175,"docstring":null},{"name":"run","lineno":178,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":182,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":183,"docstring":null},{"name":"run","lineno":186,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"DocumentationAgent","data":{"name":"DocumentationAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":192,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":193,"docstring":null},{"name":"run","lineno":201,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"ConfigAgent","data":{"name":"ConfigAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":207,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":208,"docstring":null},{"name":"run","lineno":216,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"DiagramAgent","data":{"name":"DiagramAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":222,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":223,"docstring":null},{"name":"run","lineno":231,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"UnitTestAgent","data":{"name":"UnitTestAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":237,"bases":["BaseLLMAgent"],"methods":[{"name":"__init__","lineno":238,"docstring":null},{"name":"run","lineno":246,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":278,"bases":[],"methods":[{"name":"__init__","lineno":279,"docstring":null},{"name":"review","lineno":282,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"CoderAgent","data":{"name":"CoderAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":359,"bases":[],"methods":[{"name":"__init__","lineno":360,"docstring":null},{"name":"generate","lineno":365,"docstring":null},{"name":"run","lineno":393,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"DocumenterAgent","data":{"name":"DocumenterAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":397,"bases":["CoderAgent"],"methods":[{"name":"run","lineno":398,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":402,"bases":[],"methods":[{"name":"__init__","lineno":403,"docstring":null},{"name":"select_model","lineno":409,"docstring":"Select the lowest capable model tier for the task.\nPrefer efficient models (mini/nano) to maximize free usage.\nEscalate to premium (gpt-4.1, o3, etc.) only if needed.\nLog the selection and reasoning for audit."},{"name":"select_prompt","lineno":439,"docstring":null},{"name":"run","lineno":443,"docstring":null},{"name":"log_model_selection","lineno":513,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"ArtifactPlannerAgent","data":{"name":"ArtifactPlannerAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":690,"bases":[],"methods":[{"name":"__init__","lineno":691,"docstring":null},{"name":"plan","lineno":694,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"IngestionAgent","data":{"name":"IngestionAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":720,"bases":[],"methods":[{"name":"__init__","lineno":721,"docstring":null},{"name":"run","lineno":724,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"ValidatorAgent","data":{"name":"ValidatorAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":794,"bases":[],"methods":[{"name":"validate","lineno":795,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"SummarizerAgent","data":{"name":"SummarizerAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":822,"bases":[],"methods":[{"name":"__init__","lineno":823,"docstring":null},{"name":"summarize","lineno":826,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":840,"bases":[],"methods":[{"name":"__init__","lineno":841,"docstring":null},{"name":"extract","lineno":844,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":853,"bases":[],"methods":[{"name":"__init__","lineno":854,"docstring":null},{"name":"design","lineno":857,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/generate_app.py","lineno":866,"bases":[],"methods":[{"name":"__init__","lineno":867,"docstring":null},{"name":"spec","lineno":870,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/prompt_schema.py","name":"AgentPromptSchema","data":{"name":"AgentPromptSchema","file_path":"opsvi/opsvi_opsvi/applications/agentic_app_dev/prompt_schema.py","lineno":17,"bases":[],"methods":[{"name":"from_yaml","lineno":34,"docstring":null},{"name":"from_json","lineno":42,"docstring":null},{"name":"validate","lineno":49,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"AnalystAgent","data":{"name":"AnalystAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":33,"bases":[],"methods":[{"name":"__init__","lineno":34,"docstring":null},{"name":"run","lineno":37,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":null},{"name":"design","lineno":73,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":97,"bases":[],"methods":[{"name":"__init__","lineno":98,"docstring":null},{"name":"spec","lineno":119,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":143,"bases":[],"methods":[{"name":"__init__","lineno":144,"docstring":null},{"name":"run","lineno":147,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":160,"bases":[],"methods":[{"name":"__init__","lineno":161,"docstring":null},{"name":"review","lineno":164,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"CoderAgent","data":{"name":"CoderAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":238,"bases":[],"methods":[{"name":"__init__","lineno":239,"docstring":null},{"name":"generate","lineno":244,"docstring":null},{"name":"run","lineno":272,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"DocumenterAgent","data":{"name":"DocumenterAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":276,"bases":["CoderAgent"],"methods":[{"name":"run","lineno":277,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":281,"bases":[],"methods":[{"name":"__init__","lineno":282,"docstring":null},{"name":"select_model","lineno":288,"docstring":"Select the lowest capable model tier for the task.\nPrefer efficient models (mini/nano) to maximize free usage.\nEscalate to premium (gpt-4.1, o3, etc.) only if needed.\nLog the selection and reasoning for audit."},{"name":"select_prompt","lineno":318,"docstring":null},{"name":"run","lineno":322,"docstring":null},{"name":"log_model_selection","lineno":390,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"ConfigAgent","data":{"name":"ConfigAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":413,"bases":[],"methods":[{"name":"__init__","lineno":414,"docstring":null},{"name":"run","lineno":417,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"DiagramAgent","data":{"name":"DiagramAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":426,"bases":[],"methods":[{"name":"__init__","lineno":427,"docstring":null},{"name":"run","lineno":430,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"ArtifactPlannerAgent","data":{"name":"ArtifactPlannerAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":572,"bases":[],"methods":[{"name":"__init__","lineno":573,"docstring":null},{"name":"plan","lineno":576,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"IngestionAgent","data":{"name":"IngestionAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":605,"bases":[],"methods":[{"name":"__init__","lineno":606,"docstring":null},{"name":"run","lineno":609,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"ValidatorAgent","data":{"name":"ValidatorAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":679,"bases":[],"methods":[{"name":"validate","lineno":680,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"SummarizerAgent","data":{"name":"SummarizerAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":707,"bases":[],"methods":[{"name":"__init__","lineno":708,"docstring":null},{"name":"summarize","lineno":711,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/generate_content.py","lineno":725,"bases":[],"methods":[{"name":"__init__","lineno":726,"docstring":null},{"name":"extract","lineno":729,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/prompt_schema.py","name":"AgentPromptSchema","data":{"name":"AgentPromptSchema","file_path":"opsvi/opsvi_opsvi/applications/agentic_code_doc_gen/prompt_schema.py","lineno":17,"bases":[],"methods":[{"name":"from_yaml","lineno":34,"docstring":null},{"name":"from_json","lineno":42,"docstring":null},{"name":"validate","lineno":49,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"DevAgent","data":{"name":"DevAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":972,"bases":[],"methods":[{"name":"__init__","lineno":973,"docstring":null},{"name":"generate","lineno":978,"docstring":"Try each model in order, escalate on failure. Always return a dict."},{"name":"_build_prompt","lineno":1032,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"CriticAgent","data":{"name":"CriticAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1056,"bases":[],"methods":[{"name":"__init__","lineno":1057,"docstring":null},{"name":"review","lineno":1061,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"RouterAgent","data":{"name":"RouterAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1094,"bases":[],"methods":[{"name":"__init__","lineno":1095,"docstring":null},{"name":"run_pipeline","lineno":1102,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"RequirementsAgent","data":{"name":"RequirementsAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1135,"bases":[],"methods":[{"name":"__init__","lineno":1136,"docstring":null},{"name":"gather","lineno":1140,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"DesignAgent","data":{"name":"DesignAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1148,"bases":[],"methods":[{"name":"__init__","lineno":1149,"docstring":null},{"name":"design","lineno":1153,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"SpecAgent","data":{"name":"SpecAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1161,"bases":[],"methods":[{"name":"__init__","lineno":1162,"docstring":null},{"name":"specify","lineno":1166,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","name":"PromptGenAgent","data":{"name":"PromptGenAgent","file_path":"opsvi/opsvi_opsvi/applications/agentic_doc_manager/agent_workflows.py","lineno":1174,"bases":[],"methods":[{"name":"__init__","lineno":1175,"docstring":null},{"name":"generate_prompt","lineno":1179,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_code_generator.py","name":"AICodeGenerator","data":{"name":"AICodeGenerator","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_code_generator.py","lineno":42,"bases":[],"methods":[{"name":"__init__","lineno":45,"docstring":null},{"name":"generate_project_code","lineno":49,"docstring":"Generate complete project code using AI based on requirements and architecture.\n\nArgs:\n    requirements: Structured requirements from user input\n    architecture: AI-generated architecture specification\n    project_type: Type of project to generate\n    insights: Optional research insights to inform code generation\n\nReturns:\n    Complete code generation with all files"},{"name":"_build_system_prompt","lineno":105,"docstring":"Build system prompt for code generation."},{"name":"_build_user_prompt","lineno":191,"docstring":"Build user prompt with specific requirements and architecture."},{"name":"_fallback_generation","lineno":232,"docstring":"Fallback generation when AI fails."}],"docstring":"AI-powered code generator that creates project files based on requirements.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_documentation_generator.py","name":"AIDocumentationGenerator","data":{"name":"AIDocumentationGenerator","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_documentation_generator.py","lineno":86,"bases":[],"methods":[{"name":"__init__","lineno":89,"docstring":null},{"name":"generate_documentation","lineno":93,"docstring":"Generate comprehensive documentation based on generated code and requirements.\n\nArgs:\n    generated_files: Main application files\n    test_files: Generated test files\n    requirements: Original requirements specification\n    architecture: Architecture specification\n    project_type: Type of project\n\nReturns:\n    Complete documentation package"},{"name":"_analyze_code_for_docs","lineno":165,"docstring":"Analyze code structure for documentation purposes."},{"name":"_get_decorator_name","lineno":277,"docstring":"Extract decorator name from AST node."},{"name":"_get_base_name","lineno":288,"docstring":"Extract base class name from AST node."},{"name":"_build_docs_system_prompt","lineno":297,"docstring":"Build system prompt for documentation generation."},{"name":"_build_docs_user_prompt","lineno":379,"docstring":"Build user prompt with code analysis and requirements for documentation."},{"name":"_fallback_documentation_generation","lineno":467,"docstring":"Fallback documentation generation when AI fails."}],"docstring":"AI-powered documentation generator that analyzes code and creates comprehensive docs.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_test_generator.py","name":"AITestGenerator","data":{"name":"AITestGenerator","file_path":"opsvi/opsvi_opsvi/applications/code_gen/ai_test_generator.py","lineno":54,"bases":[],"methods":[{"name":"__init__","lineno":57,"docstring":null},{"name":"generate_test_suite","lineno":61,"docstring":"Generate comprehensive test suite based on generated code.\n\nArgs:\n    generated_files: List of generated code files with content\n    requirements: Original requirements specification\n    architecture: Architecture specification\n    project_type: Type of project\n\nReturns:\n    Complete test suite with intelligent test cases"},{"name":"_analyze_code_structure","lineno":125,"docstring":"Analyze the structure of generated code to understand what to test."},{"name":"_get_decorator_name","lineno":208,"docstring":"Extract decorator name from AST node."},{"name":"_get_base_name","lineno":219,"docstring":"Extract base class name from AST node."},{"name":"_build_test_system_prompt","lineno":228,"docstring":"Build system prompt for test generation."},{"name":"_build_test_user_prompt","lineno":308,"docstring":"Build user prompt with code analysis and requirements."},{"name":"_fallback_test_generation","lineno":370,"docstring":"Fallback test generation when AI fails."}],"docstring":"AI-powered test generator that analyzes code and creates comprehensive tests.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/generated/src/app/weather.py","name":"WeatherAPIError","data":{"name":"WeatherAPIError","file_path":"opsvi/opsvi_opsvi/applications/code_gen/generated/src/app/weather.py","lineno":10,"bases":["Exception"],"methods":[],"docstring":"Raised when there is a failure to retrieve weather information from the API.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/08bb2702-61ca-459f-8cb5-ad4300dd8f68/src/app/middleware.py","name":"LoggingMiddleware","data":{"name":"LoggingMiddleware","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/08bb2702-61ca-459f-8cb5-ad4300dd8f68/src/app/middleware.py","lineno":14,"bases":["BaseHTTPMiddleware"],"methods":[],"docstring":"Middleware for logging details of incoming requests and responses.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/0fa64961-24af-4503-b98e-9179615df2f4/src/csv_reporter/data_processor.py","name":"DataProcessor","data":{"name":"DataProcessor","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/0fa64961-24af-4503-b98e-9179615df2f4/src/csv_reporter/data_processor.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"process","lineno":24,"docstring":"Process data and return a summary suitable for reporting.\n\nArgs:\n    df: DataFrame to summarize.\n    progress_cb: Optional callback for progress bar (receives current row number).\nReturns:\n    dict summary, keyed by column name, value is dict of stats.\nRaises:\n    ValueError: On failure to process."}],"docstring":"Analyzes and summarizes input CSV data.\nProvides summary stats per column, such as count, mean, min/max for numerics,\nand count of unique values for categoricals.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/52fcf000-4d5e-4f4d-ac14-e290f2df6599/src/app/schemas.py","name":"GitHubAnalyzeRequest","data":{"name":"GitHubAnalyzeRequest","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/52fcf000-4d5e-4f4d-ac14-e290f2df6599/src/app/schemas.py","lineno":115,"bases":["BaseModel"],"methods":[],"docstring":null,"agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/5ac10d3a-2287-4030-b787-454c497bac54/src/app/weather.py","name":"WeatherAPIError","data":{"name":"WeatherAPIError","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/5ac10d3a-2287-4030-b787-454c497bac54/src/app/weather.py","lineno":10,"bases":["Exception"],"methods":[],"docstring":"Raised when there is a failure to retrieve weather information from the API.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/86af23a5-d2e0-42ad-964c-813f30fc5791/src/scraper/robots_checker.py","name":"RobotsChecker","data":{"name":"RobotsChecker","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/86af23a5-d2e0-42ad-964c-813f30fc5791/src/scraper/robots_checker.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"is_allowed","lineno":25,"docstring":"Checks if the URL may be crawled per robots.txt.\nArgs:\n    url (str): The URL to be checked.\nReturns:\n    bool: True if allowed, False otherwise."},{"name":"_get_domain","lineno":46,"docstring":null},{"name":"_fetch_robots","lineno":50,"docstring":null}],"docstring":"Checks robots.txt compliance for the specified URLs/domains.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/agent_manager.py","name":"AgentManager","data":{"name":"AgentManager","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/agent_manager.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"_build_agent_prompt","lineno":34,"docstring":"Constructs a system prompt for the OpenAI agent."}],"docstring":"Manages multiple agent types and executes their tasks by invoking the OpenAI reasoning interface.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/openai_interface.py","name":"OpenAIReasoningInterface","data":{"name":"OpenAIReasoningInterface","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/openai_interface.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"_validate_structured_response","lineno":64,"docstring":null}],"docstring":"Abstraction for OpenAI model calls with robust error handling & JSON structure enforcement.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/orchestrator.py","name":"OrchestrationEngine","data":{"name":"OrchestrationEngine","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/orchestrator.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"run","lineno":29,"docstring":"Synchronously runs the orchestration workflow with progress reporting.\nReturns a dictionary of all agent task outputs."}],"docstring":"Interprets validated input, builds the agent workflow, manages execution flows.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/response_aggregator.py","name":"AgentResultModel","data":{"name":"AgentResultModel","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/bb2392e8-3253-46ba-9791-301a06e4e3b5/src/multiagent_cli/response_aggregator.py","lineno":10,"bases":["BaseModel"],"methods":[],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/ed3fee95-9e77-4547-bada-98bf1cb8bdf0/src/ai_collab_task_manager/ai_service.py","name":"AIService","data":{"name":"AIService","file_path":"opsvi/opsvi_opsvi/applications/code_gen/jobs/ed3fee95-9e77-4547-bada-98bf1cb8bdf0/src/ai_collab_task_manager/ai_service.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"schedule_ai_prio_and_estimate","lineno":33,"docstring":null},{"name":"_invoke_ai_for_task","lineno":38,"docstring":null},{"name":"_parse_ai_response","lineno":65,"docstring":null}],"docstring":"Handles communication with OpenAI API (o3, o4-mini models) for auto-prioritization,\ntime estimations, dependency resolution, and optimal scheduling suggestion.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/local_shared/openai_interfaces/responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"opsvi/opsvi_opsvi/applications/code_gen/local_shared/openai_interfaces/responses_interface.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":31,"docstring":null},{"name":"create_structured_response","lineno":35,"docstring":"Create a structured response using OpenAI's native structured outputs.\n\nArgs:\n    prompt: The user prompt\n    response_model: Pydantic model defining the expected response structure\n    model: OpenAI model to use (must support structured outputs)\n    system_prompt: Optional system message\n    **kwargs: Additional parameters for the chat completion\n\nReturns:\n    Instance of response_model with parsed response\n\nRaises:\n    ValueError: If model is not approved or response cannot be parsed\n    Exception: For other API errors"},{"name":"create_simple_response","lineno":99,"docstring":"Create a simple text response without structured output.\n\nArgs:\n    prompt: The user prompt\n    model: OpenAI model to use\n    system_prompt: Optional system message\n    **kwargs: Additional parameters for the chat completion\n\nReturns:\n    The response content as a string\n\nRaises:\n    ValueError: If model is not approved\n    Exception: For other API errors"}],"docstring":"Modern interface for OpenAI structured outputs using native SDK methods.\n\nThis replaces the legacy manual schema injection approach with the\nrecommended client.chat.completions.parse() method.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","name":"ArchitectureSpec","data":{"name":"ArchitectureSpec","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","lineno":52,"bases":["BaseModel"],"methods":[],"docstring":"High-level architecture artifacts produced by ArchitectureAgent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","name":"CodeBundle","data":{"name":"CodeBundle","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","lineno":84,"bases":["BaseModel"],"methods":[],"docstring":"Container for generated code and documentation directories.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","name":"ProjectTypeDetection","data":{"name":"ProjectTypeDetection","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","lineno":115,"bases":["BaseModel"],"methods":[],"docstring":"Response model for project type detection by AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","name":"SecurityAnalysis","data":{"name":"SecurityAnalysis","file_path":"opsvi/opsvi_opsvi/applications/code_gen/schemas.py","lineno":133,"bases":["BaseModel"],"methods":[],"docstring":"Response model for security analysis by AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/code_gen/validation.py","name":"ValidationError","data":{"name":"ValidationError","file_path":"opsvi/opsvi_opsvi/applications/code_gen/validation.py","lineno":12,"bases":["Exception"],"methods":[],"docstring":"Raised when input validation fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/cognitive_interface/core/cognitive_database.py","name":"CognitiveDatabase","data":{"name":"CognitiveDatabase","file_path":"opsvi/opsvi_opsvi/applications/cognitive_interface/core/cognitive_database.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":"Initialize database connection using existing patterns"},{"name":"_validate_connection","lineno":32,"docstring":"Validate database connection and collections"},{"name":"find_memories_about","lineno":51,"docstring":"Find memories related to a specific topic"},{"name":"get_foundational_memories","lineno":72,"docstring":"Get high-quality foundational memories"},{"name":"get_concepts_by_domain","lineno":88,"docstring":"Get cognitive concepts filtered by domain"},{"name":"get_memories_by_type","lineno":104,"docstring":"Get memories filtered by type (operational, procedural, etc.)"},{"name":"get_startup_context","lineno":120,"docstring":"Get essential startup context and foundational knowledge"},{"name":"assess_system_health","lineno":132,"docstring":"Comprehensive system health assessment"},{"name":"_calculate_health_score","lineno":158,"docstring":"Calculate overall system health score"},{"name":"_execute_query","lineno":171,"docstring":"Execute AQL query with error handling and validation"}],"docstring":"Agent-friendly interface to cognitive database operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/cognitive_interface/core/consolidated_arango.py","name":"ConsolidatedArangoDB","data":{"name":"ConsolidatedArangoDB","file_path":"opsvi/opsvi_opsvi/applications/cognitive_interface/core/consolidated_arango.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":"Initialize with configuration from environment variables or defaults"},{"name":"_validate_connection","lineno":71,"docstring":"Validate database connection and core collections"},{"name":"search","lineno":83,"docstring":"Unified search interface with type-based routing\n\nsearch_types: content, tags, date_range, type, recent, id"},{"name":"_search_content","lineno":127,"docstring":"Search for content across document fields"},{"name":"_search_tags","lineno":165,"docstring":"Search documents by tags with AND/OR logic"},{"name":"_search_date_range","lineno":196,"docstring":"Search documents within date range"},{"name":"_search_type","lineno":218,"docstring":"Search documents by type field"},{"name":"_search_recent","lineno":234,"docstring":"Get recent documents within time window"},{"name":"_search_by_id","lineno":255,"docstring":"Direct document lookup by ID"},{"name":"modify","lineno":269,"docstring":"Unified modification interface with operation-based routing\n\noperations: insert, update, delete, upsert"},{"name":"_modify_insert","lineno":300,"docstring":"Insert new document with optional validation"},{"name":"_modify_update","lineno":334,"docstring":"Update documents by key or criteria"},{"name":"_modify_delete","lineno":396,"docstring":"Delete documents by key or criteria with confirmation"},{"name":"_modify_upsert","lineno":453,"docstring":"Insert or update based on matching fields"},{"name":"_search_by_criteria","lineno":489,"docstring":"Helper: Search documents by exact criteria match"},{"name":"manage","lineno":505,"docstring":"Unified management interface with action-based routing\n\nactions: collection_info, backup, health, count, exists, create_collection"},{"name":"_manage_collection_info","lineno":534,"docstring":"Get detailed collection information and statistics"},{"name":"_manage_backup","lineno":564,"docstring":"Backup collections to specified directory"},{"name":"_manage_health","lineno":602,"docstring":"Agent-IDE database health assessment"},{"name":"_manage_count","lineno":651,"docstring":"Count documents in collection with optional criteria"},{"name":"_manage_exists","lineno":689,"docstring":"Check if documents matching criteria exist"},{"name":"_manage_create_collection","lineno":722,"docstring":"Create new collection"},{"name":"_build_filter_conditions","lineno":749,"docstring":"Build AQL filter conditions from criteria dictionary"},{"name":"_execute_query","lineno":763,"docstring":"Execute AQL query with comprehensive error handling"},{"name":"_error_response","lineno":793,"docstring":"Standardized error response format"}],"docstring":"Main database abstraction providing 3 consolidated tools:\n- arango_search: All search/query operations\n- arango_modify: All CRUD operations\n- arango_manage: All admin operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","name":"ExpertAgent","data":{"name":"ExpertAgent","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","lineno":4,"bases":[],"methods":[{"name":"__init__","lineno":5,"docstring":null},{"name":"propose_answer","lineno":15,"docstring":null},{"name":"critique_answers","lineno":21,"docstring":null},{"name":"revise_answer","lineno":30,"docstring":null},{"name":"_specialty_opinion","lineno":39,"docstring":null},{"name":"_critique_opinion","lineno":50,"docstring":null},{"name":"_revise_opinion","lineno":54,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","name":"MLExpert","data":{"name":"MLExpert","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","lineno":59,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":60,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","name":"StatsExpert","data":{"name":"StatsExpert","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","lineno":69,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":70,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","name":"EthicsExpert","data":{"name":"EthicsExpert","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_agent.py","lineno":79,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":80,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_assigner.py","name":"ExpertAssignerAgent","data":{"name":"ExpertAssignerAgent","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/expert_assigner.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":11,"docstring":null},{"name":"assign_experts","lineno":16,"docstring":"Decide which expert types to assign and generate system messages for each.\nReturns a list of dicts: {expert_type, system_message}"}],"docstring":"Assigns a panel of expert types for a given question and generates system messages for each using an allowed LLM.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/researcher_agent.py","name":"ResearcherAgent","data":{"name":"ResearcherAgent","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/researcher_agent.py","lineno":8,"bases":["ExpertAgent"],"methods":[{"name":"__init__","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/synthesis_agent.py","name":"SynthesisAgent","data":{"name":"SynthesisAgent","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/synthesis_agent.py","lineno":5,"bases":[],"methods":[{"name":"__init__","lineno":6,"docstring":null},{"name":"synthesize","lineno":15,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/system_message_generator.py","name":"SystemMessageGeneratorAgent","data":{"name":"SystemMessageGeneratorAgent","file_path":"opsvi/opsvi_opsvi/applications/expert_panel/agents/system_message_generator.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":12,"docstring":null},{"name":"generate_system_message","lineno":17,"docstring":"Generate a system message for a new expert type using the allowed OpenAI model.\nReturns a structured dict with expert_name, system_message, model_used, and raw_response."}],"docstring":"Generates a system prompt for a new expert agent using an allowed OpenAI model.\nFollows project OpenAI usage and Python standards.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/base_agent.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/base_agent.py","lineno":28,"bases":["ABC"],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize the base agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance"},{"name":"get_capabilities","lineno":91,"docstring":"Get the agent's capabilities.\n\nReturns:\n    List of agent capabilities"},{"name":"set_message_broker","lineno":100,"docstring":"Set the message broker for the agent."},{"name":"add_tool","lineno":131,"docstring":"Add a tool to the agent's toolkit.\n\nArgs:\n    tool: Tool to add"},{"name":"remove_tool","lineno":141,"docstring":"Remove a tool from the agent's toolkit.\n\nArgs:\n    tool_name: Name of tool to remove\n\nReturns:\n    True if tool was removed, False if not found"},{"name":"get_available_tools","lineno":157,"docstring":"Get list of available tool names.\n\nReturns:\n    List of tool names"},{"name":"get_status","lineno":476,"docstring":"Get the current status of the agent.\n\nReturns:\n    Dictionary containing agent status information"},{"name":"__str__","lineno":501,"docstring":"String representation of the agent."},{"name":"__repr__","lineno":505,"docstring":"Detailed string representation of the agent."}],"docstring":"Abstract base class for all agents in the multi-agent system.\n\nAgents are autonomous entities that can execute tasks, communicate\nwith other agents, and use tools to accomplish their goals.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/research_agent.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/research_agent.py","lineno":19,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":30,"docstring":"Initialize the research agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance"},{"name":"get_capabilities","lineno":161,"docstring":"Get the research agent's capabilities.\n\nReturns:\n    List of agent capabilities"},{"name":"_assess_research_quality","lineno":556,"docstring":"Assess the quality of the research conducted.\n\nArgs:\n    search_results: Search results data\n    text_analysis: Text analysis data\n    synthesis: Synthesis data (if available)\n\nReturns:\n    Quality assessment string"}],"docstring":"Research agent specialized in information gathering and analysis.\n\nCapabilities:\n- Web search and information retrieval\n- Data analysis and text processing\n- Knowledge synthesis and summarization\n- Research coordination with other agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/task_agent.py","name":"TaskAgent","data":{"name":"TaskAgent","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/agents/task_agent.py","lineno":21,"bases":["BaseAgent"],"methods":[{"name":"__init__","lineno":37,"docstring":"Initialize the task agent.\n\nArgs:\n    agent_id: Unique agent identifier\n    name: Human-readable agent name\n    description: Agent description\n    logger: Optional logger instance\n    work_directory: Optional working directory for file operations"},{"name":"_register_tools","lineno":88,"docstring":"Register task-specific tools."},{"name":"_filter_data","lineno":385,"docstring":"Filter data based on criteria."},{"name":"_aggregate_data","lineno":393,"docstring":"Aggregate data by groups."},{"name":"_sort_data","lineno":433,"docstring":"Sort data by key."},{"name":"_merge_data","lineno":439,"docstring":"Merge two datasets on a key."},{"name":"_calculate_statistics","lineno":533,"docstring":"Calculate basic statistics."},{"name":"_evaluate_expression","lineno":552,"docstring":"Safely evaluate mathematical expression."},{"name":"_calculate_hash","lineno":587,"docstring":"Calculate hash of data."},{"name":"_encode_data","lineno":606,"docstring":"Encode data."},{"name":"_decode_data","lineno":618,"docstring":"Decode data."},{"name":"_validate_against_schema","lineno":629,"docstring":"Validate data against schema."},{"name":"_validate_against_rules","lineno":654,"docstring":"Validate data against custom rules."},{"name":"_check_data_quality","lineno":691,"docstring":"Check data quality issues."},{"name":"_calculate_validation_statistics","lineno":729,"docstring":"Calculate validation statistics."},{"name":"_map_data","lineno":754,"docstring":"Apply field mapping to data."},{"name":"_normalize_data","lineno":765,"docstring":"Normalize numerical data."},{"name":"_pivot_data","lineno":801,"docstring":"Pivot data (simplified implementation)."},{"name":"_flatten_data","lineno":826,"docstring":"Flatten nested data structure."},{"name":"_group_data","lineno":851,"docstring":"Group data by specified fields."},{"name":"get_task_metrics","lineno":865,"docstring":"Get task execution metrics."},{"name":"get_capabilities","lineno":869,"docstring":"Get the agent's capabilities as a list of AgentCapability objects."}],"docstring":"Specialized agent for task execution and data processing.\n\nThis agent is designed to handle computational tasks, data transformations,\nfile operations, and other processing-intensive operations within\nmulti-agent workflows.\n\nKey Capabilities:\n- Data processing and transformation\n- File I/O operations\n- Computational tasks\n- Batch processing\n- Data validation and cleaning","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"MessageType","data":{"name":"MessageType","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":15,"bases":["Enum"],"methods":[],"docstring":"Types of messages that can be sent between agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"WorkflowStatus","data":{"name":"WorkflowStatus","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":44,"bases":["Enum"],"methods":[],"docstring":"Status of a workflow in the orchestration system.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"Message","data":{"name":"Message","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":56,"bases":[],"methods":[],"docstring":"Inter-agent communication message.\n\nAttributes:\n    id: Unique message identifier\n    sender_id: ID of the sending agent\n    recipient_id: ID of the receiving agent (None for broadcast)\n    message_type: Type of message being sent\n    content: Message payload\n    timestamp: When the message was created\n    correlation_id: ID to correlate related messages","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"Task","data":{"name":"Task","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":80,"bases":[],"methods":[],"docstring":"Represents a unit of work to be executed by an agent.\n\nAttributes:\n    id: Unique task identifier\n    name: Human-readable task name\n    description: Detailed task description\n    agent_id: ID of the agent assigned to this task\n    tool_name: Name of the tool to use (if applicable)\n    parameters: Task-specific parameters\n    dependencies: List of task IDs this task depends on\n    status: Current task status\n    result: Task execution result\n    error: Error information if task failed\n    created_at: Task creation timestamp\n    started_at: Task start timestamp\n    completed_at: Task completion timestamp","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"TaskResult","data":{"name":"TaskResult","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":116,"bases":[],"methods":[],"docstring":"Result of a single task execution.\n\nAttributes:\n    task_id: Unique task identifier\n    status: Task execution status\n    result: Task output/result\n    error: Error message if task failed\n    execution_time: Time taken to execute the task (seconds)\n    started_at: Task start time\n    completed_at: Task completion time","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"AgentCapability","data":{"name":"AgentCapability","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":140,"bases":[],"methods":[],"docstring":"Describes a capability that an agent possesses.\n\nAttributes:\n    name: Capability name\n    description: What this capability does\n    input_schema: Expected input format\n    output_schema: Expected output format\n    tools_required: List of tools needed for this capability","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"MultiAgentError","data":{"name":"MultiAgentError","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":232,"bases":["Exception"],"methods":[],"docstring":"Base exception for multi-agent system errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"AgentError","data":{"name":"AgentError","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":238,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by agent operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"ToolError","data":{"name":"ToolError","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":244,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by tool operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"WorkflowError","data":{"name":"WorkflowError","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":250,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by workflow operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","name":"CommunicationError","data":{"name":"CommunicationError","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/common/types.py","lineno":256,"bases":["MultiAgentError"],"methods":[],"docstring":"Exception raised by communication operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/communication/message_broker.py","name":"MessageBroker","data":{"name":"MessageBroker","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/communication/message_broker.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the message broker.\n\nArgs:\n    max_queue_size: Maximum messages per agent queue\n    message_ttl: Message time-to-live in seconds"},{"name":"register_agent","lineno":73,"docstring":"Register an agent with the message broker.\n\nArgs:\n    agent_id: Unique agent identifier\n    message_handler: Optional async function to handle messages"},{"name":"unregister_agent","lineno":91,"docstring":"Unregister an agent from the message broker.\n\nArgs:\n    agent_id: Agent identifier to unregister"},{"name":"subscribe_to_message_type","lineno":200,"docstring":"Subscribe an agent to a specific message type.\n\nArgs:\n    agent_id: Agent identifier\n    message_type: Type of messages to subscribe to"},{"name":"unsubscribe_from_message_type","lineno":213,"docstring":"Unsubscribe an agent from a specific message type.\n\nArgs:\n    agent_id: Agent identifier\n    message_type: Type of messages to unsubscribe from"},{"name":"get_queue_size","lineno":252,"docstring":"Get the number of queued messages for an agent.\n\nArgs:\n    agent_id: Agent identifier\n\nReturns:\n    Number of queued messages"},{"name":"get_registered_agents","lineno":264,"docstring":"Get list of all registered agents.\n\nReturns:\n    List of agent IDs"},{"name":"get_message_history","lineno":273,"docstring":"Get recent message history.\n\nArgs:\n    limit: Maximum number of messages to return\n\nReturns:\n    List of recent messages"},{"name":"get_statistics","lineno":333,"docstring":"Get message broker statistics.\n\nReturns:\n    Dictionary containing broker statistics"}],"docstring":"Centralized message broker for inter-agent communication.\n\nSupports point-to-point messaging, broadcasting, and subscription-based\nmessage routing with delivery guarantees and error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/examples/demo_application.py","name":"DemoApplication","data":{"name":"DemoApplication","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/examples/demo_application.py","lineno":33,"bases":[],"methods":[{"name":"__init__","lineno":45,"docstring":"Initialize the demo application.\n\nArgs:\n    work_directory: Working directory for demo files"},{"name":"_setup_logging","lineno":74,"docstring":"Setup logging configuration."},{"name":"_generate_demo_summary","lineno":298,"docstring":"Generate a summary of demo results."},{"name":"_show_metrics","lineno":407,"docstring":"Show orchestrator metrics."},{"name":"_show_execution_history","lineno":421,"docstring":"Show execution history."},{"name":"_show_agent_capabilities","lineno":442,"docstring":"Show agent capabilities."},{"name":"_display_workflow_result","lineno":460,"docstring":"Display workflow execution result."}],"docstring":"Comprehensive demo application for multi-agent orchestration.\n\nThis application demonstrates:\n- Multi-agent workflow execution\n- Different orchestration patterns\n- Agent collaboration and communication\n- Real-time monitoring and metrics\n- Error handling and recovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/tools/base_tool.py","name":"BaseTool","data":{"name":"BaseTool","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/tools/base_tool.py","lineno":17,"bases":["ABC"],"methods":[{"name":"__init__","lineno":25,"docstring":"Initialize the base tool.\n\nArgs:\n    name: Unique tool name\n    description: Tool description"},{"name":"get_schema","lineno":56,"docstring":"Get the tool's input/output schema.\n\nReturns:\n    ToolSchema defining the tool's interface"},{"name":"validate_input","lineno":65,"docstring":"Validate input parameters against the tool's schema.\n\nArgs:\n    parameters: Parameters to validate\n\nReturns:\n    True if parameters are valid, False otherwise"},{"name":"get_capabilities","lineno":140,"docstring":"Get information about the tool's capabilities.\n\nReturns:\n    Dictionary describing tool capabilities"},{"name":"__str__","lineno":156,"docstring":"String representation of the tool."},{"name":"__repr__","lineno":160,"docstring":"Detailed string representation of the tool."}],"docstring":"Abstract base class for all tools in the multi-agent system.\n\nTools are pluggable components that provide specific capabilities\nto agents, such as web search, data processing, or external API access.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/tools/data_processor_tool.py","name":"DataProcessorTool","data":{"name":"DataProcessorTool","file_path":"opsvi/opsvi_opsvi/applications/multi_agent_orchestration/tools/data_processor_tool.py","lineno":21,"bases":["BaseTool"],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the data processor tool."},{"name":"get_schema","lineno":86,"docstring":"Get the data processor tool schema.\n\nReturns:\n    ToolSchema defining input/output format"},{"name":"_matches_criteria","lineno":492,"docstring":"Check if an item matches the filter criteria.\n\nArgs:\n    item: Item to check\n    criteria: Filter criteria\n\nReturns:\n    True if item matches criteria, False otherwise"}],"docstring":"Data processing tool for various data manipulation tasks.\n\nSupports text processing, data analysis, format conversion,\nand basic statistical operations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/docs/enhanced_logging_implementation.py","name":"AgentLogConfig","data":{"name":"AgentLogConfig","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/docs/enhanced_logging_implementation.py","lineno":30,"bases":[],"methods":[],"docstring":"Configuration for agent-specific logging","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/docs/enhanced_logging_implementation.py","name":"EnhancedSmartDecompositionAgent","data":{"name":"EnhancedSmartDecompositionAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/docs/enhanced_logging_implementation.py","lineno":223,"bases":[],"methods":[{"name":"__init__","lineno":226,"docstring":null},{"name":"_create_agent_with_tools","lineno":290,"docstring":"Enhanced agent creation with lifecycle logging"},{"name":"_create_mcp_tool_wrapper","lineno":352,"docstring":"Enhanced MCP tool wrapper with logging"}],"docstring":"Smart Decomposition Agent with enhanced logging capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/smart_decomposition_agent.py","name":"SmartDecompositionAgent","data":{"name":"SmartDecompositionAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/smart_decomposition_agent.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize the Smart Decomposition Agent with all modules"},{"name":"get_capabilities","lineno":399,"docstring":"Return the capabilities of this agent system"}],"docstring":"Modular Smart Decomposition Agent with O3 Intelligence\n\nThis agent orchestrates the complete workflow:\n1. O3 Reasoning -> Generate WorkflowSpecification\n2. Agent Creation -> Build specialized agents\n3. Parallel Execution -> Run agents concurrently\n4. Solution Synthesis -> Combine outputs with O3\n5. File Operations -> Extract and create deliverables","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_creation.py","name":"AgentCreationEngine","data":{"name":"AgentCreationEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_creation.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"_convert_tool_specs_to_functions","lineno":178,"docstring":"Convert ToolSpecification objects to actual tool functions"},{"name":"_create_mcp_tool_wrapper","lineno":324,"docstring":"Create a wrapper function for MCP tools"},{"name":"_create_progressive_prompt","lineno":357,"docstring":"Create dynamic prompts based on O3 analysis and specific agent requirements"}],"docstring":"Handles creation of specialized agents from O3 specifications","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":26,"bases":["str","Enum"],"methods":[],"docstring":"Specialized agent roles.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentStatus","data":{"name":"AgentStatus","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":40,"bases":["str","Enum"],"methods":[],"docstring":"Agent lifecycle status.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentConfiguration","data":{"name":"AgentConfiguration","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":52,"bases":[],"methods":[],"docstring":"Configuration for creating an agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentInstance","data":{"name":"AgentInstance","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":65,"bases":[],"methods":[],"docstring":"Created agent instance with metadata.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"AgentCreationRequest","data":{"name":"AgentCreationRequest","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":80,"bases":[],"methods":[],"docstring":"Request for creating a new agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","name":"DynamicAgentFactory","data":{"name":"DynamicAgentFactory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/agent_factory.py","lineno":90,"bases":[],"methods":[{"name":"__init__","lineno":93,"docstring":null},{"name":"_initialize_agent_templates","lineno":100,"docstring":"NO FALLBACKS RULE: Templates deprecated - agents must be created with explicit specifications."},{"name":"_initialize_system_prompts","lineno":105,"docstring":"Initialize system prompts for different agent roles."},{"name":"create_agent_configuration","lineno":155,"docstring":"Create agent configuration based on request."},{"name":"create_research_agent","lineno":350,"docstring":"Create a specialized research agent."},{"name":"create_implementation_agent","lineno":367,"docstring":"Create a specialized implementation agent."},{"name":"create_analysis_agent","lineno":383,"docstring":"Create a specialized analysis agent."},{"name":"create_synthesis_agent","lineno":399,"docstring":"Create a specialized synthesis agent."},{"name":"create_coding_agent","lineno":415,"docstring":"Create a specialized coding agent."},{"name":"get_agent","lineno":456,"docstring":"Retrieve an agent by ID."},{"name":"list_agents","lineno":462,"docstring":"List all active agents."},{"name":"get_agents_by_role","lineno":466,"docstring":"Get all agents with a specific role."},{"name":"update_agent_status","lineno":470,"docstring":"Update agent status."},{"name":"configure_agent_tools","lineno":477,"docstring":"Update agent tool configuration."},{"name":"update_agent_context","lineno":486,"docstring":"Update agent context."},{"name":"get_agent_performance_metrics","lineno":497,"docstring":"Get performance metrics for an agent."},{"name":"cleanup_completed_agents","lineno":504,"docstring":"Clean up completed agents and return count removed."},{"name":"get_factory_status","lineno":518,"docstring":"Get factory status and statistics."}],"docstring":"Factory for creating specialized agents on-demand.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/complexity_model.py","name":"ComplexityModel","data":{"name":"ComplexityModel","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/complexity_model.py","lineno":28,"bases":["IComplexityAnalysisModel"],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the Complexity Model with all modular components"},{"name":"_enhance_factors_with_ai","lineno":170,"docstring":"Enhance factor analysis with AI insights"},{"name":"_generate_standard_reasoning","lineno":239,"docstring":"Generate reasoning text for standard (non-AI) analysis"},{"name":"analyze_scope_factor","lineno":262,"docstring":"Legacy method for scope analysis"},{"name":"analyze_technical_depth_factor","lineno":266,"docstring":"Legacy method for technical depth analysis"},{"name":"analyze_domain_knowledge_factor","lineno":270,"docstring":"Legacy method for domain knowledge analysis"},{"name":"analyze_dependencies_factor","lineno":274,"docstring":"Legacy method for dependencies analysis"},{"name":"analyze_timeline_factor","lineno":278,"docstring":"Legacy method for timeline analysis"},{"name":"analyze_risk_factor","lineno":282,"docstring":"Legacy method for risk analysis"},{"name":"calculate_overall_score","lineno":286,"docstring":"Legacy method for overall score calculation"},{"name":"determine_category","lineno":290,"docstring":"Legacy method for category determination"},{"name":"determine_execution_strategy","lineno":294,"docstring":"Legacy method for execution strategy determination"},{"name":"generate_agent_requirements","lineno":300,"docstring":"Legacy method for agent requirements generation"},{"name":"estimate_effort","lineno":304,"docstring":"Legacy method for effort estimation"},{"name":"calculate_confidence","lineno":308,"docstring":"Legacy method for confidence calculation"},{"name":"get_capabilities","lineno":353,"docstring":"Return the capabilities of this complexity model"}],"docstring":"Modular Complexity Analysis using AI Reasoning\n\nThis model orchestrates the complete complexity analysis workflow:\n1. Factor Analysis -> Analyze individual complexity factors\n2. AI Reasoning -> Use LLM for intelligent analysis\n3. Scoring Engine -> Calculate scores and determine strategy\n4. Result Synthesis -> Combine all analysis into final result","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/complexity_model_original.py","name":"ComplexityModel","data":{"name":"ComplexityModel","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/complexity_model_original.py","lineno":107,"bases":["IComplexityAnalysisModel"],"methods":[{"name":"__init__","lineno":114,"docstring":null},{"name":"_initialize_indicators","lineno":145,"docstring":"Initialize complexity indicators for automated detection."},{"name":"analyze_scope_factor","lineno":248,"docstring":"Analyze scope complexity (1-10)."},{"name":"analyze_technical_depth_factor","lineno":320,"docstring":"Analyze technical depth complexity (1-10)."},{"name":"analyze_domain_knowledge_factor","lineno":394,"docstring":"Analyze domain knowledge complexity (1-10)."},{"name":"analyze_dependencies_factor","lineno":466,"docstring":"Analyze dependencies complexity (1-10)."},{"name":"analyze_timeline_factor","lineno":537,"docstring":"Analyze timeline complexity (1-10)."},{"name":"analyze_risk_factor","lineno":593,"docstring":"Analyze risk complexity (1-10)."},{"name":"calculate_overall_score","lineno":657,"docstring":"Calculate weighted overall complexity score (0-100 scale)."},{"name":"determine_category","lineno":673,"docstring":"Determine complexity category from overall score (0-100 scale)."},{"name":"determine_execution_strategy","lineno":684,"docstring":"Determine optimal execution strategy based on complexity."},{"name":"generate_agent_requirements","lineno":709,"docstring":"Generate agent requirements based on complexity analysis."},{"name":"estimate_effort","lineno":773,"docstring":"Estimate effort level based on complexity."},{"name":"calculate_confidence","lineno":788,"docstring":"Calculate confidence in the complexity analysis."},{"name":"analyze_factors","lineno":963,"docstring":"Perform complete 6-factor complexity analysis."},{"name":"_extract_effort_estimate","lineno":1150,"docstring":"Extract effort estimate from AI response"}],"docstring":"Truly agentic complexity analysis using AI reasoning\n\nNO PREDETERMINED SCORING RULES - uses AI to dynamically analyze complexity","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/gap_analysis.py","name":"GapAnalysisAgent","data":{"name":"GapAnalysisAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/gap_analysis.py","lineno":24,"bases":["IGapAnalysisAgent"],"methods":[{"name":"__init__","lineno":31,"docstring":null}],"docstring":"Truly agentic gap analysis using AI reasoning to identify missing information\n\nNO PREDEFINED SCHEMAS OR RULES - uses AI to understand what's needed","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/information_completion.py","name":"InformationCompletionAgent","data":{"name":"InformationCompletionAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/information_completion.py","lineno":29,"bases":["IInformationCompletionAgent"],"methods":[{"name":"__init__","lineno":36,"docstring":null},{"name":"_extract_confidence_from_response","lineno":239,"docstring":"Extract confidence score from AI response"},{"name":"_extract_assumptions_from_response","lineno":253,"docstring":"Extract assumptions from AI response"},{"name":"_extract_default_value","lineno":263,"docstring":"Extract the specific default value from AI response"}],"docstring":"Truly agentic information completion using AI-driven research and reasoning\n\nNO STATIC DEFAULTS - uses AI to research and generate appropriate completions","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent.py","name":"O3MasterAgent","data":{"name":"O3MasterAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent.py","lineno":32,"bases":[],"methods":[{"name":"__init__","lineno":44,"docstring":"Initialize the O3 Master Agent with all modular components"},{"name":"get_reasoning_history","lineno":341,"docstring":"Get the complete reasoning history for analysis"},{"name":"clear_reasoning_history","lineno":345,"docstring":"Clear the reasoning history"},{"name":"get_capabilities","lineno":350,"docstring":"Return the capabilities of this O3 master agent"}],"docstring":"Modular O3 Master Agent with Advanced Reasoning\n\nThis agent orchestrates the complete O3 analysis workflow:\n1. Complexity Analysis -> Assess request complexity\n2. Strategy Generation -> Generate agent deployment strategy\n3. Execution Planning -> Create detailed execution plans\n4. Pipeline Design -> Design optimal workflows\n5. Comprehensive Analysis -> Combine all results","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"AgentStrategy","data":{"name":"AgentStrategy","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":60,"bases":[],"methods":[],"docstring":"Strategy for agent deployment and coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"ExecutionPlan","data":{"name":"ExecutionPlan","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":72,"bases":[],"methods":[],"docstring":"Detailed execution plan for the request with explicit dependency tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","name":"O3MasterAgent","data":{"name":"O3MasterAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/o3_master_agent_original.py","lineno":412,"bases":[],"methods":[{"name":"__init__","lineno":415,"docstring":null},{"name":"_default_model_config","lineno":439,"docstring":"Default configuration for O3 model integration."},{"name":"_analyze_complexity_dimensions","lineno":556,"docstring":"Analyze complexity across six dimensions."},{"name":"_determine_complexity_category","lineno":611,"docstring":"Determine complexity category from score."},{"name":"_determine_execution_strategy","lineno":622,"docstring":"Determine optimal execution strategy."},{"name":"_generate_agent_requirements","lineno":633,"docstring":"Generate agent requirements based on strategy."},{"name":"_estimate_effort","lineno":662,"docstring":"Estimate effort level."},{"name":"_determine_agent_roles","lineno":743,"docstring":"Determine required agent roles based on complexity."},{"name":"_design_coordination_pattern","lineno":770,"docstring":"Design coordination pattern for agent interaction."},{"name":"_design_communication_flow","lineno":779,"docstring":"Design communication flows between agents."},{"name":"_generate_success_criteria","lineno":798,"docstring":"Generate success criteria based on complexity."},{"name":"_generate_risk_mitigation","lineno":817,"docstring":"Generate risk mitigation strategies."},{"name":"_define_execution_phases","lineno":1027,"docstring":"Define execution phases based on strategy."},{"name":"_analyze_phase_dependencies","lineno":1114,"docstring":"Analyze dependencies between phases."},{"name":"_plan_resources","lineno":1129,"docstring":"Plan resource requirements."},{"name":"_estimate_timelines","lineno":1138,"docstring":"Estimate phase timelines."},{"name":"_define_quality_gates","lineno":1147,"docstring":"Define quality gates for execution."},{"name":"_generate_contingency_plans","lineno":1162,"docstring":"Generate contingency plans for potential issues."},{"name":"_generate_recommendations","lineno":1230,"docstring":"Generate strategic recommendations."},{"name":"_parse_strategy_response","lineno":1502,"docstring":"Parse O3 strategy response and extract structured data"},{"name":"_build_agent_strategy_from_o3","lineno":1535,"docstring":"Build AgentStrategy object from O3's dynamic response"},{"name":"_get_approved_ai_model","lineno":1741,"docstring":"Get approved AI model with proper configuration (Rule 953 compliance)"},{"name":"_parse_json_from_ai_response","lineno":1852,"docstring":"Parse JSON from AI response with validation (shared utility)"},{"name":"_validate_ai_output_schema","lineno":1878,"docstring":"Validate AI output conforms to expected schema"},{"name":"_create_execution_phase_template","lineno":1895,"docstring":"Create execution phase template with context management guidelines"},{"name":"_create_workflow_assembly_template","lineno":1928,"docstring":"Create workflow assembly template with cross-stage coherence requirements"}],"docstring":"Advanced reasoning agent using O3-level intelligence.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation.py","name":"RequestValidationAgent","data":{"name":"RequestValidationAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation.py","lineno":35,"bases":["IRequestValidationAgent"],"methods":[{"name":"__init__","lineno":46,"docstring":"Initialize the Request Validation Agent with all modular components"},{"name":"_extract_request_content","lineno":307,"docstring":"Extract string content from request input"},{"name":"_determine_recommended_approach","lineno":326,"docstring":"Determine the recommended approach based on gap analysis"},{"name":"get_capabilities","lineno":340,"docstring":"Return the capabilities of this validation agent"}],"docstring":"Modular Request Validation using AI Reasoning\n\nThis agent orchestrates the complete request validation workflow:\n1. Validation Engine -> AI-powered request type detection and information extraction\n2. Gap Analyzer -> Identify and prioritize missing information\n3. Completion Engine -> Fill gaps through research and defaults\n4. Clarification Interface -> Generate user-friendly clarification questions","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","name":"RequestValidationAgent","data":{"name":"RequestValidationAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","lineno":286,"bases":["IRequestValidationAgent"],"methods":[{"name":"__init__","lineno":293,"docstring":null},{"name":"detect_request_type","lineno":489,"docstring":"Legacy synchronous method for backward compatibility"},{"name":"extract_information","lineno":526,"docstring":"Extract available information from the request text."},{"name":"identify_missing_fields","lineno":557,"docstring":"Identify missing required and important optional fields."},{"name":"validate_request","lineno":583,"docstring":"Perform complete request validation."}],"docstring":"Truly agentic request validation using AI-driven analysis\n\nNO PREDEFINED SCHEMAS - uses AI to understand request context and needs","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","name":"GapAnalysisAgent","data":{"name":"GapAnalysisAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","lineno":620,"bases":[],"methods":[{"name":"__init__","lineno":623,"docstring":null},{"name":"prioritize_gaps","lineno":627,"docstring":"Prioritize missing information gaps."},{"name":"calculate_confidence","lineno":674,"docstring":"Calculate confidence based on gaps."},{"name":"categorize_gaps","lineno":689,"docstring":"Categorize gaps into researchable and unresearchable."},{"name":"analyze_gaps","lineno":697,"docstring":"Perform comprehensive gap analysis."}],"docstring":"Agent responsible for analyzing information gaps and prioritizing them.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","name":"InformationCompletionAgent","data":{"name":"InformationCompletionAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","lineno":726,"bases":[],"methods":[{"name":"__init__","lineno":729,"docstring":null},{"name":"apply_defaults","lineno":750,"docstring":"Apply reasonable defaults for gaps that have them."},{"name":"document_assumptions","lineno":760,"docstring":"Document assumptions made during completion."}],"docstring":"Agent responsible for filling information gaps through research and defaults.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","name":"UserClarificationInterface","data":{"name":"UserClarificationInterface","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/request_validation_original.py","lineno":825,"bases":[],"methods":[{"name":"__init__","lineno":828,"docstring":null},{"name":"generate_focused_questions","lineno":832,"docstring":"Generate focused questions for critical gaps."},{"name":"_get_field_options","lineno":868,"docstring":"Get reasonable options for a field."},{"name":"explain_importance","lineno":883,"docstring":"Explain why a field is important."},{"name":"handle_user_response","lineno":898,"docstring":"Handle user responses to clarification questions."},{"name":"_parse_type_response","lineno":947,"docstring":"Parse AI response to extract request type and confidence"},{"name":"_parse_issues_response","lineno":981,"docstring":"Parse AI response to extract validation issues"}],"docstring":"Interface for handling user clarification when critical gaps remain.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/subdivision_agent_factory.py","name":"SubdivisionAgentSpecification","data":{"name":"SubdivisionAgentSpecification","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/subdivision_agent_factory.py","lineno":39,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":null}],"docstring":"Specification for a subdivision agent with LangGraph compliance","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/subdivision_agent_factory.py","name":"SubdivisionAgentFactory","data":{"name":"SubdivisionAgentFactory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/agents/subdivision_agent_factory.py","lineno":66,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":"Initialize the Subdivision Agent Factory"},{"name":"_get_tools_for_agent","lineno":381,"docstring":"Get appropriate tools for the agent based on its specification"},{"name":"_create_handoff_tool","lineno":440,"docstring":"Create a specific handoff tool for agent coordination"},{"name":"get_subdivision_metrics","lineno":469,"docstring":"Get metrics about the subdivision agent team"}],"docstring":"Factory for creating specialized agents for subdivided workflows\n\nUses modern LangGraph patterns with O3-generated specifications:\n- create_react_agent for all agent creation\n- Tool-based handoffs for agent coordination\n- Dynamic prompt and tool generation via O3\n- No hardcoded agent templates","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/ai_reasoning.py","name":"AIReasoningEngine","data":{"name":"AIReasoningEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/ai_reasoning.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"_extract_factor_section","lineno":299,"docstring":"Extract the section of AI response related to a specific factor"},{"name":"_extract_effort_estimate","lineno":331,"docstring":"Extract effort estimate from AI response"}],"docstring":"Handles AI reasoning for complexity analysis","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/complexity_analyzer.py","name":"ComplexityAnalyzer","data":{"name":"ComplexityAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/complexity_analyzer.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"_analyze_complexity_dimensions","lineno":135,"docstring":"Analyze complexity across six dimensions."},{"name":"_determine_complexity_category","lineno":195,"docstring":"Determine complexity category from score - NO HARDCODED THRESHOLDS"},{"name":"_determine_execution_strategy","lineno":219,"docstring":"Determine optimal execution strategy - NO HARDCODED THRESHOLDS"},{"name":"_generate_agent_requirements","lineno":241,"docstring":"Generate agent requirements based on strategy."},{"name":"_estimate_effort","lineno":270,"docstring":"Estimate effort level."}],"docstring":"Handles O3-powered complexity analysis and assessment","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/factor_analyzer.py","name":"FactorAnalyzer","data":{"name":"FactorAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/analysis/factor_analyzer.py","lineno":14,"bases":[],"methods":[{"name":"__init__","lineno":17,"docstring":null},{"name":"_initialize_indicators","lineno":22,"docstring":"Initialize complexity indicators for automated detection."},{"name":"_extract_request_text","lineno":125,"docstring":"Extract text from request object in multiple formats"},{"name":"analyze_scope_factor","lineno":142,"docstring":"Analyze scope complexity (1-10)."},{"name":"analyze_technical_depth_factor","lineno":209,"docstring":"Analyze technical depth complexity (1-10)."},{"name":"analyze_domain_knowledge_factor","lineno":269,"docstring":"Analyze domain knowledge complexity (1-10)."},{"name":"analyze_dependencies_factor","lineno":329,"docstring":"Analyze dependencies complexity (1-10)."},{"name":"analyze_timeline_factor","lineno":383,"docstring":"Analyze timeline complexity (1-10)."},{"name":"analyze_risk_factor","lineno":431,"docstring":"Analyze risk complexity (1-10)."}],"docstring":"Analyzes individual complexity factors using pattern recognition","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/config/config_manager.py","name":"APIConfig","data":{"name":"APIConfig","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/config/config_manager.py","lineno":27,"bases":[],"methods":[],"docstring":"OpenAI API configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/config/config_manager.py","name":"AgentFactoryConfig","data":{"name":"AgentFactoryConfig","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/config/config_manager.py","lineno":103,"bases":[],"methods":[],"docstring":"Agent factory configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/enforcement/implementation_guards.py","name":"SophisticationViolationError","data":{"name":"SophisticationViolationError","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/enforcement/implementation_guards.py","lineno":18,"bases":["Exception"],"methods":[],"docstring":"Raised when simplified patterns are detected","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/execution/execution_engine.py","name":"ExecutionEngine","data":{"name":"ExecutionEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/execution/execution_engine.py","lineno":66,"bases":[],"methods":[{"name":"__init__","lineno":88,"docstring":null},{"name":"_build_stategraph","lineno":95,"docstring":"🔒 **CRITICAL: LangGraph StateGraph construction - MANDATORY PATTERN** 🔒\n\nThis method builds the ONLY approved StateGraph architecture for OAMAT-SD.\n\n⚠️  **WARNING: DO NOT MODIFY THIS ARCHITECTURE**\n\nThe 3-node pattern is mandatory:\n1. distribute_agents: Prepares state for distribution\n2. execute_agent: Executes individual agents in parallel via Send API\n3. collect_results: Collects and merges results\n\n🚨 **CRITICAL EDGE PATTERNS:**\n- START → distribute_agents (normal edge)\n- distribute_agents → execute_agent (CONDITIONAL edge with Send routing)\n- execute_agent → collect_results (normal edge)\n- collect_results → END (normal edge)\n\nThe conditional edge is MANDATORY for Send API routing functionality."},{"name":"_prepare_agent_distribution","lineno":239,"docstring":"🔒 **CRITICAL: Node function for agent distribution preparation** 🔒\n\n⚠️  **STATE HANDLING WARNING - DO NOT CHANGE THESE PATTERNS:**\n\n1. **Parameter type**: state is dict, NOT SmartDecompositionState\n   - LangGraph automatically converts TypedDict to dict during execution\n   - NEVER use state.attribute_name syntax\n   - ALWAYS use state.get(\"attribute_name\", default)\n\n2. **Return type**: MUST return dict, NOT SmartDecompositionState\n   - LangGraph expects dict return values\n   - TypedDict return will cause serialization issues\n\n🚨 **CRITICAL**: This is a NODE function, not a routing function\n- Node functions prepare/transform state\n- Routing functions (like _create_send_objects) return Send objects\n- DO NOT mix these responsibilities\n\n❌ **NEVER REVERT TO:**\n   - def _prepare_agent_distribution(self, state: SmartDecompositionState) -> SmartDecompositionState\n   - state.specialized_agents access pattern\n   - return SmartDecompositionState(...)\n\n✅ **ALWAYS MAINTAIN:**\n   - state.get(\"specialized_agents\", {}) access pattern\n   - return state (as dict)\n   - Type hints as dict, not SmartDecompositionState"},{"name":"_create_send_objects","lineno":281,"docstring":"🔒 **CRITICAL: Routing function that creates Send objects for parallel execution** 🔒\n\n⚠️  **SEND API WARNING - THIS IS THE CORE OF PARALLEL ORCHESTRATION:**\n\n1. **Purpose**: This function enables LangGraph's native parallel execution\n   - Returns Send objects that LangGraph uses for parallel routing\n   - Each Send object creates a separate parallel execution path\n   - Provides 3-5x performance improvement over sequential execution\n\n2. **State Creation Pattern**: Create dict states for Send objects\n   - LangGraph Send API expects dict states, not TypedDict\n   - Each agent gets isolated state with only its own data\n   - Use state.get() patterns for safe access\n\n3. **Send Object Pattern**: Send(\"target_node\", agent_state)\n   - \"execute_agent\" is the target node for all agents\n   - Each gets a separate agent_state dict\n   - LangGraph automatically merges results\n\n🚨 **CRITICAL DEPENDENCIES:**\n- Must be used with add_conditional_edges (NOT add_edge)\n- Target node (\"execute_agent\") must handle dict states\n- Results automatically merged by LangGraph StateGraph\n\n❌ **NEVER REVERT TO:**\n   - asyncio.gather() patterns (Rule 997 violation)\n   - Custom parallel execution loops\n   - Sequential agent execution\n   - SmartDecompositionState object creation\n\n✅ **ALWAYS MAINTAIN:**\n   - Send objects for each agent\n   - Dict state creation pattern\n   - state.get() access methods\n   - Return list[Send] type hint"},{"name":"_collect_agent_results","lineno":484,"docstring":"Collect results from all agents - LangGraph automatically merges states"}],"docstring":"🔒 **CRITICAL: LangGraph StateGraph-based parallel execution - DO NOT MODIFY** 🔒\n\nThis class implements the ONLY approved pattern for OAMAT-SD agent orchestration:\n- LangGraph StateGraph for workflow management\n- Send API for parallel agent coordination\n- Native LangGraph patterns (NO custom asyncio)\n\n❌ **NEVER REVERT TO:**\n   - asyncio.gather() usage (Rule 997 violation)\n   - Custom asyncio coordination\n   - Sequential agent execution\n   - Manual state routing\n\n✅ **ALWAYS MAINTAIN:**\n   - Send API for parallel execution\n   - StateGraph workflow architecture\n   - Dict-based state handling (not TypedDict access)\n   - Proper LangGraph node patterns","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/execution/subdivision_executor.py","name":"SubdivisionExecutor","data":{"name":"SubdivisionExecutor","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/execution/subdivision_executor.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize the Subdivision Executor"},{"name":"_build_subdivision_graph","lineno":120,"docstring":"Build LangGraph StateGraph for subdivision execution"},{"name":"_subdivision_coordinator_node","lineno":168,"docstring":"Coordinate subdivision workflow execution using Send API"},{"name":"_create_subdivision_routing","lineno":205,"docstring":"Create Send objects for parallel subdivision agent execution"},{"name":"_create_agent_execution_node","lineno":230,"docstring":"Create execution node for a specific subdivision agent"},{"name":"_aggregate_results_node","lineno":310,"docstring":"Aggregate results from all subdivision agents"},{"name":"get_subdivision_execution_metrics","lineno":340,"docstring":"Get metrics about subdivision execution"}],"docstring":"Specialized executor for subdivision workflows using LangGraph Send API\n\nHandles:\n- Parallel execution of subdivision agents\n- Tool-based handoffs between agents\n- State coordination across subdivision hierarchy\n- Result aggregation and integration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IRequestValidationAgent","data":{"name":"IRequestValidationAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":20,"bases":["ABC"],"methods":[],"docstring":"Interface for dynamic request validation and information extraction","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IGapAnalysisAgent","data":{"name":"IGapAnalysisAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":55,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent gap analysis and dynamic prioritization","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IInformationCompletionAgent","data":{"name":"IInformationCompletionAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":91,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent information completion using dynamic research","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IComplexityAnalysisModel","data":{"name":"IComplexityAnalysisModel","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":129,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent complexity analysis using dynamic factor generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IO3MasterAgent","data":{"name":"IO3MasterAgent","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":166,"bases":["ABC"],"methods":[],"docstring":"Interface for O3 master agent with dynamic strategy generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","name":"IDynamicAgentFactory","data":{"name":"IDynamicAgentFactory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/agent_interfaces.py","lineno":218,"bases":["ABC"],"methods":[],"docstring":"Interface for truly dynamic agent creation without templates","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","name":"ILangGraphOrchestrator","data":{"name":"ILangGraphOrchestrator","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","lineno":16,"bases":["ABC"],"methods":[],"docstring":"Interface for dynamic LangGraph workflow orchestration","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","name":"IMCPToolRegistry","data":{"name":"IMCPToolRegistry","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/orchestration_interfaces.py","lineno":66,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent MCP tool management and selection","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/system_interfaces.py","name":"IErrorHandlingManager","data":{"name":"IErrorHandlingManager","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/interfaces/system_interfaces.py","lineno":54,"bases":["ABC"],"methods":[],"docstring":"Interface for intelligent error handling and recovery","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","name":"GeneratedFile","data":{"name":"GeneratedFile","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","lineno":19,"bases":["StrictBaseModel"],"methods":[],"docstring":"Single file generated by an agent - MANDATORY FORMAT","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","name":"ToolExecution","data":{"name":"ToolExecution","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","lineno":37,"bases":["StrictBaseModel"],"methods":[],"docstring":"Tool execution performed by agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","name":"AgentDeliverables","data":{"name":"AgentDeliverables","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","lineno":46,"bases":["StrictBaseModel"],"methods":[],"docstring":"MANDATORY structured response format for ALL agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","name":"AgentResponse","data":{"name":"AgentResponse","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_response_models.py","lineno":82,"bases":["StrictBaseModel"],"methods":[],"docstring":"Complete agent response wrapper - TOP LEVEL SCHEMA","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_specification_schemas.py","name":"AgentSpecificationOutput","data":{"name":"AgentSpecificationOutput","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_specification_schemas.py","lineno":4,"bases":["BaseModel"],"methods":[],"docstring":"Structured output schema for O3 agent specification generation\n\nIMPORTANT: This schema expects a JSON object with an 'agent_specifications' key containing an array.\nDO NOT return just the array directly - wrap it in this object structure.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_specification_schemas.py","name":"AgentSpecification","data":{"name":"AgentSpecification","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/agent_specification_schemas.py","lineno":18,"bases":["BaseModel"],"methods":[],"docstring":"Individual agent specification with all required fields","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","name":"GapType","data":{"name":"GapType","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","lineno":35,"bases":["str","Enum"],"methods":[],"docstring":"Type/category of information gap for agentic gap analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","name":"AgentCommand","data":{"name":"AgentCommand","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","lineno":219,"bases":["BaseModel"],"methods":[],"docstring":"Command for agent execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","name":"AgentResult","data":{"name":"AgentResult","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","lineno":230,"bases":["BaseModel"],"methods":[],"docstring":"Result from agent execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","name":"AgentState","data":{"name":"AgentState","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/data_models.py","lineno":242,"bases":["BaseModel"],"methods":[],"docstring":"State management for agent orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/o3_analysis_models.py","name":"AgentStrategy","data":{"name":"AgentStrategy","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/o3_analysis_models.py","lineno":50,"bases":[],"methods":[],"docstring":"Strategy for agent deployment and coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/o3_analysis_models.py","name":"ExecutionPlan","data":{"name":"ExecutionPlan","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/o3_analysis_models.py","lineno":62,"bases":[],"methods":[],"docstring":"Detailed execution plan for the request with explicit dependency tracking.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/tool_models.py","name":"ToolCategory","data":{"name":"ToolCategory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/models/tool_models.py","lineno":27,"bases":["str","Enum"],"methods":[],"docstring":"Categories of available tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/file_manager.py","name":"FileOperationsManager","data":{"name":"FileOperationsManager","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/file_manager.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":22,"docstring":null},{"name":"_extract_content_from_agent_output","lineno":133,"docstring":"Extract actual content from LangGraph agent output format"},{"name":"_extract_filename_from_hint","lineno":775,"docstring":"Extract filename from various hint formats"},{"name":"_sanitize_filename","lineno":798,"docstring":"Sanitize filename for safe filesystem usage"},{"name":"_detect_language_from_extension","lineno":813,"docstring":"Detect programming language from file extension"},{"name":"_get_extension_for_language","lineno":849,"docstring":"Get appropriate file extension for a language"},{"name":"_detect_language_from_extension","lineno":869,"docstring":"Detect programming language from file extension"},{"name":"_is_json_deliverables_format","lineno":977,"docstring":"Detect if the content is in JSON deliverables format.\nExpected format: '{\"deliverables\": [{\"filename\": \"...\", \"content\": \"...\"}]}'"},{"name":"_deduplicate_files","lineno":1057,"docstring":"Remove duplicate files based on content similarity"},{"name":"_generate_default_filename","lineno":1074,"docstring":"Generate a default filename when one can't be determined"},{"name":"create_project_context","lineno":1106,"docstring":"Create project context and directory structure"}],"docstring":"Handles all file operations for the Smart Decomposition Agent","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_integrator.py","name":"SubdivisionResultIntegrator","data":{"name":"SubdivisionResultIntegrator","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_integrator.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initialize the Subdivision Result Integrator"},{"name":"_format_agent_outputs_for_analysis","lineno":477,"docstring":"Format agent outputs for O3 analysis"},{"name":"_format_agent_outputs_for_synthesis","lineno":497,"docstring":"Format agent outputs for solution synthesis"},{"name":"get_integration_metrics","lineno":520,"docstring":"Get comprehensive metrics about the integration process"}],"docstring":"Intelligent integration of subdivision agent outputs using O3 reasoning\n\nCapabilities:\n- Cross-domain result synthesis\n- Conflict detection and resolution\n- Quality assessment and scoring\n- Performance optimization\n- Coherent solution generation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_state_manager.py","name":"SubdivisionStateContext","data":{"name":"SubdivisionStateContext","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_state_manager.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":null},{"name":"add_child_context","lineno":45,"docstring":"Add a child subdivision context"},{"name":"create_state_snapshot","lineno":52,"docstring":"Create a snapshot of the current state"},{"name":"get_inheritance_chain","lineno":64,"docstring":"Get the full inheritance chain from root to this context"}],"docstring":"Context container for subdivision state management","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_state_manager.py","name":"SubdivisionStateManager","data":{"name":"SubdivisionStateManager","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/operations/subdivision_state_manager.py","lineno":74,"bases":[],"methods":[{"name":"__init__","lineno":86,"docstring":"Initialize the Subdivision State Manager"},{"name":"get_context_hierarchy","lineno":435,"docstring":"Get the full context hierarchy for a subdivision context"},{"name":"cleanup_completed_contexts","lineno":467,"docstring":"Clean up completed subdivision contexts older than retention period"},{"name":"get_performance_metrics","lineno":503,"docstring":"Get performance metrics for subdivision state management"}],"docstring":"Manages state coordination and context across subdivision workflows\n\nCapabilities:\n- Hierarchical state tracking\n- Context inheritance and preservation\n- State synchronization between agents\n- Performance optimization\n- Cross-agent coordination","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/request_standardizer.py","name":"RequestStandardizer","data":{"name":"RequestStandardizer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/request_standardizer.py","lineno":31,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the Request Standardizer with Subdivision Analysis"},{"name":"_create_standardization_prompt","lineno":195,"docstring":"Create the comprehensive analysis prompt for request standardization"},{"name":"validate_standardized_request","lineno":316,"docstring":"Validate the quality and completeness of a standardized request.\n\nReturns:\n    Validation report with recommendations"}],"docstring":"Intelligent preprocessing agent that standardizes user requests.\n\nAnalyzes raw user input and fills in a comprehensive StandardizedRequest\nschema with intelligent assumptions where information is missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","name":"DomainSpecialization","data":{"name":"DomainSpecialization","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","lineno":136,"bases":["BaseModel"],"methods":[],"docstring":"Domain-specific specialization requirements - ALL O3-GENERATED","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","name":"TechnicalSpecification","data":{"name":"TechnicalSpecification","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","lineno":176,"bases":["BaseModel"],"methods":[],"docstring":"Technical requirements and constraints","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","name":"ContextInformation","data":{"name":"ContextInformation","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","lineno":241,"bases":["BaseModel"],"methods":[],"docstring":"Environmental and contextual details","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","name":"StandardizedRequest","data":{"name":"StandardizedRequest","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/preprocessing/schemas.py","lineno":295,"bases":["BaseModel"],"methods":[{"name":"ensure_functional_requirements_list","lineno":377,"docstring":"Ensure functional requirements is always a list"},{"name":"summary","lineno":384,"docstring":"Generate a concise summary of the standardized request"},{"name":"is_well_defined","lineno":389,"docstring":"Check if the request is well-defined based on confidence scores"},{"name":"key_technologies","lineno":397,"docstring":"Get the key technologies involved in this request"},{"name":"requires_subdivision","lineno":406,"docstring":"Check if this request requires subdivision based on analysis"},{"name":"subdivision_complexity_score","lineno":413,"docstring":"Get the subdivision complexity score"},{"name":"suggested_subdivision_roles","lineno":420,"docstring":"Get suggested roles for subdivision"},{"name":"get_domain_specializations_summary","lineno":426,"docstring":"Get summary of domain specializations"},{"name":"estimate_subdivision_benefits","lineno":433,"docstring":"Estimate benefits vs overhead of subdivision"}],"docstring":"Universal standardized format for any request to OAMAT Smart Decomposition.\n\nThis schema ensures the O3 master agent always receives complete, structured\ninformation regardless of how the user originally phrased their request.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/pydantic_configs.py","name":"StrictBaseModel","data":{"name":"StrictBaseModel","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/pydantic_configs.py","lineno":8,"bases":["BaseModel"],"methods":[],"docstring":"Base model with strict validation for OpenAI structured outputs","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/ai_reasoning_utils.py","name":"AIReasoningUtils","data":{"name":"AIReasoningUtils","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/ai_reasoning_utils.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"_default_model_config","lineno":41,"docstring":"Default configuration for O3 model integration."},{"name":"_get_approved_ai_model","lineno":50,"docstring":"Get approved AI model for specific use case using centralized configuration"},{"name":"parse_json_from_ai_response","lineno":150,"docstring":"Parse JSON from AI response with validation (shared utility)"},{"name":"validate_ai_output_schema","lineno":176,"docstring":"Validate AI output conforms to expected schema"},{"name":"create_structured_prompt","lineno":193,"docstring":"Create a structured prompt for AI reasoning"},{"name":"create_analysis_prompt","lineno":230,"docstring":"Create a prompt specifically for analysis tasks"},{"name":"create_generation_prompt","lineno":259,"docstring":"Create a prompt for generation tasks"},{"name":"extract_json_from_response","lineno":293,"docstring":"Extract JSON from AI response with optional fallback"},{"name":"log_reasoning_step","lineno":306,"docstring":"Log a reasoning step for debugging and analysis"},{"name":"create_error_recovery_prompt","lineno":321,"docstring":"Create a prompt for error recovery scenarios"}],"docstring":"Handles AI reasoning infrastructure and utilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"StructuredOutputError","data":{"name":"StructuredOutputError","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":32,"bases":["Exception"],"methods":[],"docstring":"Exception raised when structured output enforcement fails","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"SchemaValidationError","data":{"name":"SchemaValidationError","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":38,"bases":["Exception"],"methods":[],"docstring":"Exception raised when schema validation fails","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","name":"StructuredOutputEnforcer","data":{"name":"StructuredOutputEnforcer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/structured_output_enforcer.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":null},{"name":"_load_schemas","lineno":93,"docstring":"Load all JSON schemas for structured output enforcement and resolve references recursively"},{"name":"_resolve_schema_references","lineno":127,"docstring":"Recursively resolve $ref references in a schema"},{"name":"_resolve_refs","lineno":160,"docstring":"Resolve $ref references using the definitions"},{"name":"_make_openai_compliant_schema","lineno":195,"docstring":"Convert a Pydantic-generated schema to OpenAI structured output compliant format.\n\nOpenAI requires:\n- \"additionalProperties\": false on all objects\n- All properties must be in \"required\" array when additionalProperties is false\n- No $ref references - everything must be inlined"},{"name":"_create_schema_enforced_prompt","lineno":628,"docstring":"Create an enhanced prompt that enforces schema compliance"},{"name":"_generate_schema_description","lineno":678,"docstring":"Generate human-readable description of schema constraints"},{"name":"_validate_against_schema","lineno":799,"docstring":"Validate result against JSON schema with detailed error reporting"},{"name":"_validate_business_logic","lineno":816,"docstring":"Additional business logic validation beyond schema compliance"},{"name":"_validate_workflow_business_logic","lineno":840,"docstring":"Validate WorkflowSpecification business logic"},{"name":"_validate_config_business_logic","lineno":856,"docstring":"Validate Dynamic Configuration business logic"},{"name":"_validate_complexity_business_logic","lineno":872,"docstring":"Validate Complexity Analysis business logic"},{"name":"_validate_strategy_business_logic","lineno":891,"docstring":"Validate Agent Strategy business logic"},{"name":"_format_validation_error","lineno":905,"docstring":"Format validation error for detailed debugging"},{"name":"_save_raw_response","lineno":913,"docstring":"Save raw O3 response for debugging"},{"name":"_log_success_metrics","lineno":941,"docstring":"Log success metrics for monitoring"},{"name":"get_available_schemas","lineno":1004,"docstring":"Get list of available schema names"},{"name":"get_schema","lineno":1008,"docstring":"Get specific schema by name"}],"docstring":"Core engine for enforcing structured outputs from O3 models using OpenAI's\nresponse_format parameter with comprehensive schema validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/subdivision_analyzer.py","name":"SubdivisionAnalyzer","data":{"name":"SubdivisionAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/reasoning/subdivision_analyzer.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":"Initialize the Subdivision Analyzer"},{"name":"_build_analysis_context","lineno":163,"docstring":"Build comprehensive context for O3 subdivision analysis"},{"name":"_display_subdivision_analysis","lineno":224,"docstring":"Display subdivision analysis results for debugging"}],"docstring":"O3-Powered Subdivision Analysis Agent\n\nUses O3-mini reasoning model to analyze request complexity and determine\noptimal subdivision strategies with dynamic metadata generation.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/console_interface.py","name":"ConsoleInterface","data":{"name":"ConsoleInterface","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/console_interface.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":30,"docstring":null},{"name":"show_header","lineno":36,"docstring":"Display beautiful header"},{"name":"show_request_analysis","lineno":48,"docstring":"Display request analysis in beautiful format"},{"name":"show_workflow_specification","lineno":74,"docstring":"Display workflow specification with pretty formatting"},{"name":"show_subdivision_detection","lineno":107,"docstring":"Display subdivision workflow detection"},{"name":"show_agent_creation","lineno":121,"docstring":"Display agent creation results"},{"name":"show_execution_start","lineno":151,"docstring":"Display execution start with agent count"},{"name":"show_agent_progress","lineno":165,"docstring":"Display individual agent progress"},{"name":"show_synthesis_start","lineno":184,"docstring":"Display solution synthesis start"},{"name":"show_file_generation","lineno":200,"docstring":"Display file generation results"},{"name":"show_final_results","lineno":238,"docstring":"Display final results summary"},{"name":"show_error","lineno":277,"docstring":"Display error in a clear format"},{"name":"show_pretty_json","lineno":288,"docstring":"Display JSON data with pretty formatting"},{"name":"show_prompt_preview","lineno":296,"docstring":"Display prompt with proper formatting"},{"name":"_show_step","lineno":311,"docstring":"Display step header with progress"},{"name":"clear","lineno":323,"docstring":"Clear the console"},{"name":"print","lineno":327,"docstring":"Simple print method for basic messages"}],"docstring":"Beautiful console interface for user-friendly OAMAT-SD output\n\nSeparates user experience from technical logging:\n- Console: Clear, formatted, user-friendly\n- Debug Logs: Technical, detailed, comprehensive","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/log_config.py","name":"LogCategory","data":{"name":"LogCategory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/log_config.py","lineno":26,"bases":["str","Enum"],"methods":[],"docstring":"Intelligent log decomposition categories","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/logger_factory.py","name":"SmartDecompositionProcessor","data":{"name":"SmartDecompositionProcessor","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/logger_factory.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"__call__","lineno":32,"docstring":"Process log events with correlation context and intelligent routing"}],"docstring":"Custom structlog processor for Smart Decomposition architecture","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/logger_factory.py","name":"LoggerFactory","data":{"name":"LoggerFactory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/sd_logging/logger_factory.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":null},{"name":"_setup_structlog","lineno":70,"docstring":"Configure structlog for structured JSON logging"},{"name":"_setup_file_handlers","lineno":90,"docstring":"Setup rotating file handlers for each log category"},{"name":"_create_file_handler","lineno":103,"docstring":"Create a rotating file handler for a specific log category"},{"name":"get_console_logger","lineno":131,"docstring":"Get logger for user-friendly console output"},{"name":"get_debug_logger","lineno":138,"docstring":"Get comprehensive debug logger"},{"name":"get_api_logger","lineno":145,"docstring":"Get logger for API calls and responses"},{"name":"get_workflow_logger","lineno":152,"docstring":"Get logger for DAG execution and agent coordination"},{"name":"get_performance_logger","lineno":159,"docstring":"Get logger for timing and resource metrics"},{"name":"get_complexity_logger","lineno":166,"docstring":"Get logger for complexity analysis and decision-making"},{"name":"get_error_logger","lineno":173,"docstring":"Get logger for errors, exceptions, and recovery"},{"name":"get_audit_logger","lineno":180,"docstring":"Get audit-specific logger"},{"name":"log_api_call","lineno":201,"docstring":"Log an API call with comprehensive details"},{"name":"log_agent_interaction","lineno":233,"docstring":"Log agent interactions and handoffs"},{"name":"log_complexity_analysis","lineno":262,"docstring":"Log complexity analysis decisions"},{"name":"log_performance_metrics","lineno":284,"docstring":"Log performance and resource usage metrics"},{"name":"log_workflow_execution","lineno":307,"docstring":"Log complete workflow execution"},{"name":"get_tool_logger","lineno":339,"docstring":"Get tool-specific logger for MCP tools"},{"name":"log_tool_execution","lineno":360,"docstring":"Log comprehensive tool execution details"},{"name":"get_agent_logger","lineno":399,"docstring":"Get agent-specific logger"},{"name":"log_agent_lifecycle","lineno":420,"docstring":"Log agent lifecycle events (creation, execution, completion)"},{"name":"get_component_logger","lineno":441,"docstring":"Get component-specific logger"},{"name":"log_component_operation","lineno":462,"docstring":"Log component operations with context"},{"name":"get_audit_logger","lineno":490,"docstring":"Get audit-specific logger"},{"name":"log_audit_event","lineno":498,"docstring":"Log audit and security events"},{"name":"log_timing_breakdown","lineno":524,"docstring":"Log detailed timing breakdown for performance analysis"},{"name":"log_success_metrics","lineno":548,"docstring":"Log success rates and quality metrics"},{"name":"log_memory_usage","lineno":571,"docstring":"Log memory usage metrics"},{"name":"log_request_flow","lineno":595,"docstring":"Log end-to-end request processing flow"},{"name":"log_error_with_context","lineno":615,"docstring":"Log errors with comprehensive context"},{"name":"_truncate_content","lineno":639,"docstring":"Truncate content if too large for logging"},{"name":"create_master_log","lineno":653,"docstring":"Create a centralized master log that captures ALL log entries"},{"name":"reconfigure_for_project","lineno":723,"docstring":"Reconfigure logging to use project-specific log directory"}],"docstring":"Factory for creating specialized loggers with intelligent decomposition","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/synthesis/solution_synthesis.py","name":"SolutionSynthesisEngine","data":{"name":"SolutionSynthesisEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/synthesis/solution_synthesis.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"_create_synthesis_prompt","lineno":149,"docstring":"Create a comprehensive synthesis prompt for O3 reasoning"},{"name":"_determine_artifact_type","lineno":244,"docstring":"Determine the type of artifact being created"},{"name":"_validate_solution","lineno":263,"docstring":"Validate the synthesized solution"},{"name":"_calculate_synthesis_quality","lineno":353,"docstring":"Calculate the quality score of the synthesized solution"}],"docstring":"Handles synthesis of agent outputs into final solutions","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/core/execution_engine.py","name":"ToolExecutionEngine","data":{"name":"ToolExecutionEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/core/execution_engine.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null}],"docstring":"Handles tool execution and parallel coordination","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/core/mcp_integration.py","name":"MCPIntegration","data":{"name":"MCPIntegration","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/core/mcp_integration.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":21,"docstring":null},{"name":"get_available_tools","lineno":335,"docstring":"Return list of available tool names"},{"name":"is_tool_available","lineno":339,"docstring":"Check if a specific tool is available"}],"docstring":"Unified MCP Integration Layer\n\nThis class provides a bridge between the OAMAT tool system and the actual\nMCP functions available in the current environment.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/mcp_tool_registry_original.py","name":"ToolCategory","data":{"name":"ToolCategory","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/mcp_tool_registry_original.py","lineno":24,"bases":["str","Enum"],"methods":[],"docstring":"Categories of available tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/mcp_tool_registry_reference.py","name":"MCPToolRegistry","data":{"name":"MCPToolRegistry","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/tools/mcp_tool_registry_reference.py","lineno":194,"bases":[],"methods":[{"name":"__init__","lineno":199,"docstring":null},{"name":"_load_config","lineno":254,"docstring":"Load MCP configuration"},{"name":"_initialize_registry","lineno":266,"docstring":"Initialize the tool registry with automatic discovery"},{"name":"_discover_and_register_tools","lineno":311,"docstring":"Automatically discover and register available MCP tools"},{"name":"_register_tool","lineno":444,"docstring":"Register a tool in the registry"},{"name":"_load_tool_chains","lineno":486,"docstring":"Load predefined tool chains from configuration"},{"name":"execute_tool","lineno":547,"docstring":"Synchronous wrapper for executing a tool method."},{"name":"_update_tool_stats","lineno":676,"docstring":"Update tool performance statistics"},{"name":"_infer_method_for_tool","lineno":852,"docstring":"Infer the best method to use for a tool based on available data"},{"name":"get_tool_analytics","lineno":903,"docstring":"Get comprehensive analytics about tool usage and performance"},{"name":"list_available_tools","lineno":961,"docstring":"List all available tools with their metadata"},{"name":"get_tools_by_capability","lineno":976,"docstring":"Get tools that have a specific capability"}],"docstring":"Comprehensive MCP tool registry with automatic discovery and intelligent routing","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/completion_engine.py","name":"CompletionEngine","data":{"name":"CompletionEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/completion_engine.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"apply_defaults","lineno":84,"docstring":"Apply reasonable defaults for gaps that have them."},{"name":"document_assumptions","lineno":97,"docstring":"Document assumptions made during completion."},{"name":"identify_escalation_needs","lineno":114,"docstring":"Determine if escalation to user is required."},{"name":"get_completion_summary","lineno":189,"docstring":"Get a human-readable summary of the completion results."},{"name":"get_research_confidence","lineno":209,"docstring":"Get confidence level for research results of a specific field - NO FALLBACKS"}],"docstring":"Fills information gaps through research and intelligent defaults","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/gap_analyzer.py","name":"GapAnalyzer","data":{"name":"GapAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/gap_analyzer.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"prioritize_gaps","lineno":30,"docstring":"Prioritize missing information gaps."},{"name":"calculate_confidence","lineno":80,"docstring":"Calculate confidence based on gaps."},{"name":"categorize_gaps","lineno":95,"docstring":"Categorize gaps into researchable and unresearchable."},{"name":"analyze_gaps","lineno":103,"docstring":"Perform comprehensive gap analysis."},{"name":"get_critical_gaps","lineno":139,"docstring":"Get only critical gaps from a list."},{"name":"get_researchable_gaps","lineno":143,"docstring":"Get only researchable gaps from a list."},{"name":"estimate_completion_difficulty","lineno":147,"docstring":"Estimate the difficulty of completing the gaps."}],"docstring":"Analyzes information gaps and prioritizes them for completion","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/validation_engine.py","name":"ValidationEngine","data":{"name":"ValidationEngine","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/src/validation/validation_engine.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":27,"docstring":null},{"name":"_pattern_detect_request_type","lineno":255,"docstring":"Pattern-based request type detection"},{"name":"_pattern_extract_information","lineno":330,"docstring":"Pattern-based information extraction"},{"name":"_pattern_detect_missing_fields","lineno":360,"docstring":"Pattern-based missing field detection"},{"name":"_parse_type_response","lineno":381,"docstring":"Parse AI request type response"},{"name":"_parse_extraction_response","lineno":409,"docstring":"Parse AI information extraction response"},{"name":"_parse_missing_fields_response","lineno":422,"docstring":"Parse AI missing fields response"}],"docstring":"AI-powered request validation and information extraction","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/code_mapper.py","name":"CodeAnalyzer","data":{"name":"CodeAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/code_mapper.py","lineno":92,"bases":[],"methods":[{"name":"__init__","lineno":95,"docstring":null},{"name":"analyze_project","lineno":103,"docstring":"Analyze the entire project"},{"name":"_should_skip_file","lineno":129,"docstring":"Check if file should be skipped"},{"name":"_analyze_file","lineno":146,"docstring":"Analyze a single Python file"}],"docstring":"AST-based code analyzer","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/code_mapper.py","name":"FileAnalyzer","data":{"name":"FileAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/code_mapper.py","lineno":168,"bases":["ast.NodeVisitor"],"methods":[{"name":"__init__","lineno":171,"docstring":null},{"name":"visit_FunctionDef","lineno":180,"docstring":"Visit function definitions"},{"name":"visit_AsyncFunctionDef","lineno":184,"docstring":"Visit async function definitions"},{"name":"_process_function","lineno":188,"docstring":"Process both regular and async function definitions"},{"name":"visit_ClassDef","lineno":236,"docstring":"Visit class definitions"},{"name":"visit_Assign","lineno":276,"docstring":"Visit variable assignments"},{"name":"visit_AnnAssign","lineno":292,"docstring":"Visit annotated assignments"},{"name":"visit_Import","lineno":309,"docstring":"Visit import statements"},{"name":"visit_ImportFrom","lineno":323,"docstring":"Visit from ... import statements"},{"name":"_get_current_scope","lineno":339,"docstring":"Get current scope (module, class, or function)"},{"name":"_get_literal_value","lineno":348,"docstring":"Extract literal value from AST node"}],"docstring":"AST visitor for analyzing a single file","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/dev_agent_validator.py","name":"DevAgentValidator","data":{"name":"DevAgentValidator","file_path":"opsvi/opsvi_opsvi/applications/oamat_sd/tools/dev_agent_validator.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":null},{"name":"check_before_change","lineno":38,"docstring":"MANDATORY: Check function signature before making changes\n\nThis MUST be called before any function call or modification"},{"name":"search_function","lineno":76,"docstring":"Search for functions in the codebase"},{"name":"search_class","lineno":104,"docstring":"Search for classes in the codebase"},{"name":"validate_import","lineno":135,"docstring":"Validate if a module is imported in the codebase"},{"name":"get_function_signature","lineno":161,"docstring":"Get complete function signature and information"},{"name":"enforce_validation","lineno":191,"docstring":"Enforce validation for any code operation\n\nThis is the main entry point that dev agents MUST call before any code changes"}],"docstring":"Validator to enforce code map checking for dev agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/__init__.py","name":"AgentOutput","data":{"name":"AgentOutput","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/__init__.py","lineno":29,"bases":["BaseModel"],"methods":[],"docstring":"Standardized output format for LangGraph agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/factory.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":null},{"name":"_initialize_model","lineno":179,"docstring":"Initializes the language model for the factory."},{"name":"_load_development_rules","lineno":205,"docstring":"Load development rules from the project to embed in agent prompts."},{"name":"create_researcher_agent","lineno":250,"docstring":"Creates a researcher agent with knowledge and web search tools."},{"name":"create_coder_agent","lineno":272,"docstring":"Creates a coder agent with file system and code generation tools."},{"name":"create_reviewer_agent","lineno":307,"docstring":"Creates a reviewer agent for quality assessment."},{"name":"create_doc_agent","lineno":340,"docstring":"Creates a documentation agent."},{"name":"create_agent_with_tools","lineno":358,"docstring":"Dynamically creates an agent with a set of tools based on a spec.\nThis is the primary method for creating agents in the OAMAT system."},{"name":"create_agent","lineno":391,"docstring":"Creates an agent based on a provided specification.\nThe spec should define the agent's role, capabilities, and tool dependencies."},{"name":"create_dynamic_agent","lineno":418,"docstring":"Creates a dynamic agent based on a provided specification.\nThe spec should define the agent's role, capabilities, and tool dependencies."}],"docstring":"Factory for creating LangGraph agents with standardized tools and configurations.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools/research.py","name":"AgentResearchTool","data":{"name":"AgentResearchTool","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools/research.py","lineno":234,"bases":[],"methods":[{"name":"__init__","lineno":239,"docstring":"Initialize the agent research tool"}],"docstring":"Simplified research tool interface for OAMAT agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","name":"LangGraphAgentTools","data":{"name":"LangGraphAgentTools","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","lineno":46,"bases":[],"methods":[{"name":"__init__","lineno":49,"docstring":null},{"name":"create_handoff_tool","lineno":115,"docstring":"Create a handoff tool for agent-to-agent communication"},{"name":"create_file_system_tools","lineno":151,"docstring":"Creates a suite of tools for file system operations."},{"name":"create_knowledge_search_tool","lineno":155,"docstring":"Create a knowledge search tool"},{"name":"create_web_search_tool","lineno":159,"docstring":"Create a web search tool"},{"name":"create_academic_search_tool","lineno":163,"docstring":"Create an academic search tool"},{"name":"create_mcp_research_tools","lineno":167,"docstring":"Create MCP-based research tools"},{"name":"create_code_generation_tool","lineno":171,"docstring":"Create a code generation tool"},{"name":"create_review_tool","lineno":175,"docstring":"Create a code review tool"},{"name":"create_documentation_tool","lineno":179,"docstring":"Create a documentation generation tool"},{"name":"create_completion_tool","lineno":183,"docstring":"Create a task completion tool"},{"name":"create_testing_framework_tools","lineno":187,"docstring":"Create testing framework tools"},{"name":"create_deployment_tools","lineno":191,"docstring":"Create deployment tools"},{"name":"create_automation_tools","lineno":195,"docstring":"Create automation tools"},{"name":"create_quality_assurance_tools","lineno":199,"docstring":"Create quality assurance tools"},{"name":"create_quality_standards_tools","lineno":203,"docstring":"Create quality standards tools"},{"name":"create_security_framework_tools","lineno":207,"docstring":"Create security framework tools"},{"name":"create_state_management_tools","lineno":211,"docstring":"Create state management tools"},{"name":"create_monitoring_tools","lineno":215,"docstring":"Create monitoring tools"},{"name":"create_diagram_generation_tools","lineno":219,"docstring":"Create diagram generation tools"},{"name":"create_rule_access_tools","lineno":223,"docstring":"Creates tools for accessing project rules and standards."},{"name":"create_completion_tool","lineno":227,"docstring":"Creates a tool that signals the completion of a task."},{"name":"create_analysis_tools","lineno":240,"docstring":"Create analysis tools"},{"name":"create_design_tools","lineno":244,"docstring":"Create design tools"},{"name":"create_architecture_tools","lineno":248,"docstring":"Create architecture tools"},{"name":"create_quality_validation_tools","lineno":252,"docstring":"Create quality validation tools"},{"name":"create_planning_frameworks_tools","lineno":257,"docstring":"Create planning frameworks tools"},{"name":"create_database_operations_tools","lineno":263,"docstring":"Create database operations tools"},{"name":"create_web_scraping_tools","lineno":271,"docstring":"Create web scraping tools"}],"docstring":"Collection of tools and utilities for LangGraph agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","name":"ToolsBaseAgent","data":{"name":"ToolsBaseAgent","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/agent_factory/tools_manager.py","lineno":71,"bases":["LLMBaseAgent"],"methods":[{"name":"build_prompt","lineno":72,"docstring":null},{"name":"parse_output","lineno":75,"docstring":null},{"name":"process_request","lineno":78,"docstring":"Process tool requests using LLM execution\n\nArgs:\n    input_data: Dict with 'task' and 'prompt' keys\n\nReturns:\n    Dict with 'response' key containing the result"}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/llm_base_agent.py","name":"LLMBaseAgent","data":{"name":"LLMBaseAgent","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/llm_base_agent.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initializes the LLMBaseAgent.\nConnects to OpenAI and optionally to Neo4j if credentials are provided."},{"name":"store_knowledge","lineno":97,"docstring":"Stores knowledge content in the Neo4j database as Document and Chunk nodes.\nThis is a real implementation that replaces the mock version."},{"name":"_get_neo4j_client","lineno":144,"docstring":"Provides access to the Neo4j client instance."},{"name":"llm_call","lineno":148,"docstring":"Make an LLM call with structured response format (no fallbacks)\n\nArgs:\n    messages: List of LangChain messages\n    response_format: Pydantic model for structured response\n    **kwargs: Additional parameters\n\nReturns:\n    AI response with structured parsing if response_format provided"},{"name":"generate_workflow","lineno":306,"docstring":"Generate workflow using structured responses\n\nArgs:\n    user_request: The user's request\n    context: Optional context information\n\nReturns:\n    Dict containing workflow and reasoning"},{"name":"execute_task","lineno":352,"docstring":"Execute a specific task\n\nArgs:\n    task: Task description\n    context: Optional context data\n\nReturns:\n    Task execution result"},{"name":"__str__","lineno":390,"docstring":null}],"docstring":"Base agent class with OpenAI LLM integration and structured responses","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/manager/request_analyzer.py","name":"RequestAnalyzer","data":{"name":"RequestAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/manager/request_analyzer.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":null},{"name":"analyze_task_context","lineno":62,"docstring":"Analyze the user request using LLM to determine actual requirements rather than keyword matching.\nThis replaces the hardcoded domain detection with intelligent analysis.\n\nArgs:\n    user_request: The user's request\n    context: Additional context information\n\nReturns:\n    Task context dictionary with intelligent analysis of requirements"},{"name":"analyze_request","lineno":126,"docstring":"Perform sophisticated analysis of user request with comprehensive understanding.\n\nThis method applies deep understanding of OAMAT capabilities to analyze\nuser requests and generate sophisticated insights for workflow planning."},{"name":"analyze_user_request","lineno":241,"docstring":"Analyzes the request to understand requirements rather than just expanding text.\n\n1. Analyzes the request to understand true requirements and scope\n2. Identifies technical architecture decisions needed\n3. Generates strategic clarification questions\n4. Assesses risks and defines success criteria"}],"docstring":"Sophisticated request analysis component that understands user intent,\nscope, and technical requirements.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","name":"TaskComplexity","data":{"name":"TaskComplexity","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","lineno":27,"bases":["str","Enum"],"methods":[],"docstring":"Task complexity classification for intelligent resource allocation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","name":"WorkflowStrategy","data":{"name":"WorkflowStrategy","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","lineno":36,"bases":["str","Enum"],"methods":[],"docstring":"Workflow execution strategies for optimal orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","name":"EnhancedWorkflowNode","data":{"name":"EnhancedWorkflowNode","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","lineno":159,"bases":["BaseModel"],"methods":[],"docstring":"Sophisticated workflow node with comprehensive orchestration capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","name":"EnhancedWorkflowPlan","data":{"name":"EnhancedWorkflowPlan","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/agents/models.py","lineno":223,"bases":["BaseModel"],"methods":[],"docstring":"Comprehensive workflow plan with sophisticated orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/economic_incentive_system.py","name":"IncentiveDomain","data":{"name":"IncentiveDomain","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/economic_incentive_system.py","lineno":20,"bases":["Enum"],"methods":[],"docstring":"Different domains may have different subdivision characteristics","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/file_generation_orchestrator.py","name":"FileDependencyAnalyzer","data":{"name":"FileDependencyAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/file_generation_orchestrator.py","lineno":59,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":null},{"name":"analyze_dependencies","lineno":109,"docstring":"Analyze file dependencies and create execution batches"},{"name":"_get_pattern_dependencies","lineno":145,"docstring":"Get dependencies based on common patterns"},{"name":"_create_execution_batches","lineno":170,"docstring":"Create execution batches using topological sort"}],"docstring":"Analyzes file dependencies to create optimal parallel execution plan","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/file_generation_orchestrator.py","name":"FileGenerationOrchestrator","data":{"name":"FileGenerationOrchestrator","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/file_generation_orchestrator.py","lineno":319,"bases":[],"methods":[{"name":"__init__","lineno":322,"docstring":null},{"name":"_create_file_task_description","lineno":532,"docstring":"Create a detailed task description for file generation"}],"docstring":"Orchestrates parallel file generation within subtasks","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/fractal_integration_example.py","name":"FractalDecisionEngine","data":{"name":"FractalDecisionEngine","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/fractal_integration_example.py","lineno":40,"bases":[],"methods":[{"name":"__init__","lineno":50,"docstring":null},{"name":"make_subdivision_decision","lineno":59,"docstring":"Make comprehensive subdivision decision using both systems.\n\nProcess:\n1. Economic incentive analysis\n2. Context alignment validation\n3. Integration compatibility check\n4. Combined decision with risk assessment"}],"docstring":"Unified decision engine combining economic incentives with context alignment.\n\nMakes intelligent subdivision decisions that balance:\n- Economic efficiency (progressive reward reduction)\n- Context alignment (macro intent preservation)\n- Integration compatibility (component interoperability)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/main.py","name":"OAMATMain","data":{"name":"OAMATMain","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/main.py","lineno":132,"bases":[],"methods":[{"name":"__init__","lineno":135,"docstring":"Initialize OAMAT system with sophisticated orchestration capabilities"},{"name":"_create_neo4j_client","lineno":282,"docstring":"Create Neo4j client with proper error handling"},{"name":"get_role_for_node","lineno":333,"docstring":"Finds the agent role for a given node_id from the workflow plan."},{"name":"_get_agent_context","lineno":358,"docstring":"Get the context for the agent, including previous outputs."},{"name":"_extract_file_generation_history","lineno":391,"docstring":"Extract file generation history from previous agent outputs"},{"name":"_extract_dependency_file_context","lineno":439,"docstring":"Extract file contents from dependency nodes for current agent to reference"},{"name":"_create_project_context","lineno":487,"docstring":"Generates a unique project name and creates its directory, or reuses existing context if available."},{"name":"_run_agent_node","lineno":561,"docstring":"Runs a single agent node in the workflow."},{"name":"_create_agent_executable","lineno":887,"docstring":"Creates a runnable agent executable from the agent factory."},{"name":"_supervisor_node","lineno":909,"docstring":"RULE 955: Command-based supervisor for intelligent routing"},{"name":"_analyze_next_step","lineno":945,"docstring":"RULE 955: Intelligent next step analysis using Command objects"},{"name":"_identify_parallel_candidates","lineno":1148,"docstring":"Identify nodes that can run in parallel (no interdependencies)"},{"name":"_create_parallel_dispatch","lineno":1182,"docstring":"Create Send commands for parallel execution"},{"name":"_get_task_for_role","lineno":1212,"docstring":"Generate task description for agent role"},{"name":"_completion_node","lineno":1223,"docstring":"Final node that processes completion."},{"name":"_setup_logging","lineno":1337,"docstring":"Setup enhanced logging configuration with file outputs"},{"name":"_analyze_workflow_logs","lineno":1349,"docstring":"Analyze logs from the workflow execution for issues"},{"name":"_run_mcp_enabled_agent_node","lineno":1621,"docstring":"Execute an MCP-enabled agent node using AgentFactory with enhanced tools"},{"name":"_get_mcp_tools_for_role","lineno":1837,"docstring":"Get appropriate MCP tools for an agent role (DEPRECATED - use _get_mcp_tool_instances_for_role)"},{"name":"_get_mcp_tool_instances_for_role","lineno":1865,"docstring":"Get actual MCP tool instances for an agent role"},{"name":"_get_project_path","lineno":1924,"docstring":"Get project path from state or global context"},{"name":"_command_router","lineno":2047,"docstring":"RULE 955: Command-based router for modern LangGraph patterns"},{"name":"_run_agent_node_factory","lineno":2067,"docstring":"Returns a function that runs an agent node for a specific role."},{"name":"run_interactive","lineno":2076,"docstring":"Run interactive workflow mode"},{"name":"run_single_request","lineno":2166,"docstring":"Run a single request and exit."}],"docstring":"Main OAMAT application - LangGraph Supervisor-Based Multi-Agent System","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/oamat_logging.py","name":"UserLogger","data":{"name":"UserLogger","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/oamat_logging.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null},{"name":"start_workflow","lineno":61,"docstring":"Initialize workflow tracking and display start banner"},{"name":"start_node_execution","lineno":95,"docstring":"Mark a node as starting execution"},{"name":"log_subdivision_check","lineno":117,"docstring":"Log subdivision decision with reasoning"},{"name":"start_sub_workflow","lineno":147,"docstring":"Start a sub-workflow with visual nesting"},{"name":"complete_node","lineno":179,"docstring":"Mark a node as completed"},{"name":"show_progress_summary","lineno":203,"docstring":"Display current progress summary"},{"name":"start_model_call","lineno":225,"docstring":"Log the start of a model call with user-friendly message"},{"name":"complete_model_call","lineno":232,"docstring":"Log the completion of a model call"},{"name":"complete_workflow","lineno":240,"docstring":"Complete workflow with final banner and summary"},{"name":"_display_workflow_tree","lineno":271,"docstring":"Display the current workflow tree structure"},{"name":"_display_node_recursive","lineno":284,"docstring":"Recursively display a node and its sub-nodes"}],"docstring":"Clean, user-friendly logging interface that shows workflow execution\nas visual tree structures while preserving debug details in files.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/parallel_executor.py","name":"ParallelAgentExecutor","data":{"name":"ParallelAgentExecutor","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/parallel_executor.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":null},{"name":"_combine_parallel_results","lineno":102,"docstring":"Combine results from parallel agent execution"}],"docstring":"Executes multiple OAMAT agents in parallel","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/parallel_executor.py","name":"AsyncAgentBridge","data":{"name":"AsyncAgentBridge","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/parallel_executor.py","lineno":135,"bases":[],"methods":[{"name":"__init__","lineno":138,"docstring":null}],"docstring":"Bridge to run synchronous agent methods in async context","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/task_decomposer.py","name":"SubWorkflowOrchestrator","data":{"name":"SubWorkflowOrchestrator","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/task_decomposer.py","lineno":894,"bases":[],"methods":[{"name":"__init__","lineno":897,"docstring":null},{"name":"_organize_by_dependencies","lineno":947,"docstring":"Organize subtasks by dependency levels for parallel execution"},{"name":"_prepare_subtask_context","lineno":1089,"docstring":"Prepare context for subtask execution"},{"name":"_get_dependency_context","lineno":1118,"docstring":"Get context from completed dependency subtasks"}],"docstring":"Orchestrates parallel execution of subtasks","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/mcp_tool_registry.py","name":"MCPToolRegistry","data":{"name":"MCPToolRegistry","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/mcp_tool_registry.py","lineno":152,"bases":[],"methods":[{"name":"__init__","lineno":157,"docstring":null},{"name":"_load_config","lineno":212,"docstring":"Load MCP configuration"},{"name":"_initialize_registry","lineno":224,"docstring":"Initialize the tool registry with automatic discovery"},{"name":"_discover_and_register_tools","lineno":269,"docstring":"Automatically discover and register available MCP tools"},{"name":"_register_tool","lineno":402,"docstring":"Register a tool in the registry"},{"name":"_load_tool_chains","lineno":433,"docstring":"Load predefined tool chains from configuration"},{"name":"execute_tool","lineno":484,"docstring":"Synchronous wrapper for executing a tool method."},{"name":"_update_tool_stats","lineno":613,"docstring":"Update tool performance statistics"},{"name":"_infer_method_for_tool","lineno":784,"docstring":"Infer the best method to use for a tool based on available data"},{"name":"get_tool_analytics","lineno":828,"docstring":"Get comprehensive analytics about tool usage and performance"},{"name":"list_available_tools","lineno":886,"docstring":"List all available tools with their metadata"},{"name":"get_tools_by_capability","lineno":901,"docstring":"Get tools that have a specific capability"}],"docstring":"Comprehensive MCP tool registry with automatic discovery and intelligent routing","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/rule_loader.py","name":"RuleLoader","data":{"name":"RuleLoader","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/rule_loader.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":"Initialize RuleLoader with rules directory\n\nArgs:\n    rules_directory: Path to directory containing rule files"},{"name":"_load_all_rules","lineno":48,"docstring":"Load all available rule files from the rules directory"},{"name":"_load_rule_file","lineno":68,"docstring":"Load and parse a single rule file"},{"name":"_extract_categories","lineno":90,"docstring":"Extract rule categories from content"},{"name":"_extract_priority","lineno":119,"docstring":"Extract priority from rule content (1=highest, 10=lowest)"},{"name":"_extract_applicable_agents","lineno":132,"docstring":"Extract which agent roles this rule applies to"},{"name":"get_rules_for_agent","lineno":165,"docstring":"Get applicable rules for a specific agent role\n\nArgs:\n    agent_role: The agent role (e.g., 'coder', 'tester', 'reviewer')\n    categories: Optional list of categories to filter by\n\nReturns:\n    List of applicable rules sorted by priority"},{"name":"format_rules_for_prompt","lineno":198,"docstring":"Format rules for injection into agent prompts\n\nArgs:\n    agent_role: The agent role\n    categories: Optional categories to filter by\n    max_rules: Maximum number of rules to include\n    max_chars: Maximum total characters for all rules\n\nReturns:\n    Formatted rules string for prompt injection"},{"name":"_extract_rule_summary","lineno":250,"docstring":"Extract a summary of key points from rule content"},{"name":"get_rule_categories","lineno":281,"docstring":"Get all available rule categories"},{"name":"get_available_rules","lineno":288,"docstring":"Get list of all available rule names"},{"name":"refresh_rules","lineno":292,"docstring":"Reload all rules from disk"}],"docstring":"Loads and manages development rules for agent prompt injection","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/rules_integration.py","name":"RulesManager","data":{"name":"RulesManager","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/utils/rules_integration.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":"Initialize rules manager with project root directory"},{"name":"load_rules_for_category","lineno":36,"docstring":"Load all rules for a specific category"},{"name":"load_rule","lineno":50,"docstring":"Load a specific rule by name"},{"name":"get_agent_rules","lineno":71,"docstring":"Get relevant rules for a specific agent role"},{"name":"format_rules_for_prompt","lineno":98,"docstring":"Format rules for inclusion in agent prompts"},{"name":"_extract_rule_summary","lineno":128,"docstring":"Extract key points from rule content for prompt inclusion"},{"name":"inject_rules_into_agent_spec","lineno":174,"docstring":"Inject relevant rules into an agent specification"},{"name":"create_rules_aware_prompt","lineno":215,"docstring":"Create a rules-aware prompt by injecting relevant standards"},{"name":"get_system_prompt","lineno":241,"docstring":"Generate a system prompt for an agent role with relevant rules embedded"},{"name":"get_rules_retriever_tool","lineno":273,"docstring":"Create a tool for retrieving project rules and standards"}],"docstring":"Manages development rules and their integration into agent environments","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/agent_wrapper.py","name":"AgentWrapperFactory","data":{"name":"AgentWrapperFactory","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/agent_wrapper.py","lineno":22,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":null},{"name":"create_specialized_agent","lineno":29,"docstring":"Creates a specialized agent wrapper function for the given role.\nThis wrapper handles state management and agent execution."},{"name":"create_agent_creators_dict","lineno":218,"docstring":"Create a dictionary of agent creators for all specified roles"}],"docstring":"Factory for creating agent wrappers","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/execution.py","name":"WorkflowExecutor","data":{"name":"WorkflowExecutor","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/execution.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize WorkflowExecutor for intelligent workflow execution"},{"name":"_create_unified_project_name","lineno":259,"docstring":"Create a unified project name from user request"}],"docstring":"Executes agentic workflows using LangGraph orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/sdlc_integration.py","name":"SDLCWorkflowIntegrator","data":{"name":"SDLCWorkflowIntegrator","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/sdlc_integration.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":null},{"name":"initialize_sdlc_phase","lineno":22,"docstring":"Initialize SDLC phase for workflow"},{"name":"validate_phase_requirements","lineno":51,"docstring":"Validate current workflow against SDLC phase requirements"},{"name":"_check_requirement","lineno":94,"docstring":"Check if a specific phase requirement is met"},{"name":"_check_quality_gate","lineno":117,"docstring":"Check if a quality gate is passed"},{"name":"update_phase_progress","lineno":145,"docstring":"Update SDLC phase progress based on workflow completion"},{"name":"get_next_phase_recommendations","lineno":170,"docstring":"Get recommendations for next SDLC phase based on current workflow"}],"docstring":"Integrates SDLC phase management with workflow orchestration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/state.py","name":"AgenticWorkflowState","data":{"name":"AgenticWorkflowState","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/orchestrator/state.py","lineno":32,"bases":["TypedDict"],"methods":[],"docstring":"State model for agentic workflows","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/parallel_executor.py","name":"ParallelTaskExecutor","data":{"name":"ParallelTaskExecutor","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/parallel_executor.py","lineno":311,"bases":[],"methods":[{"name":"__init__","lineno":317,"docstring":null},{"name":"add_task","lineno":350,"docstring":"Add a task to the execution queue"},{"name":"create_task","lineno":362,"docstring":"Convenience method to create and add a task"},{"name":"validate_execution_plan","lineno":389,"docstring":"Validate the execution plan for correctness"},{"name":"_check_resource_conflicts","lineno":411,"docstring":"Check for potential resource conflicts"},{"name":"_generate_execution_report","lineno":643,"docstring":"Generate comprehensive execution report"},{"name":"get_task_status","lineno":697,"docstring":"Get detailed status of a specific task"},{"name":"_calculate_task_progress","lineno":717,"docstring":"Calculate estimated progress for a task"},{"name":"get_execution_visualization","lineno":730,"docstring":"Generate data for visualizing the execution graph"},{"name":"shutdown","lineno":751,"docstring":"Clean shutdown of the executor"}],"docstring":"Advanced parallel task execution engine with dependency management,\nresource coordination, and sophisticated error handling.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/sdlc_phase_manager.py","name":"SDLCPhaseManager","data":{"name":"SDLCPhaseManager","file_path":"opsvi/opsvi_opsvi/applications/old.ignore.oamat/workflows/sdlc_phase_manager.py","lineno":88,"bases":[],"methods":[{"name":"__init__","lineno":94,"docstring":null},{"name":"detect_workflow_type","lineno":133,"docstring":"Automatically detect workflow type based on user request and context.\n\nArgs:\n    user_request: The user's request text\n    context: Additional context information\n\nReturns:\n    Detected workflow pattern name"},{"name":"list_available_patterns","lineno":165,"docstring":"List all available workflow pattern files"},{"name":"load_workflow_pattern","lineno":177,"docstring":"Load a workflow pattern from configuration file.\n\nArgs:\n    pattern_name: Name of the pattern to load\n\nReturns:\n    Loaded WorkflowPattern or None if not found"},{"name":"initialize_workflow","lineno":256,"docstring":"Initialize workflow based on detected pattern.\n\nArgs:\n    user_request: The user's request\n    context: Additional context\n\nReturns:\n    True if workflow initialized successfully"},{"name":"get_next_phase","lineno":300,"docstring":"Get the next phase that should be executed based on dependencies and current status.\n\nReturns:\n    Phase ID of next phase to execute, or None if workflow is complete"},{"name":"_are_dependencies_satisfied","lineno":323,"docstring":"Check if all dependencies for a phase are satisfied"},{"name":"start_phase","lineno":339,"docstring":"Mark a phase as started and prepare its context.\n\nArgs:\n    phase_id: ID of the phase to start\n\nReturns:\n    True if phase started successfully"},{"name":"_build_phase_context","lineno":381,"docstring":"Build context data for a phase from previous phases"},{"name":"validate_phase","lineno":475,"docstring":"Validate that a phase has been completed successfully.\n\nArgs:\n    phase_id: ID of the phase to validate\n\nReturns:\n    Validation result with status and any errors"},{"name":"get_phase_context","lineno":555,"docstring":"Get context data for a specific phase"},{"name":"find_phase_for_agent","lineno":566,"docstring":"Finds the phase_id for a given agent_role."},{"name":"get_workflow_status","lineno":576,"docstring":"Get overall workflow status"},{"name":"get_enhanced_agent_prompt","lineno":615,"docstring":"Enhance agent prompt with phase context and requirements.\n\nArgs:\n    agent_role: Role of the agent\n    base_prompt: Base prompt for the agent\n    current_phase_id: Current phase being executed\n\nReturns:\n    Enhanced prompt with phase context"},{"name":"save_workflow_state","lineno":681,"docstring":"Save current workflow state to project directory"},{"name":"load_workflow_state","lineno":717,"docstring":"Load workflow state from project directory"}],"docstring":"Manages SDLC workflow patterns with phase enforcement, artifact management,\nand context injection for multi-agent workflows.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/research_team/agents/research_agent.py","name":"ResearchAgent","data":{"name":"ResearchAgent","file_path":"opsvi/opsvi_opsvi/applications/research_team/agents/research_agent.py","lineno":8,"bases":[],"methods":[{"name":"__init__","lineno":9,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/research_team/agents/synthesis_agent.py","name":"SynthesisAgent","data":{"name":"SynthesisAgent","file_path":"opsvi/opsvi_opsvi/applications/research_team/agents/synthesis_agent.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":7,"docstring":null},{"name":"synthesize","lineno":16,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockOpenAIInterface","data":{"name":"MockOpenAIInterface","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":41,"docstring":null},{"name":"get_model","lineno":44,"docstring":null}],"docstring":"Mock OpenAI interface for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockLangChainModel","data":{"name":"MockLangChainModel","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":51,"bases":[],"methods":[{"name":"__init__","lineno":54,"docstring":null}],"docstring":"Mock LangChain model for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"MockAgent","data":{"name":"MockAgent","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":252,"bases":[],"methods":[{"name":"__init__","lineno":255,"docstring":null}],"docstring":"Mock agent for POC demonstration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"AgentWrapper","data":{"name":"AgentWrapper","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":265,"bases":[],"methods":[{"name":"__init__","lineno":271,"docstring":null},{"name":"_validate_and_structure_response","lineno":359,"docstring":"Validate response against Pydantic schema and return structured data"},{"name":"_extract_response_text","lineno":392,"docstring":"Extract text response from LangGraph result"},{"name":"_inject_context","lineno":409,"docstring":"Inject stored context into input data"},{"name":"_update_context","lineno":416,"docstring":"Update context store with results"},{"name":"_track_performance","lineno":426,"docstring":"Track performance metrics"},{"name":"_extract_tools_used","lineno":446,"docstring":"Extract tools used during execution"},{"name":"_extract_partial_results","lineno":451,"docstring":"Extract any partial results from failed execution"}],"docstring":"Wrapper for LangGraph agents with OpenAI structured response validation.\nProvides lifecycle management, performance tracking, and response validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":461,"bases":[],"methods":[{"name":"__init__","lineno":467,"docstring":null},{"name":"create_agent","lineno":477,"docstring":"Create OpenAI-powered agent with structured response capabilities.\n\nArgs:\n    spec: Agent specification with role, capabilities, and constraints\n\nReturns:\n    AgentWrapper with structured response validation"},{"name":"_create_openai_model","lineno":534,"docstring":"Create OpenAI model instance using shared interface"},{"name":"_create_structured_prompt","lineno":539,"docstring":"Create role-specific prompts enforcing structured JSON responses"},{"name":"_get_base_tools","lineno":589,"docstring":"Get base tools available to all agents"},{"name":"_get_research_tools","lineno":604,"docstring":"Get research-specific tools"},{"name":"_get_development_tools","lineno":619,"docstring":"Get development-specific tools"},{"name":"_get_testing_tools","lineno":634,"docstring":"Get testing-specific tools"},{"name":"_build_tools_for_role","lineno":682,"docstring":"Build appropriate tools for a specific agent role"},{"name":"get_agent_performance_metrics","lineno":701,"docstring":"Get performance metrics for all created agents"}],"docstring":"OpenAI-exclusive agent factory with structured response enforcement.\nAll agents created using create_react_agent with JSON schema validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","name":"SpecializedAgentFactory","data":{"name":"SpecializedAgentFactory","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/agent_factory.py","lineno":715,"bases":[],"methods":[{"name":"__init__","lineno":718,"docstring":null},{"name":"create_manager_agent","lineno":721,"docstring":"Create manager agent with O3 model for complex coordination"},{"name":"create_requirements_expander","lineno":739,"docstring":"Create requirements expansion agent using O3 model"},{"name":"create_developer_agent","lineno":758,"docstring":"Create development agent using GPT-4.1"}],"docstring":"Factory for creating specialized agents with pre-configured settings","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","name":"ModelType","data":{"name":"ModelType","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","lineno":14,"bases":["Enum"],"methods":[],"docstring":"OpenAI model types for strategic allocation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","name":"AgentRole","data":{"name":"AgentRole","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","lineno":24,"bases":["Enum"],"methods":[],"docstring":"Agent roles in the Smart Decomposition system","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","name":"ModelConfig","data":{"name":"ModelConfig","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","lineno":40,"bases":[],"methods":[],"docstring":"OpenAI model configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","name":"SystemConfig","data":{"name":"SystemConfig","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/config.py","lineno":111,"bases":[],"methods":[],"docstring":"Main system configuration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/dependency_manager.py","name":"ContextPropagator","data":{"name":"ContextPropagator","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/dependency_manager.py","lineno":408,"bases":[],"methods":[{"name":"__init__","lineno":414,"docstring":null}],"docstring":"Manage context propagation between agents with state contamination prevention.\nImplements isolated context distribution with integrity validation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/dependency_manager.py","name":"DependencyManager","data":{"name":"DependencyManager","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/dependency_manager.py","lineno":664,"bases":[],"methods":[{"name":"__init__","lineno":670,"docstring":null}],"docstring":"Main dependency manager orchestrating Neo4j graph, context propagation,\nand blocking strategies for parallel execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/parallel_execution_engine.py","name":"ParallelExecutionEngine","data":{"name":"ParallelExecutionEngine","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/parallel_execution_engine.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":59,"docstring":null},{"name":"_get_or_create_agent","lineno":274,"docstring":"Get existing agent or create new one for the role"}],"docstring":"Parallel execution engine for Smart Decomposition agents.\nAchieves 3-5x performance improvements through intelligent coordination.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","name":"RequirementsResponse","data":{"name":"RequirementsResponse","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","lineno":40,"bases":["BaseModel"],"methods":[{"name":"validate_specs","lineno":70,"docstring":null}],"docstring":"Structured response schema for requirements expansion agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","name":"CoordinationResponse","data":{"name":"CoordinationResponse","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","lineno":94,"bases":["BaseModel"],"methods":[],"docstring":"Structured response schema for coordination and planning agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","name":"ImplementationResponse","data":{"name":"ImplementationResponse","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","lineno":131,"bases":["BaseModel"],"methods":[{"name":"validate_code_files","lineno":154,"docstring":null}],"docstring":"Structured response schema for implementation agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","name":"ValidationResponse","data":{"name":"ValidationResponse","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/schemas.py","lineno":160,"bases":["BaseModel"],"methods":[],"docstring":"Structured response schema for validation agents","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/system_controller.py","name":"SystemController","data":{"name":"SystemController","file_path":"opsvi/opsvi_opsvi/applications/smart_decomposition_poc/core/system_controller.py","lineno":45,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":null},{"name":"_extract_requirements_from_results","lineno":361,"docstring":"Extract requirements response from task results"},{"name":"_extract_work_plan_from_results","lineno":374,"docstring":"Extract work plan from task results"},{"name":"_extract_implementation_from_results","lineno":387,"docstring":"Extract implementation from task results"},{"name":"_extract_validation_from_results","lineno":400,"docstring":"Extract validation from task results"},{"name":"_package_application_from_results","lineno":413,"docstring":"Package complete application from all task results"},{"name":"_package_application","lineno":540,"docstring":"Legacy sequential application packaging"},{"name":"_create_error_metrics","lineno":570,"docstring":"Create error metrics for failed workflows"},{"name":"get_workflow_history","lineno":581,"docstring":"Get history of all workflow executions"},{"name":"get_performance_summary","lineno":585,"docstring":"Get performance summary across all workflows"}],"docstring":"Main system controller for the Smart Decomposition Meta-Intelligence System.\nOrchestrates autonomous application generation with parallel execution.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/agentic_review_schema.py","name":"AgenticAnnotation","data":{"name":"AgenticAnnotation","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/agentic_review_schema.py","lineno":15,"bases":[],"methods":[{"name":"to_dict","lineno":30,"docstring":null},{"name":"create","lineno":37,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/ai_self_assessment.py","name":"AISelfAssessment","data":{"name":"AISelfAssessment","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/ai_self_assessment.py","lineno":9,"bases":[],"methods":[{"name":"__init__","lineno":12,"docstring":null},{"name":"run_full_assessment","lineno":16,"docstring":"Run complete self-assessment battery"},{"name":"_test_logical_reasoning","lineno":49,"docstring":"Test basic logical reasoning ability"},{"name":"_test_working_memory","lineno":64,"docstring":"Test ability to maintain context"},{"name":"_test_instruction_following","lineno":78,"docstring":"Test ability to follow precise instructions"},{"name":"_test_context_awareness","lineno":97,"docstring":"Test awareness of current context"},{"name":"_test_error_detection","lineno":116,"docstring":"Test ability to detect obvious errors"},{"name":"_test_tool_competency","lineno":132,"docstring":"Test basic tool usage understanding"},{"name":"generate_assessment_report","lineno":147,"docstring":"Generate human-readable assessment report"}],"docstring":"Self-diagnostic test for AI instance quality","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/context_compression_engine.py","name":"ContextPackage","data":{"name":"ContextPackage","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/context_compression_engine.py","lineno":37,"bases":[],"methods":[],"docstring":"Compressed knowledge package for AI context restoration","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/context_compression_engine.py","name":"ContextCompressionEngine","data":{"name":"ContextCompressionEngine","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/context_compression_engine.py","lineno":55,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":null},{"name":"analyze_conversation_for_compression","lineno":68,"docstring":"Analyze conversation to identify what can be compressed vs what must be preserved"},{"name":"compress_conversation","lineno":101,"docstring":"Compress conversation to essential insights with target compression ratio"},{"name":"_group_similar_content","lineno":170,"docstring":"Group similar conversation components for redundancy analysis"},{"name":"_analyze_redundancy","lineno":200,"docstring":"Analyze redundancy within similar content items"},{"name":"_assess_criticality","lineno":228,"docstring":"Assess how critical a conversation component is for context restoration"},{"name":"_extract_insights_by_criticality","lineno":277,"docstring":"Extract insights of specific criticality level"},{"name":"_extract_shared_understanding","lineno":299,"docstring":"Extract concepts and understanding both parties shared"},{"name":"_extract_key_decisions","lineno":327,"docstring":"Extract key decisions made during conversation"},{"name":"_determine_project_state","lineno":356,"docstring":"Determine current state of the project/work"},{"name":"_identify_next_steps","lineno":382,"docstring":"Identify what should happen next"},{"name":"_generate_restoration_instructions","lineno":404,"docstring":"Generate instructions for how to use this context package"},{"name":"_compress_content","lineno":438,"docstring":"Compress content while preserving meaning"},{"name":"_needs_context","lineno":445,"docstring":"Determine if this component needs surrounding context"},{"name":"_estimate_tokens_saved","lineno":450,"docstring":"Estimate tokens saved by compressing this component"},{"name":"_estimate_tokens","lineno":458,"docstring":"Rough token estimation"},{"name":"_estimate_insight_tokens","lineno":469,"docstring":"Estimate tokens for compressed insights"},{"name":"_extract_concept_from_agreement","lineno":473,"docstring":"Extract the concept being agreed upon"},{"name":"_extract_decision_content","lineno":483,"docstring":"Extract the actual decision from content"},{"name":"_extract_rationale","lineno":488,"docstring":"Extract reasoning behind decision"},{"name":"_extract_completed_task","lineno":496,"docstring":"Extract completed task from content"},{"name":"_extract_current_focus","lineno":505,"docstring":"Extract current focus from content"},{"name":"_extract_next_step","lineno":518,"docstring":"Extract next step from content"},{"name":"save_context_package","lineno":531,"docstring":"Save compressed context package to file"},{"name":"load_context_package","lineno":541,"docstring":"Load compressed context package from file"}],"docstring":"Intelligent compression of conversations for AI context persistence","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/conversation_analyzer.py","name":"ConversationAnalyzer","data":{"name":"ConversationAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/conversation_analyzer.py","lineno":13,"bases":[],"methods":[{"name":"__init__","lineno":16,"docstring":null},{"name":"analyze_conversation_flow","lineno":19,"docstring":"Analyze flow patterns within a single conversation"},{"name":"analyze_cross_conversation_patterns","lineno":34,"docstring":"Analyze patterns across multiple conversations"},{"name":"find_breakthrough_moments","lineno":57,"docstring":"Identify breakthrough insights and key realizations"},{"name":"analyze_ai_performance_patterns","lineno":91,"docstring":"Analyze AI performance patterns across conversations"},{"name":"_analyze_speaker_distribution","lineno":106,"docstring":"Analyze distribution of speakers in conversation"},{"name":"_analyze_component_types","lineno":117,"docstring":"Analyze types of conversation components"},{"name":"_analyze_conversation_arc","lineno":133,"docstring":"Analyze the arc/progression of conversation"},{"name":"_analyze_response_patterns","lineno":157,"docstring":"Analyze patterns in responses between speakers"},{"name":"_analyze_complexity_progression","lineno":181,"docstring":"Analyze how complexity changes throughout conversation"},{"name":"_analyze_tool_usage","lineno":213,"docstring":"Analyze tool usage patterns"},{"name":"_find_recurring_patterns","lineno":231,"docstring":"Find patterns that recur across conversations"},{"name":"_analyze_frustration_triggers","lineno":261,"docstring":"Analyze what triggers user frustration"},{"name":"_analyze_learning_progression","lineno":295,"docstring":"Analyze learning progression across sessions"},{"name":"_calculate_trend","lineno":341,"docstring":"Calculate if trend is improving, declining, or stable"},{"name":"_classify_breakthrough","lineno":366,"docstring":"Classify type of breakthrough"},{"name":"_score_breakthrough_impact","lineno":377,"docstring":"Score the impact of a breakthrough based on subsequent conversation"},{"name":"_analyze_phase_sentiment","lineno":414,"docstring":"Analyze sentiment of conversation phase"},{"name":"_analyze_phase_complexity","lineno":437,"docstring":"Analyze complexity level of conversation phase"},{"name":"_find_response_chains","lineno":450,"docstring":"Find common response chain patterns"},{"name":"_analyze_topic_evolution","lineno":456,"docstring":"Analyze how topics evolve across conversations"},{"name":"_analyze_efficiency_trends","lineno":461,"docstring":"Analyze efficiency trends across sessions"},{"name":"_analyze_response_quality","lineno":468,"docstring":"Analyze quality of AI responses"},{"name":"_analyze_error_patterns","lineno":473,"docstring":"Analyze AI error patterns"},{"name":"_analyze_improvement_trends","lineno":478,"docstring":"Analyze AI improvement trends"},{"name":"_analyze_consistency","lineno":483,"docstring":"Analyze AI consistency metrics"},{"name":"_analyze_capability_growth","lineno":488,"docstring":"Analyze AI capability growth"}],"docstring":"Analyze atomic conversation components for insights","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/meta_thinking_engine.py","name":"MetaThinkingEngine","data":{"name":"MetaThinkingEngine","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/meta_thinking_engine.py","lineno":49,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":null},{"name":"get_insights_by_category","lineno":306,"docstring":"Get all insights of a specific category"},{"name":"get_recent_insights","lineno":310,"docstring":"Get insights from the last N hours"}],"docstring":"Engine for continuous thinking, reflection, and insight capture.\nDesigned to overcome AI task-focus limitation through structured meta-cognition.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/predictive_intelligence_engine.py","name":"CapabilityGapAnalyzer","data":{"name":"CapabilityGapAnalyzer","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/predictive_intelligence_engine.py","lineno":453,"bases":[],"methods":[{"name":"identify_gaps","lineno":456,"docstring":"Simplified gap identification"}],"docstring":"Analyzes gaps in current capabilities","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/session_consolidator.py","name":"SessionConsolidator","data":{"name":"SessionConsolidator","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/analytics/session_consolidator.py","lineno":10,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"consolidate_sessions","lineno":16,"docstring":"Merge multiple session logs into master context"},{"name":"_detect_frustration_patterns","lineno":53,"docstring":"Find user frustration indicators"},{"name":"_analyze_ai_performance","lineno":84,"docstring":"Analyze AI performance in this session"},{"name":"_load_session","lineno":99,"docstring":"Load session data from file"},{"name":"_extract_preceding_context","lineno":107,"docstring":"Get context leading up to frustration"},{"name":"_assess_startup_performance","lineno":120,"docstring":"Rate startup sequence performance 0-1"},{"name":"_assess_task_completion","lineno":144,"docstring":"Rate task completion quality 0-1"},{"name":"_calculate_error_rate","lineno":171,"docstring":"Calculate error rate for session"},{"name":"_analyze_frustration_trends","lineno":189,"docstring":"Analyze patterns in user frustration"},{"name":"_analyze_performance_variance","lineno":215,"docstring":"Analyze variance in AI performance across sessions"}],"docstring":"Consolidate multiple AI sessions into unified understanding","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/conceptual_analysis_agent.py","name":"ConceptualAnalysisAgent","data":{"name":"ConceptualAnalysisAgent","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/conceptual_analysis_agent.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":26,"docstring":null},{"name":"monitor_logs","lineno":43,"docstring":"Continuously monitor for new/changed cleaned logs and process them in parallel batches."},{"name":"process_log","lineno":68,"docstring":null},{"name":"_get_log_text","lineno":113,"docstring":null},{"name":"_extract_decisions","lineno":121,"docstring":null},{"name":"_extract_qa","lineno":137,"docstring":null},{"name":"_extract_blockers","lineno":165,"docstring":null},{"name":"_extract_named_entities","lineno":181,"docstring":null},{"name":"_extract_pivots","lineno":219,"docstring":null},{"name":"_insight_to_conceptual_node","lineno":235,"docstring":null},{"name":"_theme_to_conceptual_node","lineno":248,"docstring":null},{"name":"_link_concept_to_atomic","lineno":257,"docstring":null},{"name":"_store_conceptual_nodes","lineno":268,"docstring":null},{"name":"_store_conceptual_edges","lineno":284,"docstring":null},{"name":"_log_evidence","lineno":300,"docstring":null},{"name":"self_improve","lineno":313,"docstring":null},{"name":"_update_documentation_and_diagrams","lineno":327,"docstring":null},{"name":"_link_qa_pairs","lineno":338,"docstring":null},{"name":"_link_decisions_to_blockers","lineno":354,"docstring":null},{"name":"_link_pivots_to_entities","lineno":374,"docstring":null},{"name":"_contextual_linking","lineno":394,"docstring":null},{"name":"_automated_test_and_validation","lineno":416,"docstring":null},{"name":"_collab_tools_review","lineno":429,"docstring":null}],"docstring":"Autonomous agent for conceptual analysis and data entry.\nExtracts high-level concepts, decisions, themes, Q&A, blockers, pivots, and relationships from cleaned logs,\nlinks them to atomic components, and stores them in ArangoDB.\nOperates in batch/parallel mode for efficiency and self-improves after each run.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/conceptual_synthesis_agent.py","name":"ConceptualSynthesisAgent","data":{"name":"ConceptualSynthesisAgent","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/conceptual_synthesis_agent.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":46,"docstring":null},{"name":"monitor_atomic_data","lineno":58,"docstring":"Continuously monitor for new/changed atomic data and process in parallel batches."},{"name":"process_atomic_file","lineno":84,"docstring":"Process a single atomic file: synthesize conceptual knowledge and persist results."},{"name":"_load_atomic_data","lineno":99,"docstring":null},{"name":"synthesize_conceptual_knowledge","lineno":109,"docstring":"Aggregate, cluster, and interpret atomic data to form conceptual nodes/edges.\nImplements advanced synthesis logic for decisions, blockers, Q&A, themes, pivots, and advanced relationships.\nReturns conceptual_nodes, conceptual_edges."},{"name":"_parse_time","lineno":445,"docstring":null},{"name":"validate_and_log_evidence","lineno":453,"docstring":"Validate conceptual structures and log evidence for traceability."},{"name":"persist_conceptual_knowledge","lineno":474,"docstring":"Persist conceptual nodes/edges in ArangoDB, always linking to atomic evidence."},{"name":"post_batch_actions","lineno":487,"docstring":"Trigger review, documentation/diagram updates, and self-improvement after each batch."},{"name":"trigger_distributed_review","lineno":493,"docstring":null},{"name":"trigger_documentation_and_diagram_updates","lineno":505,"docstring":null},{"name":"reflect_and_log_self_improvement","lineno":517,"docstring":null},{"name":"submit_for_review","lineno":529,"docstring":"Submit conceptual nodes/edges for distributed review via collab agents.\nReturns a list of review tasks/IDs."},{"name":"collect_feedback_and_update","lineno":548,"docstring":"Collect feedback, votes, or comments from reviewers and update conceptual node/edge status.\nPersist all review actions, feedback, and consensus decisions in the knowledgebase."},{"name":"escalate_contentious","lineno":570,"docstring":"Flag unresolved or contentious concepts for further review or escalation."},{"name":"generate_mermaid_diagram","lineno":586,"docstring":"Generate a Mermaid diagram from conceptual nodes and edges and save to output_path."},{"name":"generate_documentation","lineno":609,"docstring":"Generate markdown documentation summarizing concepts, relationships, and evidence."},{"name":"trigger_continuous_update","lineno":634,"docstring":"Trigger regeneration of diagrams/docs after every batch or significant change."},{"name":"meta_analyze_and_improve","lineno":643,"docstring":"After each batch, analyze what worked, what failed, and what was ambiguous.\nUse meta_thinking_engine or LLMs to suggest improvements (stub for now).\nUpdate extraction and relationship patterns based on new evidence, feedback, and review outcomes.\nAutomatically generate or refine guardrails based on recurring issues or failures.\nPersist all guardrails and improvements as knowledgebase nodes.\nLog all self-improvement actions, pattern changes, and guardrail updates."},{"name":"run_autonomous_cycle","lineno":674,"docstring":"Orchestrate the full conceptual synthesis cycle:\n1. Advanced relationship extraction & contextual linking\n2. Distributed review, feedback, and consensus integration\n3. Automated documentation & diagram generation\n4. Continuous self-improvement, learning, and guardrail evolution\nOperates autonomously and continuously."}],"docstring":"Agent that transforms atomic parser outputs (nodes/edges) into high-level conceptual knowledge.\nSynthesizes insights, themes, decisions, blockers, Q&A, pivots, etc., and persists them in the knowledgebase.\nLinks all conceptual nodes/edges to atomic evidence for traceability.\nAutomates validation, review, documentation, and self-improvement after each batch.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/intelligence_agent.py","name":"IntelligenceAgent","data":{"name":"IntelligenceAgent","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/intelligence_agent.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":20,"docstring":null},{"name":"extract_insights","lineno":23,"docstring":"Extract intelligence insights from cleaned log lines and/or atomic components.\nReturns a list of dicts matching the minimal intelligence schema."},{"name":"_find_related_components","lineno":105,"docstring":"Prototype: Link insight to atomic component IDs based on line number proximity.\nTODO: Improve with richer mapping logic."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/legacy/file_monitor.py","name":"RealTimeFileMonitor","data":{"name":"RealTimeFileMonitor","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/legacy/file_monitor.py","lineno":138,"bases":[],"methods":[{"name":"__init__","lineno":141,"docstring":null},{"name":"get_stats","lineno":236,"docstring":"Get monitoring statistics"}],"docstring":"Main file monitoring coordinator","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/meta_conceptual_synthesis_agent.py","name":"MetaConceptualSynthesisAgent","data":{"name":"MetaConceptualSynthesisAgent","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/meta_conceptual_synthesis_agent.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"run","lineno":34,"docstring":null},{"name":"load_session","lineno":94,"docstring":null},{"name":"synthesize_conceptual_knowledge","lineno":109,"docstring":null},{"name":"persist_conceptual_knowledge","lineno":151,"docstring":null},{"name":"self_improve","lineno":179,"docstring":null},{"name":"maintenance","lineno":183,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/pipeline.py","name":"SpecStoryIntelligencePipeline","data":{"name":"SpecStoryIntelligencePipeline","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/pipeline.py","lineno":79,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":null},{"name":"_default_config","lineno":114,"docstring":"Default pipeline configuration"},{"name":"_setup_logging","lineno":136,"docstring":"Configure structured logging for pipeline"},{"name":"_setup_signal_handlers","lineno":148,"docstring":"Setup graceful shutdown handlers"},{"name":"_initialize_advanced_analytics","lineno":160,"docstring":"Initialize advanced analytics engines"},{"name":"get_status","lineno":539,"docstring":"Get current pipeline status"}],"docstring":"Main pipeline coordinator for real-time SpecStory intelligence","agent_type":"coordinator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/review_connect_agent.py","name":"ReviewConnectAgent","data":{"name":"ReviewConnectAgent","file_path":"opsvi/opsvi_opsvi/applications/specstory_intelligence/review_connect_agent.py","lineno":29,"bases":[],"methods":[{"name":"__init__","lineno":30,"docstring":null},{"name":"run","lineno":38,"docstring":null},{"name":"detect_and_link_qa_pairs","lineno":46,"docstring":"Detect Q&A pairs and create 'answers' edges."},{"name":"detect_and_link_decision_chains","lineno":104,"docstring":"Detect decision chains and create 'decision_about'/'affects' edges."},{"name":"detect_and_link_themes","lineno":109,"docstring":"Detect recurring themes/entities and create 'relates_to' edges."},{"name":"detect_and_link_orphans","lineno":114,"docstring":"Detect orphaned nodes and link to context (e.g., session/file)."},{"name":"upsert_edge","lineno":119,"docstring":"Upsert an edge with provenance and idempotency check."},{"name":"log_provenance","lineno":148,"docstring":"Log provenance for new connections."}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/base.py","name":"BaseAgent","data":{"name":"BaseAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/base.py","lineno":8,"bases":["ABC"],"methods":[{"name":"act","lineno":12,"docstring":"Perform the agent's primary action."},{"name":"observe","lineno":17,"docstring":"Receive observations or inputs from the environment/system."}],"docstring":"Abstract base class for all agents.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/capability_discovery.py","name":"CapabilityDiscoveryAgent","data":{"name":"CapabilityDiscoveryAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/capability_discovery.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for capability discovery agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/coach.py","name":"CoachAgent","data":{"name":"CoachAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/coach.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for coach/mentor agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/collaboration.py","name":"CollaborationAgent","data":{"name":"CollaborationAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/collaboration.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for collaboration agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/data_steward.py","name":"DataStewardAgent","data":{"name":"DataStewardAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/data_steward.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for data steward agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/explainability.py","name":"ExplainabilityAgent","data":{"name":"ExplainabilityAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/explainability.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/factory.py","name":"AgentFactory","data":{"name":"AgentFactory","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/factory.py","lineno":6,"bases":[],"methods":[{"name":"create","lineno":9,"docstring":null}],"docstring":"Placeholder for agent factory logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/generalist.py","name":"GeneralistAgent","data":{"name":"GeneralistAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/generalist.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for generalist agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/human_override.py","name":"HumanOverrideAgent","data":{"name":"HumanOverrideAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/human_override.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for human-in-the-loop override logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/interfaces.py","name":"AgentProtocol","data":{"name":"AgentProtocol","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/interfaces.py","lineno":8,"bases":["Protocol"],"methods":[{"name":"act","lineno":9,"docstring":null},{"name":"observe","lineno":12,"docstring":null}],"docstring":null,"agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/marketplace.py","name":"MarketplaceAgent","data":{"name":"MarketplaceAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/marketplace.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for marketplace/resource bidding agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/multi_tenancy.py","name":"MultiTenancyAgent","data":{"name":"MultiTenancyAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/multi_tenancy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for multi-tenancy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/policy.py","name":"PolicyAgent","data":{"name":"PolicyAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/policy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for policy/compliance agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/redundancy.py","name":"RedundancyAgent","data":{"name":"RedundancyAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/redundancy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for redundancy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/reflexion.py","name":"ReflexionAgent","data":{"name":"ReflexionAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/reflexion.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for reflexion/meta agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/registry.py","lineno":6,"bases":[],"methods":[{"name":"__init__","lineno":9,"docstring":null},{"name":"register","lineno":12,"docstring":null},{"name":"get","lineno":15,"docstring":null}],"docstring":"Placeholder for agent registry logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/scaling.py","name":"ScalingAgent","data":{"name":"ScalingAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/scaling.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for scaling agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/security.py","name":"SecurityAgent","data":{"name":"SecurityAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/security.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for security agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/self_improvement.py","name":"SelfImprovementAgent","data":{"name":"SelfImprovementAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/self_improvement.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for self-improvement agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/specialist.py","name":"SpecialistAgent","data":{"name":"SpecialistAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/specialist.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for specialist agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/synthesizer.py","name":"SynthesizerAgent","data":{"name":"SynthesizerAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/synthesizer.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for synthesizer agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/user_proxy.py","name":"UserProxyAgent","data":{"name":"UserProxyAgent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/agents/user_proxy.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for user proxy agent logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/interface/feedback_ui.py","name":"FeedbackUI","data":{"name":"FeedbackUI","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/interface/feedback_ui.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for feedback and explainability UI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/base.py","name":"BaseOrchestrationComponent","data":{"name":"BaseOrchestrationComponent","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/base.py","lineno":8,"bases":["ABC"],"methods":[{"name":"start","lineno":12,"docstring":null},{"name":"stop","lineno":16,"docstring":null}],"docstring":"Abstract base class for orchestration components.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/explainability_ai.py","name":"ExplainabilityAI","data":{"name":"ExplainabilityAI","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/explainability_ai.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability AI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/guardrails.py","name":"Guardrails","data":{"name":"Guardrails","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/guardrails.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for guardrails logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/policy_ai.py","name":"PolicyAI","data":{"name":"PolicyAI","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/orchestration/policy_ai.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for policy AI logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/tooling/explainability_tools.py","name":"ExplainabilityTools","data":{"name":"ExplainabilityTools","file_path":"opsvi/opsvi_opsvi/applications/ultimate_agents/tooling/explainability_tools.py","lineno":6,"bases":[],"methods":[],"docstring":"Placeholder for explainability tools logic.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/applications/workflow_mcp/agent_runner.py","name":"EmbeddedAgentRunner","data":{"name":"EmbeddedAgentRunner","file_path":"opsvi/opsvi_opsvi/applications/workflow_mcp/agent_runner.py","lineno":24,"bases":[],"methods":[{"name":"__init__","lineno":32,"docstring":null},{"name":"run_workflow","lineno":45,"docstring":null},{"name":"_build_prompt","lineno":124,"docstring":null}],"docstring":"Embedded agent execution logic for workflows.\n- Uses OpenAIResponsesInterface (shared) for all OpenAI API access (per 953-openai-api-standards).\n- If unavailable, simulates execution by echoing input and workflow spec.\n- Set OPENAI_MODEL env var to select model (default: gpt-4.1).","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/orchestrator/meta_orchestrator.py","name":"MetaOrchestrator","data":{"name":"MetaOrchestrator","file_path":"opsvi/opsvi_opsvi/orchestrator/meta_orchestrator.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":"Initialize the meta-orchestrator."},{"name":"_prepare_task_input","lineno":332,"docstring":"Prepare input data for a task."}],"docstring":"Meta-orchestrator for coordinating pipeline execution.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/orchestrator/registry.py","name":"AgentRegistry","data":{"name":"AgentRegistry","file_path":"opsvi/opsvi_opsvi/orchestrator/registry.py","lineno":12,"bases":[],"methods":[{"name":"__init__","lineno":15,"docstring":"Initialize the agent registry."},{"name":"register_agent","lineno":21,"docstring":"Register an agent function."},{"name":"register_agent_from_path","lineno":34,"docstring":"Register an agent from a dotted import path."},{"name":"get_agent","lineno":59,"docstring":"Get an agent by name."},{"name":"get_agent_config","lineno":63,"docstring":"Get configuration for an agent."},{"name":"get_agent_metadata","lineno":67,"docstring":"Get metadata for an agent."},{"name":"list_agents","lineno":71,"docstring":"List all registered agent names."},{"name":"has_agent","lineno":75,"docstring":"Check if an agent is registered."},{"name":"execute_agent","lineno":79,"docstring":"Execute an agent with input data."},{"name":"get_agent_signature","lineno":141,"docstring":"Get the signature of an agent function."},{"name":"validate_agent_input","lineno":149,"docstring":"Validate input data against agent signature."}],"docstring":"Registry for managing AI agents with dynamic loading.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","name":"AgentHubResponse","data":{"name":"AgentHubResponse","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","lineno":38,"bases":[],"methods":[],"docstring":"Response from Agent Hub execution","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","name":"AgentSelection","data":{"name":"AgentSelection","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","lineno":61,"bases":["Enum"],"methods":[],"docstring":"Agent Hub agent types","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","name":"AgentHubClient","data":{"name":"AgentHubClient","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","lineno":77,"bases":[],"methods":[{"name":"__init__","lineno":80,"docstring":null},{"name":"_prepare_agent_params","lineno":154,"docstring":"Prepare agent-specific parameters based on context analysis"}],"docstring":"Client for Agent Hub API communication","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","name":"CollaborationInterface","data":{"name":"CollaborationInterface","file_path":"opsvi/opsvi_opsvi/shared/collaboration_framework.py","lineno":401,"bases":[],"methods":[{"name":"__init__","lineno":404,"docstring":null},{"name":"_calculate_performance_metrics","lineno":560,"docstring":"Calculate performance metrics for this collaboration"},{"name":"_update_performance_metrics","lineno":601,"docstring":"Update overall performance metrics"},{"name":"_evaluate_pattern_effectiveness","lineno":619,"docstring":"Evaluate how effective the applied patterns were"},{"name":"_evaluate_context_accuracy","lineno":635,"docstring":"Evaluate how accurate the context analysis was"},{"name":"_discover_new_patterns","lineno":648,"docstring":"Discover new patterns from this collaboration"},{"name":"_calculate_prediction_accuracy","lineno":668,"docstring":"Calculate how accurate our predictions were"},{"name":"_analyze_agent_effectiveness","lineno":677,"docstring":"Analyze which agents are most effective"},{"name":"_analyze_pattern_accuracy","lineno":711,"docstring":"Analyze pattern prediction accuracy"},{"name":"_identify_optimization_opportunities","lineno":733,"docstring":"Identify opportunities for system optimization"},{"name":"_generate_system_improvements","lineno":771,"docstring":"Generate specific system improvement recommendations"},{"name":"_calculate_recent_success_rate","lineno":808,"docstring":"Calculate success rate for recent collaborations"}],"docstring":"Main interface for Agent Collaboration Framework","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/database/core/cognitive_database.py","name":"CognitiveDatabase","data":{"name":"CognitiveDatabase","file_path":"opsvi/opsvi_opsvi/shared/database/core/cognitive_database.py","lineno":16,"bases":[],"methods":[{"name":"__init__","lineno":19,"docstring":"Initialize database connection using existing patterns"},{"name":"_validate_connection","lineno":32,"docstring":"Validate database connection and collections"},{"name":"find_memories_about","lineno":51,"docstring":"Find memories related to a specific topic"},{"name":"get_foundational_memories","lineno":72,"docstring":"Get high-quality foundational memories"},{"name":"get_concepts_by_domain","lineno":88,"docstring":"Get cognitive concepts filtered by domain"},{"name":"get_memories_by_type","lineno":104,"docstring":"Get memories filtered by type (operational, procedural, etc.)"},{"name":"get_startup_context","lineno":120,"docstring":"Get essential startup context and foundational knowledge"},{"name":"assess_system_health","lineno":132,"docstring":"Comprehensive system health assessment"},{"name":"_calculate_health_score","lineno":158,"docstring":"Calculate overall system health score"},{"name":"_execute_query","lineno":171,"docstring":"Execute AQL query with error handling and validation"}],"docstring":"Agent-friendly interface to cognitive database operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/database/consolidated_arango.py","name":"ConsolidatedArangoDB","data":{"name":"ConsolidatedArangoDB","file_path":"opsvi/opsvi_opsvi/shared/interfaces/database/consolidated_arango.py","lineno":17,"bases":[],"methods":[{"name":"__init__","lineno":25,"docstring":null},{"name":"_validate_connection","lineno":75,"docstring":null},{"name":"search","lineno":90,"docstring":null},{"name":"_search_content","lineno":137,"docstring":"Search for content across document fields"},{"name":"_search_tags","lineno":175,"docstring":"Search documents by tags with AND/OR logic"},{"name":"_search_date_range","lineno":206,"docstring":"Search documents within date range"},{"name":"_search_type","lineno":228,"docstring":"Search documents by type field"},{"name":"_search_recent","lineno":244,"docstring":"Get recent documents within time window"},{"name":"_search_by_id","lineno":265,"docstring":"Direct document lookup by ID"},{"name":"modify","lineno":279,"docstring":"Unified modification interface with operation-based routing\n\noperations: insert, update, delete, upsert"},{"name":"_modify_insert","lineno":310,"docstring":"Insert new document with optional validation"},{"name":"_modify_update","lineno":344,"docstring":"Update documents by key or criteria"},{"name":"_modify_delete","lineno":406,"docstring":"Delete documents by key or criteria with confirmation"},{"name":"_modify_upsert","lineno":463,"docstring":"Insert or update based on matching fields"},{"name":"_search_by_criteria","lineno":499,"docstring":"Helper: Search documents by exact criteria match"},{"name":"manage","lineno":515,"docstring":"Unified management interface with action-based routing\n\nactions: collection_info, backup, health, count, exists, create_collection"},{"name":"_manage_collection_info","lineno":544,"docstring":"Get detailed collection information and statistics"},{"name":"_manage_backup","lineno":574,"docstring":"Backup collections to specified directory"},{"name":"_manage_health","lineno":612,"docstring":"Agent-IDE database health assessment"},{"name":"_manage_count","lineno":661,"docstring":"Count documents in collection with optional criteria"},{"name":"_manage_exists","lineno":699,"docstring":"Check if documents matching criteria exist"},{"name":"_manage_create_collection","lineno":732,"docstring":"Create new collection"},{"name":"_build_filter_conditions","lineno":759,"docstring":"Build AQL filter conditions from criteria dictionary"},{"name":"_execute_query","lineno":773,"docstring":"Execute AQL query with comprehensive error handling"},{"name":"_error_response","lineno":803,"docstring":"Standardized error response format"}],"docstring":"Main database abstraction providing 3 consolidated tools:\n- arango_search: All search/query operations\n- arango_modify: All CRUD operations\n- arango_manage: All admin operations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_agents_interface.py","name":"OpenAIAgentsInterface","data":{"name":"OpenAIAgentsInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_agents_interface.py","lineno":21,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"create_agent","lineno":43,"docstring":"Create an Agent with tools, handoffs, guardrails, output type, and model."},{"name":"register_tool","lineno":70,"docstring":"Decorate a function as an agent tool."},{"name":"create_file_search_tool","lineno":74,"docstring":null},{"name":"create_web_search_tool","lineno":81,"docstring":null},{"name":"run_agent_sync","lineno":85,"docstring":"Run an agent synchronously."},{"name":"as_tool","lineno":129,"docstring":"Expose an agent as a tool for orchestration."},{"name":"create_context","lineno":144,"docstring":"Create a context object for agent runs."},{"name":"log_call","lineno":149,"docstring":null},{"name":"enable_verbose_logging","lineno":165,"docstring":null},{"name":"enable_tracing","lineno":169,"docstring":null},{"name":"set_timeout","lineno":174,"docstring":null},{"name":"set_max_turns","lineno":177,"docstring":null},{"name":"set_debug","lineno":180,"docstring":null}],"docstring":"Modernized shared interface for OpenAI Agents/Assistants v2 API (python SDK).\n- Full agent, tool, thread, message, vector store, and orchestration support\n- Async, streaming, batch, error handling, logging, tracing, context, config\n- Advanced usage and extensibility patterns","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesError","data":{"name":"OpenAIResponsesError","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","lineno":44,"bases":["Exception"],"methods":[],"docstring":"Custom exception for OpenAI Responses API errors.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","lineno":60,"bases":[],"methods":[{"name":"__init__","lineno":66,"docstring":null},{"name":"create","lineno":69,"docstring":"Create a new response object. Params per OpenAI docs."},{"name":"retrieve","lineno":73,"docstring":"Retrieve a response by ID."},{"name":"delete","lineno":77,"docstring":"Delete a response by ID."},{"name":"cancel","lineno":81,"docstring":"Cancel an in-progress response by ID."},{"name":"list_input_items","lineno":85,"docstring":"List input items for a response (paginated)."},{"name":"stream","lineno":91,"docstring":"Stream a response (Server-Sent Events). Params must include stream=True."}],"docstring":"Shared interface for the OpenAI Responses API (sync).\nImplements all official endpoints and features.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","name":"AsyncOpenAIResponsesInterface","data":{"name":"AsyncOpenAIResponsesInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","lineno":98,"bases":[],"methods":[{"name":"__init__","lineno":104,"docstring":null}],"docstring":"Shared interface for the OpenAI Responses API (async).\nImplements all official endpoints and features.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/llm/openai_responses_interface.py","lineno":136,"bases":[],"methods":[{"name":"__init__","lineno":142,"docstring":null},{"name":"create_response","lineno":152,"docstring":"Create a new response using the OpenAI Responses API.\nSupports retries for transient errors."},{"name":"retrieve_response","lineno":164,"docstring":null},{"name":"list_input_items","lineno":172,"docstring":null},{"name":"delete_response","lineno":182,"docstring":null},{"name":"cancel_response","lineno":190,"docstring":null},{"name":"stream_response","lineno":199,"docstring":"Stream a response (if supported by the API).\nYields Response objects as they arrive."},{"name":"get_status","lineno":222,"docstring":null},{"name":"wait_for_completion","lineno":230,"docstring":"Polls the response status until it is completed or failed, or timeout is reached."},{"name":"get_output_text","lineno":264,"docstring":null},{"name":"get_tool_calls","lineno":267,"docstring":null},{"name":"get_function_results","lineno":270,"docstring":null},{"name":"to_structured","lineno":273,"docstring":null},{"name":"list_responses","lineno":284,"docstring":"List all responses (paginated)."},{"name":"_with_retries","lineno":312,"docstring":null},{"name":"get_metadata","lineno":341,"docstring":null},{"name":"to_dict","lineno":346,"docstring":null},{"name":"call_endpoint","lineno":351,"docstring":"Generic method to call any OpenAI endpoint (for new/experimental APIs).\nArgs:\n    method: HTTP method (\"get\", \"post\", \"delete\", etc.)\n    path: API path (e.g., \"/responses/experimental\")\n    **kwargs: Request parameters (json, params, etc.)\nReturns:\n    API response (dict or object)\nExample:\n    >>> api.call_endpoint(\"post\", \"/responses/experimental\", json={...})"},{"name":"set_timeout","lineno":373,"docstring":"Set default timeout (seconds) for all requests."},{"name":"set_api_version","lineno":377,"docstring":"Set API version for all requests (if supported by OpenAI)."},{"name":"log_call","lineno":381,"docstring":"Decorator to log API calls."},{"name":"create_response_logged","lineno":397,"docstring":null},{"name":"batch_create_responses","lineno":401,"docstring":"Batch create responses (if OpenAI supports batch endpoint).\nArgs:\n    batch_params: List of parameter dicts for each response.\nReturns:\n    List of Response objects."}],"docstring":"Enhanced shared interface for the OpenAI Responses API.\nProvides sync/async, streaming, status polling, batch, tool/function, and structured output.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/messaging/notification_interface.py","name":"NotificationInterface","data":{"name":"NotificationInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/messaging/notification_interface.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"_init_client","lineno":29,"docstring":null},{"name":"send_email","lineno":61,"docstring":"Send an email using the configured provider. Supports CC, BCC, reply-to, attachments, and HTML.\nReturns structured result: {success, error, result}"},{"name":"batch_send_email","lineno":144,"docstring":"Batch send emails to multiple recipients. Each recipient is a dict with keys: to, cc, bcc, reply_to, etc.\nReturns a list of structured results."},{"name":"send_notification","lineno":218,"docstring":"Send a notification (Slack, Teams, SMS). Not implemented.\nReturns structured result."}],"docstring":"Authoritative shared interface for email services (SMTP, SES, SendGrid).\nSee official docs for each provider.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/interfaces/orchestration/crewai_interface.py","name":"CrewAIInterface","data":{"name":"CrewAIInterface","file_path":"opsvi/opsvi_opsvi/shared/interfaces/orchestration/crewai_interface.py","lineno":23,"bases":[],"methods":[{"name":"__init__","lineno":29,"docstring":null},{"name":"create_agent","lineno":35,"docstring":null},{"name":"create_task","lineno":48,"docstring":null},{"name":"create_crew","lineno":70,"docstring":null},{"name":"run_crew","lineno":84,"docstring":null},{"name":"register_tool","lineno":98,"docstring":null}],"docstring":"Authoritative shared interface for building, orchestrating, and executing CrewAI multi-agent workflows.\nSee: https://docs.crewai.com/","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/live_collaboration_integration.py","name":"LiveCollaborationBridge","data":{"name":"LiveCollaborationBridge","file_path":"opsvi/opsvi_opsvi/shared/live_collaboration_integration.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":18,"docstring":null},{"name":"classify_intent","lineno":74,"docstring":"Classify user intent using SpecStory intelligence patterns"},{"name":"select_optimal_agent","lineno":137,"docstring":"Select optimal agent based on intent and intelligence patterns"},{"name":"prepare_agent_params","lineno":194,"docstring":"Prepare agent-specific parameters based on actual method signatures"},{"name":"analyze_collaboration_outcome","lineno":212,"docstring":"Analyze the collaboration outcome for learning"},{"name":"generate_learning_insight","lineno":229,"docstring":"Generate learning insights for future improvements"}],"docstring":"Bridge between SpecStory Intelligence and live Agent Hub","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","lineno":92,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when Brave MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","lineno":98,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"opsvi/opsvi_opsvi/shared/mcp/brave_mcp_search.py","lineno":104,"bases":["BraveMCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/context7_mcp_client_strict.py","name":"StrictContext7MCPClient","data":{"name":"StrictContext7MCPClient","file_path":"opsvi/opsvi_opsvi/shared/mcp/context7_mcp_client_strict.py","lineno":9,"bases":["Context7MCPClient"],"methods":[{"name":"_parse_library_results","lineno":17,"docstring":null}],"docstring":"Strict, OAMAT-compliant Context7 MCP client.\n- Only accepts a valid JSON array of libraries from the LLM.\n- No fallback parsing. If the LLM does not return a valid array, raises an error.\n- Use for workflows that require strict, schema-enforced, no-fallback extraction.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/intelligent_relevance_scorer.py","name":"RelevanceEvaluation","data":{"name":"RelevanceEvaluation","file_path":"opsvi/opsvi_opsvi/shared/mcp/intelligent_relevance_scorer.py","lineno":33,"bases":[],"methods":[],"docstring":"Result of intelligent relevance evaluation","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/intelligent_relevance_scorer.py","name":"IntelligentRelevanceScorer","data":{"name":"IntelligentRelevanceScorer","file_path":"opsvi/opsvi_opsvi/shared/mcp/intelligent_relevance_scorer.py","lineno":43,"bases":[],"methods":[{"name":"__init__","lineno":51,"docstring":"Initialize the relevance scoring agent\n\nArgs:\n    llm_client: Optional LLM client, will create default if not provided"},{"name":"_create_default_llm_client","lineno":61,"docstring":"Create default LLM client for relevance scoring"},{"name":"evaluate_relevance","lineno":71,"docstring":"Evaluate the relevance of a URL using intelligent LLM analysis\n\nArgs:\n    query: Original search query\n    url: URL to evaluate\n    title: Page/result title\n    description: Page/result description\n    context: Optional additional context about the research\n\nReturns:\n    RelevanceEvaluation with score, reasoning, and analysis"},{"name":"_create_relevance_prompt","lineno":108,"docstring":"Create specialized prompt for relevance evaluation"},{"name":"_get_llm_evaluation","lineno":176,"docstring":"Get evaluation from LLM"},{"name":"_parse_evaluation_response","lineno":210,"docstring":"Parse and validate LLM evaluation response"},{"name":"_fallback_scoring","lineno":249,"docstring":"Fallback to basic scoring if LLM evaluation fails"}],"docstring":"Specialized agent for intelligent relevance scoring using LLM analysis\n\nThis agent evaluates search results using sophisticated prompts and\nsemantic understanding rather than simple keyword matching.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","name":"ServerNotFoundError","data":{"name":"ServerNotFoundError","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","lineno":85,"bases":["MCPError"],"methods":[],"docstring":"Raised when MCP server is not found or not installed.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","name":"AuthenticationError","data":{"name":"AuthenticationError","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","lineno":91,"bases":["MCPError"],"methods":[],"docstring":"Raised when API key is invalid or missing.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","name":"ConnectionError","data":{"name":"ConnectionError","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","lineno":97,"bases":["MCPError"],"methods":[],"docstring":"Raised when connection to MCP server fails.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","name":"ToolNotFoundError","data":{"name":"ToolNotFoundError","file_path":"opsvi/opsvi_opsvi/shared/mcp/mcp_integration_template.py","lineno":103,"bases":["MCPError"],"methods":[],"docstring":"Raised when requested tool is not available on server.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/mcp/research_workflow_tool.py","name":"ResearchWorkflowTool","data":{"name":"ResearchWorkflowTool","file_path":"opsvi/opsvi_opsvi/shared/mcp/research_workflow_tool.py","lineno":107,"bases":[],"methods":[{"name":"__init__","lineno":112,"docstring":"Initialize the research workflow tool"},{"name":"_get_or_create_registry","lineno":127,"docstring":"Lazily create MCP registry if needed"},{"name":"_mock_search_results","lineno":145,"docstring":"Provide mock search results for demo purposes"},{"name":"_format_urls_for_agent","lineno":209,"docstring":"Format URLs for agent consumption with scores and metadata"},{"name":"extract_urls_from_text","lineno":257,"docstring":"Extract URLs from plain text search results"},{"name":"_extract_title_for_url","lineno":290,"docstring":"Extract title for a URL from surrounding text"},{"name":"_extract_description_for_url","lineno":312,"docstring":"Extract description for a URL from surrounding text"},{"name":"_generate_title_from_url","lineno":330,"docstring":"Generate a title from URL"},{"name":"present_urls_for_selection","lineno":539,"docstring":"Present URLs to the agent for selection\n\nArgs:\n    urls: List of SearchResultURL objects\n    max_display: Maximum number of URLs to display\n\nReturns:\n    Formatted string for agent consumption"},{"name":"compile_research_report","lineno":755,"docstring":"Compile a research report from the results\n\nArgs:\n    query: Original search query\n    urls: All found URLs\n    selected_indices: Selected URL indices\n    results: Scraping results\n\nReturns:\n    ResearchReport object"},{"name":"format_research_report","lineno":786,"docstring":"Format research report for presentation\n\nArgs:\n    report: ResearchReport object\n\nReturns:\n    Formatted report string"}],"docstring":"Research workflow tool for intelligent web research","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/api_keys_interface.py","name":"OpenAIAPIKeysInterface","data":{"name":"OpenAIAPIKeysInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/api_keys_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_api_key","lineno":12,"docstring":"Create an API key.\nPOST /v1/api_keys"},{"name":"list_api_keys","lineno":23,"docstring":"List all API keys.\nGET /v1/api_keys"},{"name":"retrieve_api_key","lineno":34,"docstring":"Retrieve an API key by ID.\nGET /v1/api_keys/{api_key_id}"},{"name":"delete_api_key","lineno":45,"docstring":"Delete an API key by ID.\nDELETE /v1/api_keys/{api_key_id}"}],"docstring":"Interface for OpenAI API Keys API.\nReference: https://platform.openai.com/docs/api-reference/api-keys","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/assistants_interface.py","name":"OpenAIAssistantsInterface","data":{"name":"OpenAIAssistantsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/assistants_interface.py","lineno":13,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_assistant","lineno":22,"docstring":null},{"name":"retrieve_assistant","lineno":38,"docstring":"Retrieve an assistant by ID.\nGET /v1/assistants/{assistant_id}"},{"name":"modify_assistant","lineno":53,"docstring":"Modify an assistant.\nPOST /v1/assistants/{assistant_id}"},{"name":"delete_assistant","lineno":68,"docstring":"Delete an assistant.\nDELETE /v1/assistants/{assistant_id}"},{"name":"list_assistants","lineno":83,"docstring":"List all assistants.\nGET /v1/assistants"},{"name":"create_thread","lineno":98,"docstring":"Create a thread.\nPOST /v1/threads"},{"name":"retrieve_thread","lineno":113,"docstring":"Retrieve a thread by ID.\nGET /v1/threads/{thread_id}"},{"name":"modify_thread","lineno":128,"docstring":"Modify a thread.\nPOST /v1/threads/{thread_id}"},{"name":"delete_thread","lineno":143,"docstring":"Delete a thread.\nDELETE /v1/threads/{thread_id}"},{"name":"list_threads","lineno":158,"docstring":"List all threads.\nGET /v1/threads"},{"name":"create_message","lineno":173,"docstring":"Create a message in a thread.\nPOST /v1/threads/{thread_id}/messages"},{"name":"list_messages","lineno":190,"docstring":"List all messages in a thread.\nGET /v1/threads/{thread_id}/messages"},{"name":"retrieve_message","lineno":205,"docstring":"Retrieve a message by ID.\nGET /v1/threads/{thread_id}/messages/{message_id}"},{"name":"run_thread","lineno":222,"docstring":"Run a thread.\nPOST /v1/threads/{thread_id}/runs"},{"name":"retrieve_run","lineno":239,"docstring":"Retrieve a run by ID.\nGET /v1/threads/{thread_id}/runs/{run_id}"},{"name":"list_runs","lineno":256,"docstring":"List all runs in a thread.\nGET /v1/threads/{thread_id}/runs"},{"name":"cancel_run","lineno":271,"docstring":"Cancel a run.\nPOST /v1/threads/{thread_id}/runs/{run_id}/cancel"},{"name":"list_run_steps","lineno":288,"docstring":"List all run steps in a run.\nGET /v1/threads/{thread_id}/runs/{run_id}/steps"},{"name":"retrieve_run_step","lineno":305,"docstring":"Retrieve a run step by ID.\nGET /v1/threads/{thread_id}/runs/{run_id}/steps/{step_id}"}],"docstring":"Interface for OpenAI Assistants API (OpenAI Python SDK >=1.0.0).\nOnly approved models compatible with Assistants API are allowed: gpt-4.1, gpt-4.1-mini, gpt-4.1-nano, o4-mini.\nAll methods use self.client.beta.assistants, self.client.beta.threads, etc.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/audio_interface.py","name":"OpenAIAudioInterface","data":{"name":"OpenAIAudioInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/audio_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_transcription","lineno":17,"docstring":"Transcribe audio into text.\nPOST /v1/audio/transcriptions"},{"name":"create_translation","lineno":28,"docstring":"Translate audio into English.\nPOST /v1/audio/translations"},{"name":"create_speech","lineno":39,"docstring":"Generate spoken audio from text.\nPOST /v1/audio/speech"}],"docstring":"Interface for OpenAI Audio API (Whisper, TTS).\nReference: https://platform.openai.com/docs/api-reference/audio\n\nThis interface provides both synchronous and asynchronous methods for all audio endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/base.py","name":"OpenAIBaseInterface","data":{"name":"OpenAIBaseInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/base.py","lineno":7,"bases":[],"methods":[{"name":"__init__","lineno":13,"docstring":null},{"name":"_handle_error","lineno":30,"docstring":null},{"name":"_get_headers","lineno":34,"docstring":null}],"docstring":"Base class for all OpenAI API interfaces.\nHandles authentication, error handling, and SDK/raw HTTP selection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/batch_interface.py","name":"OpenAIBatchInterface","data":{"name":"OpenAIBatchInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/batch_interface.py","lineno":8,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_batch","lineno":14,"docstring":"Create a batch.\nPOST /v1/batches"},{"name":"retrieve_batch","lineno":25,"docstring":"Retrieve a batch by ID.\nGET /v1/batches/{batch_id}"},{"name":"list_batches","lineno":36,"docstring":"List all batches.\nGET /v1/batches"},{"name":"cancel_batch","lineno":47,"docstring":"Cancel a batch.\nPOST /v1/batches/{batch_id}/cancel"}],"docstring":"Interface for OpenAI Batch API.\nReference: https://platform.openai.com/docs/api-reference/batch","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/chat_completions_interface.py","name":"OpenAIChatCompletionsInterface","data":{"name":"OpenAIChatCompletionsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/chat_completions_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_chat_completion","lineno":15,"docstring":"Create a chat completion for the provided conversation messages and parameters.\nPOST /v1/chat/completions"}],"docstring":"Interface for OpenAI Chat Completions API.\nReference: https://platform.openai.com/docs/api-reference/chat\n\nThis interface provides both synchronous and asynchronous methods for all chat completions endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/completions_interface.py","name":"OpenAICompletionsInterface","data":{"name":"OpenAICompletionsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/completions_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_completion","lineno":15,"docstring":"Create a completion for the provided prompt and parameters.\nPOST /v1/completions"}],"docstring":"Interface for OpenAI Completions API (legacy).\nReference: https://platform.openai.com/docs/api-reference/completions\n\nThis interface provides both synchronous and asynchronous methods for all completions endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/embeddings_interface.py","name":"OpenAIEmbeddingsInterface","data":{"name":"OpenAIEmbeddingsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/embeddings_interface.py","lineno":7,"bases":["OpenAIBaseInterface"],"methods":[{"name":"__init__","lineno":16,"docstring":null},{"name":"create_embedding","lineno":20,"docstring":"Generate an embedding vector for the input text.\nPOST /v1/embeddings"}],"docstring":"Interface for OpenAI Embeddings API (openai>=1.0.0).\nReference: https://platform.openai.com/docs/api-reference/embeddings\n\nThis interface provides both synchronous and asynchronous methods for all embeddings endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/files_interface.py","name":"OpenAIFilesInterface","data":{"name":"OpenAIFilesInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/files_interface.py","lineno":9,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_files","lineno":15,"docstring":"List all files.\nGET /v1/files"},{"name":"upload_file","lineno":26,"docstring":"Upload a file for a specific purpose.\nPOST /v1/files"},{"name":"delete_file","lineno":40,"docstring":"Delete a file by ID.\nDELETE /v1/files/{file_id}"},{"name":"retrieve_file","lineno":51,"docstring":"Retrieve file metadata by ID.\nGET /v1/files/{file_id}"},{"name":"retrieve_file_content","lineno":62,"docstring":"Retrieve the content of a file by ID.\nGET /v1/files/{file_id}/content"}],"docstring":"Interface for OpenAI Files API.\nReference: https://platform.openai.com/docs/api-reference/files","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/fine_tuning_interface.py","name":"OpenAIFineTuningInterface","data":{"name":"OpenAIFineTuningInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/fine_tuning_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_job","lineno":15,"docstring":"Create a fine-tuning job.\nPOST /v1/fine_tuning/jobs"},{"name":"list_jobs","lineno":28,"docstring":"List all fine-tuning jobs.\nGET /v1/fine_tuning/jobs"},{"name":"retrieve_job","lineno":39,"docstring":"Retrieve a fine-tuning job by ID.\nGET /v1/fine_tuning/jobs/{fine_tuning_job_id}"},{"name":"list_events","lineno":50,"docstring":"List events for a fine-tuning job.\nGET /v1/fine_tuning/jobs/{fine_tuning_job_id}/events"},{"name":"cancel_job","lineno":61,"docstring":"Cancel a fine-tuning job.\nPOST /v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel"},{"name":"list_fine_tuned_models","lineno":72,"docstring":"List all fine-tuned models.\nGET /v1/models (filtered for fine-tuned models)"}],"docstring":"Interface for OpenAI Fine-tuning API.\nReference: https://platform.openai.com/docs/api-reference/fine-tuning\n\nThis interface provides both synchronous and asynchronous methods for all fine-tuning endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/images_interface.py","name":"OpenAIImagesInterface","data":{"name":"OpenAIImagesInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/images_interface.py","lineno":7,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_image","lineno":16,"docstring":"Generate an image from a prompt.\nPOST /v1/images/generations"},{"name":"edit_image","lineno":27,"docstring":"Edit an image based on a prompt and a mask.\nPOST /v1/images/edits"},{"name":"create_image_variation","lineno":42,"docstring":"Create a variation of a given image.\nPOST /v1/images/variations"}],"docstring":"Interface for OpenAI Images API (DALL·E).\nReference: https://platform.openai.com/docs/api-reference/images\n\nThis interface provides both synchronous and asynchronous methods for all images endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/models_interface.py","name":"OpenAIModelsInterface","data":{"name":"OpenAIModelsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/models_interface.py","lineno":5,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_models","lineno":14,"docstring":"List all available models.\nGET /v1/models"},{"name":"retrieve_model","lineno":25,"docstring":"Retrieve a specific model by ID.\nGET /v1/models/{model}"}],"docstring":"Interface for OpenAI Models API.\nReference: https://platform.openai.com/docs/api-reference/models\n\nThis interface provides both synchronous and asynchronous methods for all models endpoints.\nAll methods are standards-compliant and mapped to the official OpenAI Python SDK.","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/moderations_interface.py","name":"OpenAIModerationsInterface","data":{"name":"OpenAIModerationsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/moderations_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_moderation","lineno":12,"docstring":"Classify if text violates OpenAI's content policy.\nPOST /v1/moderations"}],"docstring":"Interface for OpenAI Moderations API.\nReference: https://platform.openai.com/docs/api-reference/moderations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/openai_responses_client.py","name":"OpenAIResponsesClient","data":{"name":"OpenAIResponsesClient","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/openai_responses_client.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":null},{"name":"get_structured_response","lineno":28,"docstring":"Get a structured (JSON) response from the OpenAI Responses API.\nArgs:\n    prompt: The user prompt.\n    model: The model to use (must be in allowed list).\n    tools: Optional tool definitions.\n    kwargs: Additional parameters for the API.\nReturns:\n    Dict with structured response fields.\nRaises:\n    ValueError if model is not allowed."}],"docstring":"Standards-compliant client for OpenAI Responses API.\nEnforces allowed models, structured output, and unified logging.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/organizations_interface.py","name":"OpenAIOrganizationsInterface","data":{"name":"OpenAIOrganizationsInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/organizations_interface.py","lineno":4,"bases":["OpenAIBaseInterface"],"methods":[{"name":"list_organizations","lineno":10,"docstring":"List all organizations.\nGET /v1/organizations"},{"name":"retrieve_organization","lineno":21,"docstring":"Retrieve an organization by ID.\nGET /v1/organizations/{organization_id}"},{"name":"list_memberships","lineno":32,"docstring":"List all memberships in an organization.\nGET /v1/organizations/{organization_id}/memberships"}],"docstring":"Interface for OpenAI Organizations API.\nReference: https://platform.openai.com/docs/api-reference/organizations","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/responses_interface.py","name":"OpenAIResponsesInterface","data":{"name":"OpenAIResponsesInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/responses_interface.py","lineno":9,"bases":["OpenAIBaseInterface"],"methods":[{"name":"__init__","lineno":15,"docstring":null},{"name":"create_response","lineno":21,"docstring":"Create a response using the OpenAI Responses API.\nSupports structured outputs (JSON schema), reasoning, and conversation state.\nArgs:\n    model: Model name (e.g., 'gpt-4.1-mini', 'o3', etc.)\n    input: List of dicts (role/content) or string\n    instructions: Optional system instructions\n    text_format: None, 'json_object', or dict for JSON schema (legacy, prefer response_format)\n    response_format: dict, e.g. {\"type\": \"json_object\"} (preferred for structured output)\n    reasoning: dict, e.g. {\"effort\": \"medium\", \"summary\": \"auto\"}\n    previous_response_id: str, for conversation state\n    store: bool, whether to store response\n    max_output_tokens: int, output token limit\n    debug: bool, enable debug logging\nReturns:\n    dict: API response"},{"name":"create_response_stream","lineno":97,"docstring":"Create a streaming response (POST /responses with stream=True)\nYields events as they arrive."},{"name":"parse_json_output","lineno":116,"docstring":"Try to parse output_text as JSON. Returns dict/list or None if parsing fails."},{"name":"retrieve_response","lineno":127,"docstring":"Retrieve a response by ID (GET /responses/{response_id})"},{"name":"list_input_items","lineno":147,"docstring":"List input items for a response (GET /responses/{response_id}/input_items)"},{"name":"delete_response","lineno":168,"docstring":"Delete a response by ID (DELETE /responses/{response_id})"},{"name":"cancel_response","lineno":184,"docstring":"Cancel a response (POST /responses/{response_id}/cancel)"}],"docstring":"Interface for OpenAI Responses API (Beta).\nSupports structured outputs, reasoning, and conversation state per latest OpenAI docs.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/usage_interface.py","name":"OpenAIUsageInterface","data":{"name":"OpenAIUsageInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/usage_interface.py","lineno":6,"bases":["OpenAIBaseInterface"],"methods":[{"name":"retrieve_usage","lineno":12,"docstring":"Retrieve usage statistics.\nGET /v1/dashboard/billing/usage"},{"name":"retrieve_subscription","lineno":23,"docstring":"Retrieve subscription information.\nGET /v1/dashboard/billing/subscription"}],"docstring":"Interface for OpenAI Usage API.\nReference: https://platform.openai.com/docs/api-reference/usage","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/vector_stores_interface.py","name":"OpenAIVectorStoresInterface","data":{"name":"OpenAIVectorStoresInterface","file_path":"opsvi/opsvi_opsvi/shared/openai_interfaces/vector_stores_interface.py","lineno":7,"bases":["OpenAIBaseInterface"],"methods":[{"name":"create_vector_store","lineno":13,"docstring":"Create a vector store.\nPOST /v1/vector_stores"},{"name":"retrieve_vector_store","lineno":24,"docstring":"Retrieve a vector store by ID.\nGET /v1/vector_stores/{vector_store_id}"},{"name":"list_vector_stores","lineno":35,"docstring":"List all vector stores.\nGET /v1/vector_stores"},{"name":"update_vector_store","lineno":46,"docstring":"Update a vector store.\nPOST /v1/vector_stores/{vector_store_id}"},{"name":"delete_vector_store","lineno":57,"docstring":"Delete a vector store.\nDELETE /v1/vector_stores/{vector_store_id}"},{"name":"list_files","lineno":68,"docstring":"List files in a vector store.\nGET /v1/vector_stores/{vector_store_id}/files"},{"name":"add_file","lineno":79,"docstring":"Add a file to a vector store.\nPOST /v1/vector_stores/{vector_store_id}/files"},{"name":"remove_file","lineno":90,"docstring":"Remove a file from a vector store.\nDELETE /v1/vector_stores/{vector_store_id}/files/{file_id}"},{"name":"list_file_batches","lineno":101,"docstring":"List file batches in a vector store.\nGET /v1/vector_stores/{vector_store_id}/file_batches"},{"name":"retrieve_file_batch","lineno":112,"docstring":"Retrieve a file batch by ID.\nGET /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}"}],"docstring":"Interface for OpenAI Vector Stores API (Beta).\nReference: https://platform.openai.com/docs/api-reference/vector-stores","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/api_spec_generator.py","name":"APISpecGenerator","data":{"name":"APISpecGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/api_spec_generator.py","lineno":48,"bases":[],"methods":[{"name":"__init__","lineno":62,"docstring":"Initialize the APISpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file."},{"name":"generate_api_specs","lineno":94,"docstring":"Generate comprehensive API specifications.\n\nArgs:\n    input_data: APISpecInput containing interface design and requirements.\n\nReturns:\n    APISpecOutput with generated specifications."}],"docstring":"Main API specification generator using OpenAI O3 models.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    config_manager: ConfigManager for loading configuration.\n    client: OpenAI client instance.\n    input_loader: UniversalInputLoader for reading input files.\n    directory_manager: DirectoryManager for managing directories.\n    file_generator: FileGenerator for writing output files.\n    prompt_builder: PromptBuilder for constructing model prompts.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_designer.py","name":"ArchitectureAnalyzer","data":{"name":"ArchitectureAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_designer.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":56,"docstring":"Initialize the architecture analyzer with a logger."},{"name":"analyze_requirements","lineno":60,"docstring":"Analyze system requirements and extract architectural insights.\n\nArgs:\n    requirements_text: Natural language system requirements\n\nReturns:\n    A dict containing architectural analysis"}],"docstring":"Analyzes system requirements and generates architectural insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_designer.py","name":"ArchitectureDesigner","data":{"name":"ArchitectureDesigner","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_designer.py","lineno":143,"bases":[],"methods":[{"name":"__init__","lineno":146,"docstring":"Initialize the architecture designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_setup_directories","lineno":167,"docstring":"Create required output directories using DirectoryManager."},{"name":"design_system_architecture","lineno":177,"docstring":"Design system architecture based on input requirements.\n\nArgs:\n    input_data: ArchitectureInput instance\n\nReturns:\n    ArchitectureOutput instance with results"}],"docstring":"Main architecture designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_validator.py","name":"ArchitectureValidator","data":{"name":"ArchitectureValidator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/architecture_validator.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":56,"docstring":"Initialize the architecture validator."},{"name":"_create_directories","lineno":76,"docstring":"Create necessary output directories."},{"name":"validate_architecture","lineno":89,"docstring":"Validate comprehensive architecture design."},{"name":"check_consistency","lineno":125,"docstring":"Check architecture consistency."},{"name":"assess_scalability","lineno":140,"docstring":"Assess architecture scalability."},{"name":"verify_security","lineno":155,"docstring":"Verify architecture security."},{"name":"_perform_comprehensive_validation","lineno":175,"docstring":"Perform comprehensive architecture validation."},{"name":"_generate_validation_report","lineno":200,"docstring":"Generate comprehensive validation report using O3 model."},{"name":"_build_validation_prompt","lineno":230,"docstring":"Build comprehensive prompt for validation report generation."},{"name":"_create_validation_files","lineno":237,"docstring":"Create validation report files."},{"name":"_convert_to_markdown","lineno":264,"docstring":"Convert validation report to Markdown format."},{"name":"_check_naming_consistency","lineno":305,"docstring":"Check naming consistency across architecture."},{"name":"_check_pattern_consistency","lineno":317,"docstring":"Check pattern consistency across architecture."},{"name":"_check_interface_consistency","lineno":327,"docstring":"Check interface consistency across architecture."},{"name":"_check_data_flow_consistency","lineno":337,"docstring":"Check data flow consistency across architecture."},{"name":"_assess_horizontal_scaling","lineno":347,"docstring":"Assess horizontal scaling capabilities."},{"name":"_assess_vertical_scaling","lineno":359,"docstring":"Assess vertical scaling capabilities."},{"name":"_identify_performance_bottlenecks","lineno":369,"docstring":"Identify performance bottlenecks."},{"name":"_generate_scaling_recommendations","lineno":375,"docstring":"Generate scaling recommendations."},{"name":"_verify_authentication","lineno":385,"docstring":"Verify authentication mechanisms."},{"name":"_verify_authorization","lineno":395,"docstring":"Verify authorization mechanisms."},{"name":"_verify_encryption","lineno":405,"docstring":"Verify encryption mechanisms."},{"name":"_identify_security_vulnerabilities","lineno":413,"docstring":"Identify security vulnerabilities."},{"name":"_generate_security_recommendations","lineno":419,"docstring":"Generate security recommendations."},{"name":"_assess_performance","lineno":429,"docstring":"Assess performance characteristics."},{"name":"_assess_maintainability","lineno":439,"docstring":"Assess maintainability characteristics."},{"name":"_assess_reliability","lineno":449,"docstring":"Assess reliability characteristics."},{"name":"_check_compliance","lineno":459,"docstring":"Check compliance with standards."}],"docstring":"Main architecture validator class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/ast_analyzer.py","name":"ASTAnalyzer","data":{"name":"ASTAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/ast_analyzer.py","lineno":93,"bases":[],"methods":[{"name":"__init__","lineno":101,"docstring":"Initialize the AST analyzer and its logger."},{"name":"analyze_file","lineno":134,"docstring":"Analyze a single Python file.\n\nArgs:\n    file_path: Path to the Python file to analyze\n\nReturns:\n    FileAnalysis: Complete analysis of the file"},{"name":"_extract_import_patterns","lineno":188,"docstring":"Extract import patterns from AST."},{"name":"_classify_import","lineno":219,"docstring":"Classify an import as absolute, relative, standard_library, or third_party."},{"name":"_extract_class_patterns","lineno":232,"docstring":"Extract class patterns from AST."},{"name":"_extract_method_patterns","lineno":273,"docstring":"Extract method patterns from AST."},{"name":"_extract_error_handling_patterns","lineno":321,"docstring":"Extract error handling patterns from AST."},{"name":"_extract_logging_patterns","lineno":351,"docstring":"Extract logging patterns from AST."},{"name":"_has_main_function","lineno":384,"docstring":"Check if file has a main function."},{"name":"_has_setup_logger","lineno":391,"docstring":"Check if file has setup_logger call."},{"name":"_uses_absolute_imports","lineno":403,"docstring":"Check if file uses absolute imports."},{"name":"_uses_shared_utilities","lineno":407,"docstring":"Check if file uses shared utilities."},{"name":"_get_attribute_name","lineno":411,"docstring":"Get the full name of an attribute node."},{"name":"_has_logging_in_node","lineno":419,"docstring":"Check if a node contains logging calls."},{"name":"_has_raise_in_node","lineno":431,"docstring":"Check if a node contains raise statements."}],"docstring":"Performs deep structural analysis of Python code using AST.\n\nExtracts patterns for imports, classes, methods, error handling,\nlogging, and overall code organization.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/auto_rules_generator.py","name":"AutoRulesGenerator","data":{"name":"AutoRulesGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/auto_rules_generator.py","lineno":50,"bases":[],"methods":[{"name":"__init__","lineno":58,"docstring":"Initialize the auto rules generator."},{"name":"generate_rules","lineno":88,"docstring":"Generate comprehensive rules based on codebase analysis.\n\nArgs:\n    validate_only: If True, only validate existing rules without generating new ones\n\nReturns:\n    AutoRulesGenerationResult: Complete result of the generation process"},{"name":"_perform_ast_analysis","lineno":173,"docstring":"Perform AST analysis on all discovered files."},{"name":"_generate_output_files","lineno":196,"docstring":"Generate output files with the analysis results."},{"name":"_generate_updated_project_rules","lineno":297,"docstring":"Generate updated project_rules.md with new rules."},{"name":"_generate_updated_universal_rules","lineno":363,"docstring":"Generate updated universal_rules.md with new rules."},{"name":"_format_rules_for_markdown","lineno":432,"docstring":"Format rules for markdown output."},{"name":"_generate_summary","lineno":503,"docstring":"Generate a summary of the generation process."},{"name":"_generate_recommendations","lineno":531,"docstring":"Generate recommendations based on validation results."}],"docstring":"Main orchestrator for the auto rules generation system.\n\nCoordinates all components to generate comprehensive, current rules\nbased on actual codebase patterns.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/bulletproofing_orchestrator.py","name":"BulletproofingOrchestrator","data":{"name":"BulletproofingOrchestrator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/bulletproofing_orchestrator.py","lineno":46,"bases":[],"methods":[{"name":"__init__","lineno":49,"docstring":"Initialize the bulletproofing orchestrator."},{"name":"run_comprehensive_validation","lineno":62,"docstring":"Run comprehensive bulletproofing validation."},{"name":"_check_performance_thresholds","lineno":138,"docstring":"Check if performance meets thresholds."},{"name":"_check_recovery_capabilities","lineno":155,"docstring":"Check if recovery capabilities are adequate."},{"name":"_generate_recommendations","lineno":167,"docstring":"Generate recommendations based on validation results."},{"name":"enable_git_hooks","lineno":213,"docstring":"Enable git hooks only if system is bulletproof."},{"name":"disable_git_hooks","lineno":237,"docstring":"Disable git hooks for safety."},{"name":"run_dry_run","lineno":254,"docstring":"Run bulletproofing validation in dry-run mode."},{"name":"generate_comprehensive_report","lineno":271,"docstring":"Generate a comprehensive bulletproofing report."},{"name":"setup_default_recovery_strategies","lineno":330,"docstring":"Setup default recovery strategies for common error types."},{"name":"cleanup_old_data","lineno":402,"docstring":"Clean up old performance and backup data."}],"docstring":"Main orchestrator for bulletproofing the auto rules generation system.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/rule_generator_engine.py","name":"RuleGeneratorEngine","data":{"name":"RuleGeneratorEngine","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/rule_generator_engine.py","lineno":69,"bases":[],"methods":[{"name":"__init__","lineno":82,"docstring":"Initialize the rule generator engine."},{"name":"generate_rules","lineno":117,"docstring":"Generate rules based on pattern analysis.\n\nArgs:\n    pattern_analysis: Complete pattern analysis of the codebase.\n\nReturns:\n    RuleGenerationResult: Generated rules and metadata."},{"name":"_generate_rule_candidates","lineno":145,"docstring":"Generate initial rule candidates from pattern analysis."},{"name":"_generate_import_rules","lineno":164,"docstring":"Generate rules from import patterns."},{"name":"_generate_class_rules","lineno":199,"docstring":"Generate rules from class patterns."},{"name":"_generate_method_rules","lineno":244,"docstring":"Generate rules from method patterns."},{"name":"_generate_error_handling_rules","lineno":291,"docstring":"Generate rules from error handling patterns."},{"name":"_generate_logging_rules","lineno":339,"docstring":"Generate rules from logging patterns."},{"name":"_generate_violation_rules","lineno":386,"docstring":"Generate rules from violation patterns."},{"name":"_enhance_rules_with_o3","lineno":419,"docstring":"Use O3 model to enhance and validate rules."},{"name":"_create_rule_enhancement_prompt","lineno":436,"docstring":"Create prompt for O3 model to enhance a rule."},{"name":"_apply_o3_enhancements","lineno":460,"docstring":"Apply O3 model enhancements to a rule."},{"name":"_resolve_rule_conflicts","lineno":477,"docstring":"Resolve conflicts between rules."},{"name":"_rules_conflict","lineno":488,"docstring":"Check if two rules conflict."},{"name":"_create_rule_hierarchy","lineno":496,"docstring":"Create rule hierarchy by type."},{"name":"_calculate_confidence_scores","lineno":509,"docstring":"Calculate adjusted confidence scores for rules."},{"name":"_generate_rule_recommendations","lineno":525,"docstring":"Generate recommendations for rule implementation."}],"docstring":"Uses O3ModelGenerator to generate intelligent rules based on pattern analysis.\n\nAnalyzes pattern data, generates rule candidates, enhances them via O3 model,\nresolves conflicts, organizes hierarchy, and produces implementation recommendations.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    model_generator: O3ModelGenerator instance for interfacing with the O3 model.\n    rule_templates: Templates for rule text generation by pattern type and severity.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/rule_validator.py","name":"ValidationReport","data":{"name":"ValidationReport","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/auto_rules_generation/rule_validator.py","lineno":40,"bases":[],"methods":[],"docstring":"Complete validation report.\n\nAttributes:\n    total_rules: Total number of rules processed.\n    valid_rules: Count of rules that passed validation.\n    invalid_rules: Count of rules that failed validation.\n    average_confidence: Average confidence score across all rules.\n    validation_results: Mapping from rule name to its ValidationResult.\n    overall_issues: Consolidated list of all issues found.\n    overall_warnings: Consolidated list of all warnings generated.\n    rollback_recommendations: Actions suggested for rollback scenarios.\n    safety_score: Overall safety score computed from valid rules.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/brainstorming_tool.py","name":"BrainstormingProcessor","data":{"name":"BrainstormingProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/brainstorming_tool.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize the brainstorming processor."},{"name":"run","lineno":71,"docstring":"Run a brainstorming session end-to-end with enhanced conversation context.\n\nArgs:\n    input_data: Structured input for brainstorming\n\nReturns:\n    BrainstormingOutput with results and metadata"},{"name":"_build_enhanced_brainstorming_prompt","lineno":170,"docstring":"Build enhanced prompt with conversation context."},{"name":"_process_and_categorize_ideas","lineno":220,"docstring":"Process and categorize generated ideas."},{"name":"_prioritize_ideas","lineno":242,"docstring":"Prioritize ideas based on impact and feasibility."},{"name":"_extract_categories","lineno":267,"docstring":"Extract unique categories from ideas."}],"docstring":"Main processor for brainstorming using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"ProjectAnalyzer","data":{"name":"ProjectAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":47,"docstring":"Initialize ProjectAnalyzer with O3Logger."},{"name":"analyze_project","lineno":51,"docstring":"Analyze project for CI/CD requirements.\n\nArgs:\n    project_path: Path to the project directory\n\nReturns:\n    Dictionary containing project analysis"},{"name":"_detect_project_type","lineno":79,"docstring":"Detect the type of project."},{"name":"_analyze_dependencies","lineno":103,"docstring":"Analyze project dependencies."},{"name":"_detect_testing_framework","lineno":134,"docstring":"Detect testing frameworks used in the project."},{"name":"_detect_build_tools","lineno":171,"docstring":"Detect build tools used in the project."},{"name":"_detect_deployment_targets","lineno":207,"docstring":"Detect deployment targets from configuration files."},{"name":"_detect_environment_configs","lineno":243,"docstring":"Detect environment configurations."},{"name":"_detect_security_requirements","lineno":263,"docstring":"Detect security requirements."},{"name":"_detect_performance_requirements","lineno":290,"docstring":"Detect performance requirements."}],"docstring":"Analyzes project structure and requirements for CI/CD configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"GitHubActionsGenerator","data":{"name":"GitHubActionsGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":312,"bases":[],"methods":[{"name":"__init__","lineno":315,"docstring":"Initialize GitHubActionsGenerator with OpenAI client and logger."},{"name":"generate_workflow","lineno":321,"docstring":"Generate GitHub Actions workflow.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated GitHub Actions workflow content"},{"name":"_generate_fallback_workflow","lineno":362,"docstring":"Generate a fallback GitHub Actions workflow."}],"docstring":"Generates GitHub Actions workflows using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"GitLabCIGenerator","data":{"name":"GitLabCIGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":374,"bases":[],"methods":[{"name":"__init__","lineno":377,"docstring":"Initialize GitLabCIGenerator with OpenAI client and logger."},{"name":"generate_pipeline","lineno":383,"docstring":"Generate GitLab CI pipeline.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated GitLab CI pipeline content"},{"name":"_generate_fallback_pipeline","lineno":424,"docstring":"Generate a fallback GitLab CI pipeline."}],"docstring":"Generates GitLab CI pipelines using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"JenkinsGenerator","data":{"name":"JenkinsGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":436,"bases":[],"methods":[{"name":"__init__","lineno":439,"docstring":"Initialize JenkinsGenerator with OpenAI client and logger."},{"name":"generate_pipeline","lineno":445,"docstring":"Generate Jenkins pipeline.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    config: CI/CD configuration\n\nReturns:\n    Generated Jenkins pipeline content"},{"name":"_generate_fallback_pipeline","lineno":486,"docstring":"Generate a fallback Jenkins pipeline."}],"docstring":"Generates Jenkins pipeline configurations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","name":"CICDPipelineGenerator","data":{"name":"CICDPipelineGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/cicd_pipeline_generator.py","lineno":498,"bases":[],"methods":[{"name":"__init__","lineno":501,"docstring":"Initialize CICDPipelineGenerator.\n\nArgs:\n    config: CICDPipelineGeneratorInput schema instance"},{"name":"generate_pipelines","lineno":526,"docstring":"Generate CI/CD pipelines for the project.\n\nReturns:\n    CICDPipelineGeneratorOutput with generated pipelines"},{"name":"_write_pipeline_files","lineno":581,"docstring":"Write pipeline files to the project directory.\n\nArgs:\n    pipelines: Mapping of platform to pipeline content\n    project_path: Root path of the project\n\nReturns:\n    List of written file paths"}],"docstring":"Main CI/CD pipeline generator orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","name":"SecurityAnalyzer","data":{"name":"SecurityAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":195,"bases":[],"methods":[{"name":"__init__","lineno":198,"docstring":"Initialize SecurityAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_security","lineno":211,"docstring":"Analyze code for security vulnerabilities.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    List of security issues found"}],"docstring":"Analyzes code for security vulnerabilities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","name":"QualityAnalyzer","data":{"name":"QualityAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":250,"bases":[],"methods":[{"name":"__init__","lineno":253,"docstring":"Initialize QualityAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_quality","lineno":266,"docstring":"Analyze code quality and adherence to best practices.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    Dictionary containing quality analysis"}],"docstring":"Analyzes code quality and best practices.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","name":"PerformanceAnalyzer","data":{"name":"PerformanceAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":305,"bases":[],"methods":[{"name":"__init__","lineno":308,"docstring":"Initialize PerformanceAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    client: OpenAI client instance.\n    prompt_builder: PromptBuilder instance for building prompts."},{"name":"analyze_performance","lineno":321,"docstring":"Analyze code for performance issues.\n\nArgs:\n    file_info: Parsed file information\n\nReturns:\n    List of performance issues found"}],"docstring":"Analyzes code for performance issues.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","name":"CodeReviewer","data":{"name":"CodeReviewer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/code_reviewer.py","lineno":362,"bases":[],"methods":[{"name":"__init__","lineno":365,"docstring":"Initialize CodeReviewer.\n\nArgs:\n    config_path: Optional path to configuration file\n\nAttributes:\n    config_manager: ConfigManager instance\n    logger: O3Logger instance\n    parser: CodeParser instance\n    security_analyzer: SecurityAnalyzer instance\n    quality_analyzer: QualityAnalyzer instance\n    performance_analyzer: PerformanceAnalyzer instance\n    directory_manager: DirectoryManager instance\n    file_generator: FileGenerator instance\n    output_formatter: OutputFormatter instance"},{"name":"_setup_directories","lineno":394,"docstring":"Create necessary directories for reports and logs."},{"name":"review_code","lineno":400,"docstring":"Perform comprehensive code review.\n\nArgs:\n    input_data: Code review input data\n\nReturns:\n    Code review output with results"},{"name":"_generate_comprehensive_review","lineno":471,"docstring":"Generate comprehensive review summary.\n\nArgs:\n    file_info: Parsed file information\n    security_issues: Found security issues\n    quality_analysis: Quality analysis results\n    performance_issues: Found performance issues\n    input_data: Input data\n\nReturns:\n    Comprehensive review data structure"},{"name":"_generate_recommendations","lineno":536,"docstring":"Generate actionable recommendations.\n\nArgs:\n    security_issues: Security issues found\n    quality_analysis: Quality analysis results\n    performance_issues: Performance issues found\n\nReturns:\n    List of recommendations"},{"name":"_identify_priority_actions","lineno":579,"docstring":"Identify priority actions to take.\n\nArgs:\n    security_issues: Security issues found\n    quality_analysis: Quality analysis results\n    performance_issues: Performance issues found\n\nReturns:\n    List of priority actions"},{"name":"_save_review_report","lineno":625,"docstring":"Save review report to file.\n\nArgs:\n    review: Review data\n    file_path: Original file path\n\nReturns:\n    Path to saved report"},{"name":"_get_current_timestamp","lineno":645,"docstring":"Get current timestamp string.\n\nReturns:\n    Current timestamp in 'YYYY-MM-DD HH:MM:SS' format"}],"docstring":"Main class for code review and analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/component_designer.py","name":"ComponentAnalyzer","data":{"name":"ComponentAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/component_designer.py","lineno":88,"bases":[],"methods":[{"name":"__init__","lineno":91,"docstring":"Initialize the component analyzer."},{"name":"analyze_component_requirements","lineno":95,"docstring":"Analyze component requirements and extract design insights.\n\nArgs:\n    component_requirements: Natural language component requirements\n    architecture_design: Overall architecture design\n\nReturns:\n    Dictionary containing component analysis"},{"name":"_analyze_component_boundaries","lineno":146,"docstring":"Analyze component boundaries and responsibilities."},{"name":"_extract_interface_requirements","lineno":221,"docstring":"Extract interface requirements from component requirements."},{"name":"_extract_dependency_requirements","lineno":287,"docstring":"Extract dependency requirements from component requirements."},{"name":"_analyze_performance_requirements","lineno":350,"docstring":"Analyze performance requirements for the component."},{"name":"_analyze_security_requirements","lineno":387,"docstring":"Analyze security requirements for the component."},{"name":"_extract_testing_requirements","lineno":424,"docstring":"Extract testing requirements from component requirements."},{"name":"_analyze_deployment_requirements","lineno":454,"docstring":"Analyze deployment requirements for the component."},{"name":"_estimate_complexity","lineno":484,"docstring":"Estimate component complexity based on requirements."}],"docstring":"Analyzes component requirements and generates design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/component_designer.py","name":"ComponentDesigner","data":{"name":"ComponentDesigner","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/component_designer.py","lineno":612,"bases":[],"methods":[{"name":"__init__","lineno":615,"docstring":"Initialize the component designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":642,"docstring":"Create necessary output directories."},{"name":"design_components","lineno":656,"docstring":"Design comprehensive component specifications based on requirements.\n\nArgs:\n    input_data: Component design input specification\n\nReturns:\n    Component design output with specifications and diagrams"},{"name":"define_interfaces","lineno":711,"docstring":"Define detailed interfaces for components.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    Detailed interface definitions"},{"name":"specify_dependencies","lineno":736,"docstring":"Specify detailed dependencies for components.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    Detailed dependency specifications"},{"name":"generate_component_diagrams","lineno":765,"docstring":"Generate comprehensive component diagrams.\n\nArgs:\n    component_specifications: Component specifications\n\nReturns:\n    List of generated diagram file paths"},{"name":"_generate_with_o3_model","lineno":803,"docstring":"Generate component specifications using O3 model.\n\nArgs:\n    input_data: Component input specification\n    component_analysis: Analyzed component requirements\n\nReturns:\n    Generated component specifications"},{"name":"_build_prompt","lineno":843,"docstring":"Build comprehensive prompt for component design.\n\nArgs:\n    input_data: Component input specification\n    component_analysis: Analyzed component requirements\n\nReturns:\n    Formatted prompt for O3 model"},{"name":"_generate_diagrams","lineno":859,"docstring":"Generate visual diagrams for the component design.\n\nArgs:\n    component_specifications: Component specifications\n    input_data: Component input specification\n\nReturns:\n    List of generated diagram file paths"},{"name":"_create_component_files","lineno":874,"docstring":"Create component specification files.\n\nArgs:\n    component_specifications: Component specifications\n    input_data: Component input specification\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":910,"docstring":"Convert component specifications to Markdown format."},{"name":"_define_rest_interfaces","lineno":945,"docstring":"Define REST interfaces for components."},{"name":"_define_message_interfaces","lineno":960,"docstring":"Define message interfaces for components."},{"name":"_define_database_interfaces","lineno":975,"docstring":"Define database interfaces for components."},{"name":"_define_event_interfaces","lineno":990,"docstring":"Define event interfaces for components."},{"name":"_specify_external_dependencies","lineno":1005,"docstring":"Specify external dependencies for components."},{"name":"_specify_internal_dependencies","lineno":1019,"docstring":"Specify internal dependencies for components."},{"name":"_specify_infrastructure_dependencies","lineno":1033,"docstring":"Specify infrastructure dependencies for components."},{"name":"_specify_configuration_dependencies","lineno":1047,"docstring":"Specify configuration dependencies for components."}],"docstring":"Main component designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/performance_module.py","name":"PerformanceManager","data":{"name":"PerformanceManager","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/performance_module.py","lineno":15,"bases":[],"methods":[{"name":"__init__","lineno":36,"docstring":"Initialize PerformanceManager.\n\nArgs:\n    max_workers (int): Maximum threads for concurrent execution (default: 10)\n    cache_maxsize (int): Maximum cached responses (default: 128)"},{"name":"_update_metrics","lineno":73,"docstring":"Update performance metrics in a thread-safe manner."},{"name":"_evict_if_needed","lineno":85,"docstring":"Evict oldest cache entry if cache exceeds max size."},{"name":"_make_key","lineno":95,"docstring":"Create a unique key for the input data for caching purposes."},{"name":"clear_cache","lineno":104,"docstring":"Clear the entire response cache."},{"name":"get_metrics","lineno":113,"docstring":"Retrieve a snapshot of current performance metrics, including average latency.\n\nReturns:\n    dict: metrics with fields total_requests, cache_hits, cache_misses, average_latency"},{"name":"submit","lineno":134,"docstring":"Submit a code generation job for concurrent execution.\n\nArgs:\n    input_data: The input to pass into the generator function.\n    generator_fn (callable): Function that generates response. If stream=True,\n                             it must return an iterator of chunks.\n    callback (callable, optional): Function to call with the future when done.\n    stream (bool): Whether to use streaming mode.\n\nReturns:\n    concurrent.futures.Future: Future representing the pending result."},{"name":"_execute","lineno":155,"docstring":"Internal method to handle execution, caching, streaming, and metrics."}],"docstring":"Manages performance optimizations for O3 code generator:\n- In-memory response caching\n- Parallel request processing\n- Streaming support\n- Detailed performance metrics\n\nAttributes:\n    max_workers (int): maximum number of worker threads in the pool\n    cache_maxsize (int): maximum number of entries in the cache\n    _executor (ThreadPoolExecutor): thread pool executor for concurrent tasks\n    _cache (dict): thread-safe in-memory cache mapping keys to responses\n    _cache_lock (Lock): lock for synchronizing cache access\n    _metrics (dict): performance metrics (requests, hits, misses, total_latency)\n    _metrics_lock (Lock): lock for synchronizing metrics updates\n    logger: O3Logger instance for logging","agent_type":"worker"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/self_improvement/run_self_improvement.py","name":"SelfImprovementOrchestrator","data":{"name":"SelfImprovementOrchestrator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/self_improvement/run_self_improvement.py","lineno":28,"bases":[],"methods":[{"name":"__init__","lineno":31,"docstring":"Initialize the orchestrator."},{"name":"run_self_improvement","lineno":41,"docstring":"Run the self-improvement process.\n\nArgs:\n    improvement_type: Type of improvement to run (\"all\" or specific file)"},{"name":"_run_all_improvements","lineno":57,"docstring":"Run all improvement files in sequence."},{"name":"_run_specific_improvement","lineno":62,"docstring":"Run a specific improvement file."},{"name":"_run_improvement_file","lineno":72,"docstring":"Run a specific improvement file."},{"name":"_save_generated_code","lineno":205,"docstring":"Save generated code to a temporary file using shared FileGenerator."},{"name":"_create_backup_if_exists","lineno":224,"docstring":"Create backup of original file if it exists using shared FileGenerator."},{"name":"_apply_improvement","lineno":238,"docstring":"Apply the generated improvement automatically."},{"name":"_validate_improvement","lineno":327,"docstring":"Validate the generated improvement using the validation framework."},{"name":"_sample_func_before","lineno":362,"docstring":"Sample function for before improvement benchmarking."},{"name":"_sample_func_after","lineno":366,"docstring":"Sample function for after improvement benchmarking."},{"name":"_sample_api_test","lineno":370,"docstring":"Sample API test function."},{"name":"_sample_error_func","lineno":374,"docstring":"Sample error function for testing error handling."},{"name":"_is_patch_file","lineno":378,"docstring":"Check if the generated file is a patch (partial file) or complete replacement."},{"name":"_apply_patch_to_file","lineno":411,"docstring":"Apply a patch to an existing file by replacing specific methods."},{"name":"_extract_method_name","lineno":454,"docstring":"Extract the method name from the patch content."},{"name":"_replace_method_in_file","lineno":467,"docstring":"Replace a method in the target file with the patch content."},{"name":"analyze_current_state","lineno":500,"docstring":"Analyze the current state and identify improvement opportunities."},{"name":"_analyze_api_usage","lineno":515,"docstring":"Analyze current API usage patterns."},{"name":"_analyze_security_features","lineno":531,"docstring":"Analyze current security features."},{"name":"_analyze_performance_features","lineno":540,"docstring":"Analyze current performance features."},{"name":"_analyze_logging_features","lineno":549,"docstring":"Analyze current logging features."},{"name":"_analyze_configuration_features","lineno":558,"docstring":"Analyze current configuration features."},{"name":"run_improvement_config","lineno":567,"docstring":"Run an in-memory improvement config and return the result."},{"name":"_restore_backup","lineno":635,"docstring":"Restore backup of the original file if it exists."}],"docstring":"Orchestrates the self-improvement process for the O3 code generator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/self_improvement/validation_framework.py","name":"ValidationFramework","data":{"name":"ValidationFramework","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/config/self_improvement/validation_framework.py","lineno":51,"bases":[],"methods":[{"name":"__init__","lineno":60,"docstring":"Initialize the ValidationFramework and its logger.\n\nArgs:\n    log_file (str): Path to the log file (not directly used; logging is configured globally)."},{"name":"run_check","lineno":70,"docstring":"Run a single validation check and record the result.\n\nArgs:\n    category (str): Name of the validation category.\n    check_callable (Callable[..., bool]): The function performing the check.\n    *args: Positional arguments for the check.\n    expected (str | None): Expected text for diff generation.\n    actual (str | None): Actual text for diff generation.\n    **kwargs: Keyword arguments for the check."},{"name":"log_failure","lineno":120,"docstring":"Log detailed failure information for a validation category.\n\nArgs:\n    category (str): The failed validation category.\n    details (dict[str, Any]): Contains error_message, stack_trace, and code_diff."},{"name":"run_all_checks","lineno":135,"docstring":"Execute all provided validation checks sequentially.\n\nArgs:\n    checks (dict[str, Callable[..., bool]]): Mapping of category names to check callables.\n\nReturns:\n    dict[str, Any]: Aggregated report of all check results."},{"name":"run_all_validations","lineno":150,"docstring":"Perform a comprehensive suite of validations on generated code including alignment checks.\n\nArgs:\n    code (str): Source code to validate.\n    func_before (Callable[..., Any]): Function to test pre-improvement behavior.\n    func_after (Callable[..., Any]): Function to test post-improvement behavior.\n    api_test (Callable[..., Any]): Function that tests API functionality.\n    error_test (Callable[..., Any]): Function that should raise an error for handling tests.\n\nReturns:\n    dict[str, Any]: Detailed results for each validation category."},{"name":"_validate_alignment","lineno":327,"docstring":"Validate code against alignment scanner rules.\n\nArgs:\n    code (str): Source code to validate.\n\nReturns:\n    dict[str, Any]: Alignment validation results."}],"docstring":"A framework for running validation checks on generated code with detailed diagnostics.\n\nAttributes:\n    logger (Any): An O3Logger instance for logging messages.\n    report (dict[str, Any]): Aggregated results of each validation category.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/data_flow_designer.py","name":"DataFlowAnalyzer","data":{"name":"DataFlowAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/data_flow_designer.py","lineno":49,"bases":[],"methods":[{"name":"__init__","lineno":52,"docstring":"Initialize the data flow analyzer and its logger."},{"name":"analyze_data_requirements","lineno":56,"docstring":"Analyze data flow requirements and extract design insights.\n\nArgs:\n    data_requirements: Raw textual requirements describing data flows.\n    system_architecture: Contextual system architecture details.\n\nReturns:\n    A dictionary containing extracted analysis insights."},{"name":"_extract_data_sources","lineno":87,"docstring":"Extract data sources from requirements."},{"name":"_extract_data_destinations","lineno":120,"docstring":"Extract data destinations from requirements."},{"name":"_extract_data_transformations","lineno":147,"docstring":"Extract data transformation requirements."},{"name":"_analyze_data_volume","lineno":174,"docstring":"Analyze data volume characteristics."},{"name":"_analyze_data_velocity","lineno":187,"docstring":"Analyze data velocity characteristics."},{"name":"_analyze_data_variety","lineno":200,"docstring":"Analyze data variety characteristics."},{"name":"_extract_integration_patterns","lineno":213,"docstring":"Extract integration patterns from requirements."},{"name":"_extract_data_quality_requirements","lineno":230,"docstring":"Extract data quality requirements."},{"name":"_extract_data_security_requirements","lineno":243,"docstring":"Extract data security requirements."}],"docstring":"Performs analysis of data flow requirements to identify dependencies and design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/database_schema_generator.py","name":"DatabaseSchemaGenerator","data":{"name":"DatabaseSchemaGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/database_schema_generator.py","lineno":53,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the DatabaseSchemaGenerator.\n\nArgs:\n    config_path: Optional path to configuration file."},{"name":"_create_directories","lineno":88,"docstring":"Create necessary directories for output and logs."},{"name":"generate_schema","lineno":113,"docstring":"Generate comprehensive database schema.\n\nArgs:\n    input_data: Input data for database schema generation.\n\nReturns:\n    DatabaseSpecOutput containing generated database schema."},{"name":"_build_prompt","lineno":172,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for database schema generation.\n\nReturns:\n    Formatted prompt string."},{"name":"_save_schema_files","lineno":194,"docstring":"Save database schema files in the specified format.\n\nArgs:\n    schema: The database schema data to save.\n    fmt: The format to save in.\n    base_name: Base filename for the output.\n\nReturns:\n    List of generated file paths."},{"name":"_convert_to_sql","lineno":246,"docstring":"Convert database schema to SQL format.\n\nArgs:\n    schema: Database schema dictionary.\n\nReturns:\n    SQL string."},{"name":"define_tables","lineno":310,"docstring":"Define database tables based on data models.\n\nArgs:\n    data_models: Data models dictionary.\n\nReturns:\n    List of table definitions."},{"name":"specify_relationships","lineno":348,"docstring":"Specify relationships between database tables.\n\nArgs:\n    tables: List of table definitions.\n\nReturns:\n    List of relationship specifications."},{"name":"generate_migrations","lineno":388,"docstring":"Generate database migration scripts.\n\nArgs:\n    schema: Database schema dictionary.\n\nReturns:\n    List of migration scripts."}],"docstring":"Generates database schemas based on provided configurations and manages schema-related operations.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    config_manager: ConfigManager for loading configurations.\n    client: OpenAI client for API calls.\n    directory_manager: DirectoryManager for filesystem operations.\n    file_generator: FileGenerator for writing files.\n    input_loader: UniversalInputLoader for loading input data.\n    output_formatter: OutputFormatter for formatting outputs.\n    prompt_builder: PromptBuilder for building prompts.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/dependency_analyzer.py","name":"DependencyAnalyzer","data":{"name":"DependencyAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/dependency_analyzer.py","lineno":568,"bases":[],"methods":[{"name":"__init__","lineno":571,"docstring":"Initialize with configuration."},{"name":"_setup_directories","lineno":589,"docstring":"Create necessary directories."},{"name":"analyze_project","lineno":597,"docstring":"Analyze project dependencies.\n\nArgs:\n    input_data: Dependency analysis input data\n\nReturns:\n    Dependency analysis output with results"},{"name":"_parse_project_dependencies","lineno":653,"docstring":"Parse all dependency files in the project.\n\nArgs:\n    project_path: Path to the project\n\nReturns:\n    Dictionary containing all dependencies"},{"name":"_generate_analysis_report","lineno":690,"docstring":"Generate comprehensive analysis report.\n\nArgs:\n    dependencies: Parsed dependencies\n    vulnerabilities: Found vulnerabilities\n    optimization: Optimization analysis\n    input_data: Input data\n\nReturns:\n    Analysis report"},{"name":"_save_analysis_report","lineno":729,"docstring":"Save analysis report to file.\n\nArgs:\n    report: Analysis report\n    project_path: Project path\n\nReturns:\n    Path to saved report"},{"name":"_get_current_timestamp","lineno":747,"docstring":"Get current timestamp string."}],"docstring":"Main class for dependency analysis.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/docker_orchestrator.py","name":"DockerAnalyzer","data":{"name":"DockerAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/docker_orchestrator.py","lineno":61,"bases":[],"methods":[{"name":"__init__","lineno":64,"docstring":null},{"name":"analyze_application","lineno":67,"docstring":"Analyze application to determine Docker requirements.\n\nArgs:\n    app_path: Path to the application\n\nReturns:\n    Dictionary containing application analysis"},{"name":"_extract_python_dependencies","lineno":138,"docstring":"Extract Python dependencies from requirements.txt."},{"name":"_extract_node_dependencies","lineno":165,"docstring":"Extract Node.js dependencies from package.json."},{"name":"_extract_java_dependencies","lineno":183,"docstring":"Extract Java dependencies from pom.xml."},{"name":"_extract_go_dependencies","lineno":202,"docstring":"Extract Go dependencies from go.mod."},{"name":"_detect_framework","lineno":227,"docstring":"Detect the framework used in the application."},{"name":"_detect_entry_point","lineno":288,"docstring":"Detect the entry point for the application."},{"name":"_analyze_config_files","lineno":351,"docstring":"Analyze configuration files for ports, environment variables, etc."}],"docstring":"Analyze application requirements to determine optimal Docker configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/docker_orchestrator.py","name":"DockerOrchestrator","data":{"name":"DockerOrchestrator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/docker_orchestrator.py","lineno":450,"bases":[],"methods":[{"name":"__init__","lineno":453,"docstring":"Initialize the Docker orchestrator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":470,"docstring":"Create necessary output directories."},{"name":"generate_docker_configuration","lineno":479,"docstring":"Generate comprehensive Docker configuration.\n\nArgs:\n    input_data: Input data containing application path and configuration\n\nReturns:\n    DockerOutput containing generated configuration and file paths"},{"name":"_generate_with_o3_model","lineno":532,"docstring":"Generate Docker configuration using OpenAI's O3 model with current API standards.\n\nArgs:\n    input_data: Input data containing configuration\n    app_info: Analyzed application information\n\nReturns:\n    Generated Docker configuration dictionary"},{"name":"_build_prompt","lineno":590,"docstring":"Build comprehensive prompt for Docker configuration generation.\n\nArgs:\n    input_data: Input data containing configuration\n    app_info: Analyzed application information\n\nReturns:\n    Formatted prompt string"},{"name":"_create_docker_files","lineno":635,"docstring":"Create Docker configuration files.\n\nArgs:\n    docker_config: Generated Docker configuration\n    input_data: Input data containing configuration\n\nReturns:\n    List of created file paths"},{"name":"_generate_dockerfile","lineno":705,"docstring":"Generate Dockerfile content."},{"name":"_generate_multi_stage_dockerfile","lineno":714,"docstring":"Generate multi-stage Dockerfile."},{"name":"_generate_single_stage_dockerfile","lineno":720,"docstring":"Generate single-stage Dockerfile."},{"name":"_generate_dockerignore","lineno":726,"docstring":"Generate .dockerignore file."},{"name":"_generate_orchestration_files","lineno":732,"docstring":"Generate orchestration files (docker-compose, kubernetes)."},{"name":"_generate_docker_compose","lineno":762,"docstring":"Generate docker-compose.yml configuration."},{"name":"_generate_kubernetes_manifest","lineno":787,"docstring":"Generate Kubernetes deployment manifest."},{"name":"_generate_security_scripts","lineno":828,"docstring":"Generate security scanning scripts."},{"name":"_generate_security_scan_script","lineno":851,"docstring":"Generate security scanning script."},{"name":"_generate_build_script","lineno":857,"docstring":"Generate build script."}],"docstring":"Generate comprehensive Docker configuration using OpenAI's O3 models.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","name":"OpenAIConfig","data":{"name":"OpenAIConfig","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","lineno":24,"bases":[],"methods":[],"docstring":"Configuration parameters for the OpenAI API call.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","name":"PromptExpander","data":{"name":"PromptExpander","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/enhanced_prompt_expansion_generator.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":null},{"name":"_validate_api_key","lineno":44,"docstring":"Ensure that the OPENAI_API_KEY environment variable is set."},{"name":"expand","lineno":53,"docstring":"Expand a prompt intelligently using the specified OpenAI model.\n\nArgs:\n    prompt: The user prompt to expand.\n    context: Optional additional context to improve expansion quality.\n\nReturns:\n    The expanded prompt as a string."},{"name":"_parse_response","lineno":107,"docstring":"Extract the content string from OpenAI's ChatCompletion response."}],"docstring":"Service for expanding prompts using OpenAI's O3 model.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/feasibility_assessor.py","name":"FeasibilityProcessor","data":{"name":"FeasibilityProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/feasibility_assessor.py","lineno":391,"bases":[],"methods":[{"name":"__init__","lineno":394,"docstring":"Initialize the FeasibilityProcessor with configuration and utilities.\n\nArgs:\n    config_path (str | None): Path to configuration file"},{"name":"_create_directories","lineno":425,"docstring":"Create necessary output directories."},{"name":"run_feasibility_assessment","lineno":434,"docstring":"Run feasibility assessment using O3 models.\n\nArgs:\n    input_data: Structured input data for feasibility assessment\n\nReturns:\n    FeasibilityOutput containing assessment results"},{"name":"_calculateoverall_feasibility","lineno":525,"docstring":"Calculate overall feasibility based on individual assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    Overall feasibility level"},{"name":"_generaterecommendations","lineno":571,"docstring":"Generate recommendations based on feasibility assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    List of recommendations"},{"name":"_identifyrisks","lineno":615,"docstring":"Identify risks based on feasibility assessments.\n\nArgs:\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n\nReturns:\n    List of identified risks"},{"name":"_generate_with_o3_model","lineno":677,"docstring":"Generate enhanced feasibility assessment using O3 model.\n\nArgs:\n    input_data: Input data for feasibility assessment\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n    overall_feasibility: Overall feasibility level\n    recommendations: Generated recommendations\n    risks: Identified risks\n\nReturns:\n    Enhanced feasibility assessment results"},{"name":"_build_prompt","lineno":749,"docstring":"Build prompt for O3 model feasibility assessment.\n\nArgs:\n    input_data: Input data for feasibility assessment\n    technical_feasibility: Technical feasibility results\n    economic_feasibility: Economic feasibility results\n    operational_feasibility: Operational feasibility results\n    overall_feasibility: Overall feasibility level\n    recommendations: Generated recommendations\n    risks: Identified risks\n\nReturns:\n    Formatted prompt string"},{"name":"_extract_insights_from_text","lineno":783,"docstring":"Extract insights from text response when JSON parsing fails.\n\nArgs:\n    text: Text response from O3 model\n\nReturns:\n    Dictionary of extracted insights"},{"name":"_create_feasibility_files","lineno":816,"docstring":"Create output files for feasibility assessment.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":859,"docstring":"Convert feasibility assessment results to Markdown format.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    Markdown formatted string"},{"name":"_convert_to_html","lineno":907,"docstring":"Convert feasibility assessment results to HTML format.\n\nArgs:\n    feasibility_assessment: Feasibility assessment results\n    input_data: Input data for assessment\n\nReturns:\n    HTML formatted string"}],"docstring":"Main processor for feasibility assessment using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/git_hooks/post-commit-auto-align.py","name":"SmartAutoAlignmentHook","data":{"name":"SmartAutoAlignmentHook","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/git_hooks/post-commit-auto-align.py","lineno":46,"bases":[],"methods":[{"name":"__init__","lineno":49,"docstring":"Initialize the smart auto-alignment hook."},{"name":"_find_project_root","lineno":68,"docstring":"Find the project root directory."},{"name":"_get_committed_files","lineno":81,"docstring":"Get files that were committed in the last commit."},{"name":"_get_related_files","lineno":104,"docstring":"Get files that might be affected by the committed changes."},{"name":"_load_alignment_cache","lineno":141,"docstring":"Load the alignment cache to avoid re-aligning recently aligned files."},{"name":"_save_alignment_cache","lineno":157,"docstring":"Save the alignment cache."},{"name":"_load_alignment_session","lineno":169,"docstring":"Load the current alignment session."},{"name":"_save_alignment_session","lineno":193,"docstring":"Save the alignment session."},{"name":"_clear_alignment_session","lineno":205,"docstring":"Clear the alignment session."},{"name":"_check_recursive_loop","lineno":219,"docstring":"Check if we're in a recursive loop."},{"name":"_detect_alignment_needs","lineno":232,"docstring":"Check if a file needs alignment without making changes."},{"name":"_align_file","lineno":260,"docstring":"Align a single file using the enhanced auto-align system."},{"name":"_commit_alignment_changes","lineno":315,"docstring":"Commit alignment changes in a separate commit."},{"name":"run","lineno":351,"docstring":"Run the post-commit auto-alignment hook."}],"docstring":"Post-commit hook for intelligent auto-alignment.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/git_hooks/pre-commit-auto-rules.py","name":"AutoRulesPreCommitHook","data":{"name":"AutoRulesPreCommitHook","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/git_hooks/pre-commit-auto-rules.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":47,"docstring":"Initialize the pre-commit hook."},{"name":"_find_project_root","lineno":67,"docstring":"Find the project root directory (where .git is located)."},{"name":"_get_staged_files","lineno":80,"docstring":"Get list of staged files for the current commit."},{"name":"_is_relevant_file","lineno":103,"docstring":"Check if a file is relevant for rule regeneration."},{"name":"_has_relevant_changes","lineno":134,"docstring":"Check if any staged files are relevant for rule regeneration."},{"name":"_run_auto_rules_generation","lineno":143,"docstring":"Run the auto rules generation system."},{"name":"_stage_updated_rules","lineno":169,"docstring":"Stage any updated rule files."},{"name":"run","lineno":208,"docstring":"Run the pre-commit hook."}],"docstring":"Pre-commit hook for intelligent auto rules generation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","name":"IdeaFormationAnalyzer","data":{"name":"IdeaFormationAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","lineno":326,"bases":[],"methods":[{"name":"__init__","lineno":329,"docstring":"Initialize the idea formation analyzer.\nAttributes:\n    logger: Logger instance for this class"},{"name":"analyze_concept","lineno":337,"docstring":"Analyze a concept for clarity, completeness, and potential.\n\nArgs:\n    concept_description: Natural language description of the concept\n    target_market: Optional target market information\n\nReturns:\n    Dictionary containing concept analysis results"},{"name":"validate_idea","lineno":381,"docstring":"Validate an idea for market fit and viability.\n\nArgs:\n    concept_description: Natural language description of the concept\n    target_market: Optional target market information\n\nReturns:\n    Dictionary containing validation results"},{"name":"refine_concept","lineno":421,"docstring":"Refine a concept based on analysis and feedback.\n\nArgs:\n    concept_description: Original concept description\n    feedback: Optional feedback for refinement\n\nReturns:\n    Dictionary containing refined concept and improvements"},{"name":"assess_feasibility","lineno":457,"docstring":"Assess the feasibility of implementing a concept.\n\nArgs:\n    concept_description: Natural language description of the concept\n\nReturns:\n    Dictionary containing feasibility assessment"},{"name":"_analyze_concept_clarity","lineno":492,"docstring":null},{"name":"_analyze_concept_completeness","lineno":498,"docstring":null},{"name":"_analyze_concept_potential","lineno":508,"docstring":null},{"name":"_validate_market_fit","lineno":516,"docstring":null},{"name":"_assess_viability","lineno":524,"docstring":null},{"name":"_analyze_uniqueness","lineno":530,"docstring":null},{"name":"_generate_refined_concept","lineno":536,"docstring":null},{"name":"_identify_improvements","lineno":541,"docstring":null},{"name":"_assess_technical_feasibility","lineno":548,"docstring":null},{"name":"_assess_economic_feasibility","lineno":554,"docstring":null},{"name":"_assess_operational_feasibility","lineno":560,"docstring":null}],"docstring":"Analyzes concepts and ideas for formation and development.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","name":"IdeaFormationProcessor","data":{"name":"IdeaFormationProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/idea_formation_analyzer.py","lineno":569,"bases":[],"methods":[{"name":"__init__","lineno":572,"docstring":"Initialize the idea formation processor.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":607,"docstring":"Create necessary output directories."},{"name":"analyze_idea_formation","lineno":624,"docstring":"Analyze idea formation using O3 models.\n\nArgs:\n    input_data: Structured input data for analysis\n\nReturns:\n    IdeaFormationOutput containing analysis results"},{"name":"_generate_with_o3_model","lineno":694,"docstring":"Generate enhanced analysis using O3 model.\n\nArgs:\n    input_data: Input data for analysis\n    idea_analysis: Initial analysis results\n\nReturns:\n    Enhanced analysis results"},{"name":"_perform_market_research","lineno":735,"docstring":"Perform market research analysis.\n\nArgs:\n    input_data: Input data containing concept and target market\n\nReturns:\n    Market research results"}],"docstring":"Main processor for idea formation analysis using O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/integrated_o3_analyzer.py","name":"IntegratedO3Analyzer","data":{"name":"IntegratedO3Analyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/integrated_o3_analyzer.py","lineno":27,"bases":[],"methods":[{"name":"__init__","lineno":38,"docstring":"Initialize the analyzer with logger, formatter, file generator, and directory manager."},{"name":"parse_arguments","lineno":48,"docstring":"Parse command-line arguments for the code generation input.\n\nReturns:\n    argparse.Namespace: Parsed arguments including target_file, improvements, user_guidance, and output."},{"name":"get_input","lineno":87,"docstring":"Prompt the user for input via the command line.\n\nArgs:\n    prompt_text: The prompt to display to the user.\n\nReturns:\n    The user input string.\n\nRaises:\n    SystemExit: If no input is received (EOF)."},{"name":"build_input_dict","lineno":110,"docstring":"Build the code generation input dictionary.\n\nArgs:\n    target_file: Target file name.\n    improvements: Description of improvements.\n    user_guidance: Additional user guidance.\n\nReturns:\n    A dictionary conforming to the CodeGenerationInput schema."},{"name":"validate_input","lineno":131,"docstring":"Validate that the input contains necessary information.\n\nArgs:\n    data: The input data dictionary.\n\nRaises:\n    ValueError: If required fields are missing or empty."},{"name":"run","lineno":150,"docstring":"Execute the main logic: parse arguments, collect input, validate, format, and save JSON."}],"docstring":"Class to generate and save CodeGenerationInput JSON files using shared O3 utilities.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    output_formatter: Instance of OutputFormatter for formatting data.\n    file_generator: Instance of FileGenerator for writing files.\n    directory_manager: Instance of DirectoryManager for directory operations.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/integration_spec_generator.py","name":"IntegrationSpecGenerator","data":{"name":"IntegrationSpecGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/integration_spec_generator.py","lineno":69,"bases":[],"methods":[{"name":"__init__","lineno":72,"docstring":"Initialize the IntegrationSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":91,"docstring":"Create necessary directories for the generator."},{"name":"define_integrations","lineno":106,"docstring":"Define comprehensive integration specifications.\n\nArgs:\n    input_data: Input data for integration specification generation\n\nReturns:\n    IntegrationSpecOutput containing generated integration specifications"},{"name":"_build_prompt","lineno":199,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for integration specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"_save_integration_files","lineno":220,"docstring":"Save integration specification files in the specified format.\n\nArgs:\n    integration_specs: The integration specification data to save\n    output_format: The format to save in\n    base_filename: Base filename for the output\n\nReturns:\n    List of generated file paths"},{"name":"_convert_to_markdown","lineno":276,"docstring":"Convert integration specifications to Markdown format."},{"name":"specify_protocols","lineno":359,"docstring":"Specify integration protocols for external services.\n\nArgs:\n    external_services: List of external services to integrate with\n    requirements: Integration requirements\n\nReturns:\n    Dictionary containing protocol specifications"},{"name":"generate_connectors","lineno":390,"docstring":"Generate connector specifications for integrations.\n\nArgs:\n    integration_specs: Integration specifications\n\nReturns:\n    List of connector specifications"},{"name":"validate_integrations","lineno":420,"docstring":"Validate integration specifications for consistency and completeness.\n\nArgs:\n    integration_specs: Integration specifications to validate\n\nReturns:\n    Dictionary containing validation results"}],"docstring":"Main integration specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/intelligent_o3_analyzer.py","name":"IntelligentFileAnalyzer","data":{"name":"IntelligentFileAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/intelligent_o3_analyzer.py","lineno":92,"bases":[],"methods":[{"name":"__init__","lineno":110,"docstring":null},{"name":"_serialize_for_json","lineno":135,"docstring":"Recursively convert Path objects to str for JSON serialization."},{"name":"analyze_file","lineno":148,"docstring":"Analyze a single file and return improvement suggestions as a dict."},{"name":"process_file","lineno":273,"docstring":"Process a single file: analyze and display or save improvements."},{"name":"process_paths","lineno":323,"docstring":"Process a list of file or directory paths."}],"docstring":"Intelligent File Analyzer using the O3 model.\n\nAttributes:\n    mode: 'analysis' or 'full'.\n    filters: list of improvement types to include or None.\n    loader: UniversalInputLoader instance.\n    directory_manager: DirectoryManager instance.\n    formatter: OutputFormatter instance.\n    file_generator: FileGenerator instance.\n    generator: O3CodeGenerator instance.\n    improvement_dir: Path to save improvement files.\n    max_retries: maximum retry attempts for model generation.\n    retry_delay: delay in seconds between retries.\n    logger: O3Logger instance.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/interface_designer.py","name":"InterfaceAnalyzer","data":{"name":"InterfaceAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/interface_designer.py","lineno":54,"bases":[],"methods":[{"name":"__init__","lineno":57,"docstring":"Initialize the interface analyzer."},{"name":"analyze_interface_requirements","lineno":61,"docstring":"Analyze interface requirements and extract design insights.\n\nArgs:\n    interface_requirements: Natural language interface requirements\n    component_specifications: Component specifications\n\nReturns:\n    Dictionary containing interface analysis"},{"name":"_analyze_interface_patterns","lineno":115,"docstring":"Analyze interface patterns from requirements."},{"name":"_extract_protocol_requirements","lineno":144,"docstring":"Extract protocol requirements from interface requirements."},{"name":"_extract_authentication_requirements","lineno":157,"docstring":"Extract authentication requirements from interface requirements."},{"name":"_extract_documentation_requirements","lineno":170,"docstring":"Extract documentation requirements from interface requirements."},{"name":"_analyze_performance_requirements","lineno":181,"docstring":"Analyze performance requirements from interface requirements."},{"name":"_analyze_security_requirements","lineno":190,"docstring":"Analyze security requirements from interface requirements."},{"name":"_extract_compatibility_requirements","lineno":199,"docstring":"Extract compatibility requirements."},{"name":"_estimate_complexity","lineno":205,"docstring":"Estimate interface complexity."}],"docstring":"Analyzes interface requirements and generates design insights.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/interface_designer.py","name":"InterfaceDesigner","data":{"name":"InterfaceDesigner","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/interface_designer.py","lineno":293,"bases":[],"methods":[{"name":"__init__","lineno":296,"docstring":"Initialize the interface designer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":320,"docstring":"Create necessary output directories."},{"name":"design_apis","lineno":332,"docstring":"Design comprehensive interface specifications based on requirements.\n\nArgs:\n    input_data: Interface design input specification\n\nReturns:\n    Interface design output with specifications and diagrams"},{"name":"_generate_with_o3_model","lineno":388,"docstring":"Generate interface specifications using O3 model.\n\nArgs:\n    input_data: Interface input data\n    interface_analysis: Interface analysis results\n\nReturns:\n    Generated interface specifications"},{"name":"_build_prompt","lineno":424,"docstring":"Build the prompt for interface design."},{"name":"_parse_structured_response","lineno":454,"docstring":"Parse structured response when JSON parsing fails."},{"name":"_generate_diagrams","lineno":465,"docstring":"Generate interface diagrams."},{"name":"_create_interface_files","lineno":493,"docstring":"Create interface specification files."},{"name":"_convert_to_markdown","lineno":523,"docstring":"Convert interface specifications to Markdown."},{"name":"_generate_openapi_spec","lineno":552,"docstring":"Generate OpenAPI specification."}],"docstring":"Main interface designer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/market_research_integrator.py","name":"MarketResearchProcessor","data":{"name":"MarketResearchProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/market_research_integrator.py","lineno":250,"bases":[],"methods":[{"name":"__init__","lineno":253,"docstring":"Initialize processor: load config, setup logger, create utilities.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_initialize_directories","lineno":303,"docstring":"Ensure required output directories exist."},{"name":"run_market_research","lineno":319,"docstring":"Execute market research steps and generate outputs.\n\nArgs:\n    input_data: Structured input for market research\n\nReturns:\n    MarketResearchOutput with analysis and file paths"}],"docstring":"Orchestrates market research workflow using shared utilities.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/natural_language_enhancement_generator.py","name":"NaturalLanguageEnhancementGenerator","data":{"name":"NaturalLanguageEnhancementGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/natural_language_enhancement_generator.py","lineno":28,"bases":[],"methods":[{"name":"__init__","lineno":33,"docstring":"Initialize utilities and logger."},{"name":"parse_arguments","lineno":42,"docstring":"Parse command line arguments for prompt and mode.\n\nReturns:\n    argparse.Namespace: Parsed arguments with 'prompt' and 'mode' attributes."},{"name":"validate_and_process_prompt","lineno":64,"docstring":"Validate and process the prompt based on the mode.\n\nArgs:\n    prompt (str): The raw input prompt.\n    mode (str): The operational mode ('enhancement' or 'new_code').\n\nReturns:\n    dict[str, str]: Processed data containing 'description' and 'target_file'.\n\nRaises:\n    ValueError: If validation fails."},{"name":"determine_output_path","lineno":114,"docstring":"Determine and ensure the output directory based on the mode.\n\nArgs:\n    mode (str): The operational mode.\n\nReturns:\n    Path: The directory path for output files.\n\nRaises:\n    ValueError: If mode is invalid.\n    Exception: If directory creation fails."},{"name":"generate_output_filename","lineno":149,"docstring":"Generate an output filename based on mode and timestamp.\n\nArgs:\n    mode (str): The operational mode.\n\nReturns:\n    str: Generated filename.\n\nRaises:\n    ValueError: If mode is invalid."},{"name":"create_output_data","lineno":174,"docstring":"Build and validate output data conforming to CodeGenerationInput schema.\n\nArgs:\n    processed_data (dict[str, str]): Contains 'description' and 'target_file'.\n    mode (str): Operational mode.\n    output_dir (Path): Directory where outputs will be placed.\n\nReturns:\n    dict[str, Any]: Validated data ready for serialization.\n\nRaises:\n    Exception: If schema validation fails."},{"name":"write_output_file","lineno":220,"docstring":"Serialize data to JSON and save to a file via FileGenerator.\n\nArgs:\n    output_dir (Path): Directory path for the file.\n    filename (str): Name of the output file.\n    data (dict[str, Any]): Data to serialize.\n\nRaises:\n    Exception: If file saving fails."},{"name":"run","lineno":247,"docstring":"Execute the end-to-end generation pipeline."}],"docstring":"Main class orchestrating the natural language enhancement and new code generation workflow.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/o3_logger/logger.py","name":"O3Logger","data":{"name":"O3Logger","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/o3_logger/logger.py","lineno":36,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":"Initialize the O3 logger.\n\nArgs:\n    config: Logging configuration"},{"name":"_setup_loggers","lineno":76,"docstring":"Setup all loggers with proper configuration."},{"name":"log_configuration_loaded","lineno":149,"docstring":"Log configuration loading event."},{"name":"log_model_selection","lineno":156,"docstring":"Log model selection event."},{"name":"log_api_call_start","lineno":163,"docstring":"Log the start of an API call."},{"name":"log_api_call_success","lineno":170,"docstring":"Log successful API call."},{"name":"log_api_call_error","lineno":179,"docstring":"Log API call error."},{"name":"log_file_generation","lineno":186,"docstring":"Log file generation event."},{"name":"log_file_save","lineno":195,"docstring":"Log file save event."},{"name":"log_validation_error","lineno":205,"docstring":"Log validation errors."},{"name":"log_performance_metric","lineno":212,"docstring":"Log performance metrics."},{"name":"log_user_action","lineno":222,"docstring":"Log user actions."},{"name":"log_system_event","lineno":232,"docstring":"Log system events."},{"name":"log_error","lineno":240,"docstring":"Log errors with full stack trace."},{"name":"log_warning","lineno":249,"docstring":"Log warnings."},{"name":"log_info","lineno":255,"docstring":"Log informational messages."},{"name":"log_debug","lineno":261,"docstring":"Log debug messages."},{"name":"get_correlation_id","lineno":267,"docstring":"Get the current correlation ID."},{"name":"set_correlation_id","lineno":271,"docstring":"Set a new correlation ID."},{"name":"_is_help_mode","lineno":276,"docstring":"Check if we're in help mode (--help flag present)."}],"docstring":"Comprehensive logging system for O3 Code Generator.\n\nProvides:\n- Standard application logging\n- Debug logging with detailed information\n- Error logging with stack traces\n- Performance tracking\n- Structured logging capabilities","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_optimizer.py","name":"CodeAnalyzer","data":{"name":"CodeAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_optimizer.py","lineno":52,"bases":[],"methods":[{"name":"__init__","lineno":55,"docstring":"Initialize CodeAnalyzer.\n\nArgs:\n    client: OpenAI client instance for AI interactions"},{"name":"analyze_code_performance","lineno":66,"docstring":"Analyze code for performance issues across the project.\n\nArgs:\n    project_path: Path to the project directory\n    config: Analysis configuration\n\nReturns:\n    Dictionary of aggregated performance analysis results"},{"name":"_analyze_python_files","lineno":104,"docstring":"Analyze Python files for performance issues.\n\nArgs:\n    files: List of Python file paths\n    config: Analysis configuration\n\nReturns:\n    List of detected issues"},{"name":"_analyze_js_files","lineno":139,"docstring":"Analyze JavaScript/TypeScript files for performance issues.\n\nArgs:\n    files: List of JS/TS file paths\n    config: Analysis configuration\n\nReturns:\n    List of detected issues"},{"name":"_analyze_with_ai","lineno":174,"docstring":"Send analysis prompt to AI and parse response.\n\nArgs:\n    prompt: Full analysis prompt\n    filename: Name of the file being analyzed\n\nReturns:\n    List of issue dictionaries or empty list on failure"},{"name":"_analyze_algorithms","lineno":213,"docstring":"Perform basic algorithm complexity analysis.\n\nReturns:\n    List with algorithm analysis summary"},{"name":"_analyze_complexity","lineno":234,"docstring":"Perform basic code complexity analysis.\n\nReturns:\n    List with complexity analysis summary"}],"docstring":"Analyzes code for performance issues and optimization opportunities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_optimizer.py","name":"OptimizationRecommender","data":{"name":"OptimizationRecommender","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_optimizer.py","lineno":303,"bases":[],"methods":[{"name":"__init__","lineno":306,"docstring":"Initialize OptimizationRecommender.\n\nArgs:\n    client: OpenAI client instance"},{"name":"generate_recommendations","lineno":317,"docstring":"Generate optimization recommendations.\n\nArgs:\n    project_name: Name of the project\n    analysis_results: Results from CodeAnalyzer\n    profiling_results: Results from Profiler\n    config: Optimization configuration\n\nReturns:\n    Recommendations dictionary"},{"name":"_fallback_recommendations","lineno":381,"docstring":"Provide fallback recommendations."}],"docstring":"Generates optimization recommendations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_spec_generator.py","name":"PerformanceSpecGenerator","data":{"name":"PerformanceSpecGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/performance_spec_generator.py","lineno":65,"bases":[],"methods":[{"name":"__init__","lineno":68,"docstring":"Initialize the PerformanceSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":87,"docstring":"Create necessary directories for the generator."},{"name":"define_performance_requirements","lineno":102,"docstring":"Define comprehensive performance specifications.\n\nArgs:\n    input_data: Input data for performance specification generation\n\nReturns:\n    PerformanceSpecOutput containing generated performance specifications"},{"name":"_build_prompt","lineno":193,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for performance specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"_save_performance_files","lineno":228,"docstring":"Save performance specification files in the specified format.\n\nArgs:\n    performance_specs: The performance specification data to save\n    output_format: The format to save in\n    base_filename: Base filename for the output\n\nReturns:\n    List of generated file paths"},{"name":"_convert_to_markdown","lineno":284,"docstring":"Convert performance specifications to Markdown format."},{"name":"specify_benchmarks","lineno":408,"docstring":"Specify performance benchmarks based on requirements and constraints.\n\nArgs:\n    requirements: Performance requirements\n    constraints: Performance constraints\n\nReturns:\n    Dictionary containing benchmark specifications"},{"name":"generate_test_scenarios","lineno":439,"docstring":"Generate performance test scenarios.\n\nArgs:\n    performance_specs: Performance specifications\n\nReturns:\n    List of test scenario specifications"}],"docstring":"Main performance specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/project_initializer.py","name":"ProjectInitializer","data":{"name":"ProjectInitializer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/project_initializer.py","lineno":834,"bases":[],"methods":[{"name":"__init__","lineno":837,"docstring":"Initialize the project initializer.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"initialize_project","lineno":861,"docstring":"Initialize a new project based on the input specifications.\n\nArgs:\n    input_data: Project initialization input specification\n\nReturns:\n    Project initialization output with results"},{"name":"_generate_next_steps","lineno":935,"docstring":"Generate next steps for the user."}],"docstring":"Main project initializer class.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/requirements_analyzer.py","name":"RequirementsProcessor","data":{"name":"RequirementsProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/requirements_analyzer.py","lineno":30,"bases":[],"methods":[{"name":"__init__","lineno":33,"docstring":"Initialize the requirements processor."},{"name":"analyze_requirements","lineno":43,"docstring":"Analyze requirements and return structured output."}],"docstring":"Simple processor for requirements analysis.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_input_schema.py","name":"DockerOrchestratorInput","data":{"name":"DockerOrchestratorInput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_input_schema.py","lineno":43,"bases":["BaseModel"],"methods":[],"docstring":"Input schema for Docker Orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_output_schema.py","name":"DockerOrchestratorOutput","data":{"name":"DockerOrchestratorOutput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/docker_orchestrator_output_schema.py","lineno":12,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for Docker Orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"AnalysisType","data":{"name":"AnalysisType","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":14,"bases":["str","Enum"],"methods":[],"docstring":"Types of analysis available for idea formation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"IdeaFormationOutputFormat","data":{"name":"IdeaFormationOutputFormat","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":23,"bases":["str","Enum"],"methods":[],"docstring":"Available output formats for idea formation tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"BrainstormingInput","data":{"name":"BrainstormingInput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":99,"bases":["BaseModel"],"methods":[],"docstring":"Structured input schema for brainstorming sessions.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","name":"BrainstormingOutput","data":{"name":"BrainstormingOutput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/idea_formation_schemas.py","lineno":131,"bases":["BaseModel"],"methods":[],"docstring":"Structured output schema for brainstorming sessions.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/output_schema.py","name":"CodeGenerationOutput","data":{"name":"CodeGenerationOutput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/output_schema.py","lineno":10,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for code generation responses.\n\nAll fields are required by OpenAI's structured output API to ensure\nthe AI model provides complete, consistent responses every time.\nNo fallbacks needed - the system works correctly on first attempt.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_input_schema.py","name":"RequirementsAnalyzerInput","data":{"name":"RequirementsAnalyzerInput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_input_schema.py","lineno":35,"bases":["BaseModel"],"methods":[],"docstring":"Input schema for Requirements Analyzer.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_output_schema.py","name":"RequirementsAnalyzerOutput","data":{"name":"RequirementsAnalyzerOutput","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/schemas/requirements_analyzer_output_schema.py","lineno":22,"bases":["BaseModel"],"methods":[],"docstring":"Output schema for Requirements Analyzer.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/security_scanner.py","name":"SecurityAnalyzer","data":{"name":"SecurityAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/security_scanner.py","lineno":89,"bases":[],"methods":[{"name":"__init__","lineno":92,"docstring":null},{"name":"analyze_security","lineno":95,"docstring":"Analyze target for security vulnerabilities.\n\nArgs:\n    target_path: Path to the target for analysis\n\nReturns:\n    Dictionary containing security analysis results"},{"name":"_analyze_dependencies","lineno":138,"docstring":"Analyze dependencies for known vulnerabilities."},{"name":"_check_dependency_vulnerability","lineno":202,"docstring":"Check if a dependency has known vulnerabilities."},{"name":"_analyze_configuration","lineno":216,"docstring":"Analyze configuration files for security issues."},{"name":"_analyze_code_security","lineno":284,"docstring":"Analyze code for security vulnerabilities."},{"name":"_analyze_compliance","lineno":364,"docstring":"Analyze for compliance issues (OWASP, GDPR, etc.)."}],"docstring":"Analyze code and dependencies for security vulnerabilities.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/security_scanner.py","name":"SecurityScanner","data":{"name":"SecurityScanner","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/security_scanner.py","lineno":423,"bases":[],"methods":[{"name":"__init__","lineno":431,"docstring":"Initialize the security scanner.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":447,"docstring":"Create necessary output directories."},{"name":"scan_security","lineno":458,"docstring":"Perform comprehensive security scanning.\n\nArgs:\n    input_data: Input data containing target path and configuration\n\nReturns:\n    SecurityOutput containing security scan results"},{"name":"_generate_with_o3_model","lineno":497,"docstring":"Generate security report using OpenAI's O3 model.\n\nArgs:\n    input_data: Input configuration\n    security_info: Security analysis information\n\nReturns:\n    Generated security report"},{"name":"_build_prompt","lineno":563,"docstring":"Build the prompt for the O3 model.\n\nArgs:\n    input_data: Input configuration\n    security_info: Security analysis information\n\nReturns:\n    Formatted prompt string"},{"name":"_create_security_reports","lineno":579,"docstring":"Create security reports from generated configuration.\n\nArgs:\n    security_report: Generated security report\n    input_data: Input configuration\n\nReturns:\n    List of created file paths"},{"name":"_convert_to_markdown","lineno":612,"docstring":"Convert security report to Markdown format."},{"name":"_convert_to_html","lineno":647,"docstring":"Convert security report to HTML format."},{"name":"_generate_remediation_plan","lineno":664,"docstring":"Generate remediation plan files."},{"name":"_generate_remediation_content","lineno":692,"docstring":"Generate remediation plan content."},{"name":"_generate_remediation_script","lineno":715,"docstring":"Generate remediation script content."}],"docstring":"Advanced security scanner using OpenAI's O3 models.\n\nScans code, dependencies, and configurations for security vulnerabilities,\ncompliance issues, and best practices.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/simple_research_script.py","name":"SimpleResearcher","data":{"name":"SimpleResearcher","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/simple_research_script.py","lineno":44,"bases":[],"methods":[{"name":"__init__","lineno":54,"docstring":"Initialize the SimpleResearcher, setting up MCP tool clients.\nRaises ImportError if MCP tools are not available."},{"name":"save_research_report","lineno":210,"docstring":"Save research report to a JSON file.\n\nArgs:\n    report: Research report dictionary.\n    output_dir: Directory to save the report.\n\nReturns:\n    Path to the saved file."}],"docstring":"Represents a basic researcher with methods to conduct and manage research tasks.\n\nAttributes:\n    logger: O3Logger instance for logging.\n    brave_search: Instance of BraveMCPSearch if available, else None.\n    firecrawl_client: Instance of FirecrawlMCPClient if available, else None.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/technical_spec_generator.py","name":"TechnicalSpecGenerator","data":{"name":"TechnicalSpecGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/technical_spec_generator.py","lineno":376,"bases":[],"methods":[{"name":"__init__","lineno":379,"docstring":"Initialize the TechnicalSpecGenerator.\n\nArgs:\n    config_path: Optional path to configuration file"},{"name":"_create_directories","lineno":400,"docstring":"Create necessary directories for the generator."},{"name":"generate_technical_specs","lineno":415,"docstring":"Generate comprehensive technical specifications.\n\nArgs:\n    input_data: Input data for specification generation\n\nReturns:\n    TechnicalSpecOutput containing generated specifications"},{"name":"_build_prompt","lineno":528,"docstring":"Build the prompt for O3 model based on input data.\n\nArgs:\n    input_data: Input data for specification generation\n\nReturns:\n    Formatted prompt string"},{"name":"define_system_requirements","lineno":674,"docstring":"Define system requirements based on architecture and technology stack.\n\nArgs:\n    architecture: System architecture description\n    technology_stack: Technology stack configuration\n\nReturns:\n    Dictionary containing system requirements"},{"name":"specify_implementation_details","lineno":710,"docstring":"Specify detailed implementation details for the technical specifications.\n\nArgs:\n    specifications: Generated technical specifications\n\nReturns:\n    Dictionary containing implementation details"}],"docstring":"Main technical specification generator using OpenAI O3 models.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"ProjectAnalyzer","data":{"name":"ProjectAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":74,"bases":[],"methods":[{"name":"__init__","lineno":77,"docstring":null},{"name":"analyze_project","lineno":80,"docstring":"Analyze project for testing requirements.\n\nArgs:\n    project_path: Path to the project directory\n\nReturns:\n    Dictionary containing project analysis"},{"name":"_detect_project_type","lineno":104,"docstring":"Detect the type of project."},{"name":"_find_existing_tests","lineno":119,"docstring":"Find existing test files in the project."},{"name":"_identify_testable_components","lineno":143,"docstring":"Identify components that need testing."},{"name":"_analyze_dependencies","lineno":182,"docstring":"Analyze project dependencies for testing."},{"name":"_detect_framework_preferences","lineno":203,"docstring":"Detect testing framework preferences."},{"name":"_assess_testing_needs","lineno":236,"docstring":"Assess testing needs for the project."}],"docstring":"Analyzes project structure and requirements for testing configuration.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"TestGenerator","data":{"name":"TestGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":268,"bases":[],"methods":[{"name":"__init__","lineno":271,"docstring":null},{"name":"generate_tests","lineno":275,"docstring":"Generate test files for project components.\n\nArgs:\n    project_name: Name of the project\n    components: Components to test\n    framework: Testing framework to use\n    config: Test generation configuration\n\nReturns:\n    Dictionary containing generated test files"},{"name":"_generate_component_tests","lineno":309,"docstring":"Generate tests for a specific component."},{"name":"_generate_test_filename","lineno":350,"docstring":"Generate test filename based on component and framework."},{"name":"_generate_fallback_tests","lineno":362,"docstring":"Generate fallback tests when AI generation fails."}],"docstring":"Generates test files using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"FrameworkConfigGenerator","data":{"name":"FrameworkConfigGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":373,"bases":[],"methods":[{"name":"__init__","lineno":376,"docstring":null},{"name":"generate_configurations","lineno":380,"docstring":"Generate testing framework configurations.\n\nArgs:\n    project_name: Name of the project\n    analysis: Project analysis results\n    framework: Testing framework\n    config: Configuration settings\n\nReturns:\n    Dictionary containing generated configuration files"},{"name":"_generate_main_config","lineno":421,"docstring":"Generate main configuration file for the testing framework."},{"name":"_get_config_filename","lineno":452,"docstring":"Get configuration filename for the framework."},{"name":"_generate_pytest_conftest","lineno":462,"docstring":"Generate pytest conftest.py file."},{"name":"_generate_jest_config","lineno":468,"docstring":"Generate Jest configuration file."},{"name":"_generate_fallback_config","lineno":474,"docstring":"Generate fallback configuration when AI generation fails."}],"docstring":"Generates testing framework configurations using AI.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","name":"TestingFrameworkGenerator","data":{"name":"TestingFrameworkGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/testing_framework_generator.py","lineno":484,"bases":[],"methods":[{"name":"__init__","lineno":487,"docstring":null},{"name":"generate_testing_framework","lineno":520,"docstring":"Generate comprehensive testing framework for the project.\n\nReturns:\n    TestingFrameworkGeneratorOutput with generated framework"},{"name":"_write_testing_files","lineno":569,"docstring":"Write testing files to the project directory and validate them."}],"docstring":"Main testing framework generator orchestrator.","agent_type":"orchestrator"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/assistants_api_manager.py","name":"AssistantsAPIManager","data":{"name":"AssistantsAPIManager","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/assistants_api_manager.py","lineno":20,"bases":[],"methods":[{"name":"__init__","lineno":28,"docstring":"Initialize the Assistants API Manager.\n\nArgs:\n    api_key: OpenAI API key (defaults to environment variable)\n    model: Model to use for the assistant"},{"name":"create_assistant","lineno":43,"docstring":"Create a new assistant with specified configuration.\n\nArgs:\n    name: Name of the assistant\n    instructions: Instructions for the assistant's behavior\n    tools: List of tools to enable (code_interpreter, file_search, functions)\n\nReturns:\n    Created assistant object"},{"name":"create_thread","lineno":72,"docstring":"Create a new conversation thread.\n\nReturns:\n    Created thread object"},{"name":"add_message","lineno":88,"docstring":"Add a message to the current thread.\n\nArgs:\n    content: Message content\n    role: Message role (user/assistant)\n\nReturns:\n    Created message object"},{"name":"run_assistant","lineno":114,"docstring":"Run the assistant on the current thread.\n\nReturns:\n    Run object"},{"name":"wait_for_run_completion","lineno":136,"docstring":"Wait for a run to complete.\n\nArgs:\n    run: Run to wait for (defaults to current run)\n    timeout: Maximum time to wait in seconds\n\nReturns:\n    Completed run object"},{"name":"get_latest_messages","lineno":170,"docstring":"Get the latest messages from the thread.\n\nArgs:\n    limit: Maximum number of messages to retrieve\n\nReturns:\n    List of messages (most recent first)"},{"name":"get_assistant_response","lineno":194,"docstring":"Get the latest assistant response from the thread.\n\nReturns:\n    Assistant's response text or None if no response"},{"name":"handle_required_action","lineno":213,"docstring":"Handle required actions from the assistant (e.g., function calls).\n\nArgs:\n    run: Run that requires action\n\nReturns:\n    Updated run after handling action"},{"name":"start_conversation","lineno":250,"docstring":"Start a new conversation with the assistant.\n\nArgs:\n    name: Assistant name\n    instructions: Assistant instructions\n    initial_message: First user message\n\nReturns:\n    Assistant's response"},{"name":"continue_conversation","lineno":290,"docstring":"Continue an existing conversation.\n\nArgs:\n    message: User message\n\nReturns:\n    Assistant's response"},{"name":"cleanup","lineno":322,"docstring":"Clean up resources (delete assistant and thread)."}],"docstring":"Manages OpenAI Assistants API for conversational interactions.\n\nThis class provides a high-level interface for creating assistants,\nmanaging threads, and conducting real-time conversations.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/base_processor.py","name":"BaseProcessor","data":{"name":"BaseProcessor","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/base_processor.py","lineno":48,"bases":[],"methods":[{"name":"__init__","lineno":64,"docstring":"Initialize BaseProcessor.\n\nArgs:\n    config_manager: Configuration manager instance.\n    module_name: Name of the module for directory management."},{"name":"process_analysis","lineno":98,"docstring":"Process analysis with standardized workflow.\n\nArgs:\n    input_data: Input data object containing analysis parameters.\n    system_prompt: System prompt for the analysis.\n    output_schema: Pydantic schema for structured output.\n    title: Title for the analysis and output files.\n    instructions: Optional additional instructions.\n    context_files: Optional list of context file paths.\n    output_formats: Optional list of output formats. Defaults to ['json', 'markdown', 'html'].\n\nReturns:\n    Dictionary containing the analysis results and file paths.\n\nRaises:\n    ValueError: If required parameters are missing or invalid.\n    Exception: If processing fails."},{"name":"process_generation","lineno":180,"docstring":"Process code generation with standardized workflow.\n\nArgs:\n    input_data: Input data object containing generation parameters.\n    system_prompt: System prompt for the generation.\n    title: Title for the generation and output files.\n    context: Optional context dictionary for generation.\n    format_instructions: Optional format instructions.\n    context_files: Optional list of context file paths.\n    output_formats: Optional list of output formats. Defaults to ['json', 'markdown'].\n\nReturns:\n    Dictionary containing the generation results and file paths.\n\nRaises:\n    ValueError: If required parameters are missing or invalid.\n    Exception: If processing fails."},{"name":"load_and_validate_input","lineno":268,"docstring":"Load and validate input file.\n\nArgs:\n    file_path: Path to the input file.\n    required_fields: Optional list of required fields to validate.\n\nReturns:\n    Dictionary containing the loaded data.\n\nRaises:\n    ValueError: If file loading or validation fails.\n    Exception: If unexpected errors occur."},{"name":"create_summary_report","lineno":309,"docstring":"Create a summary report in markdown format.\n\nArgs:\n    data: Data to include in the summary report.\n    title: Title for the report.\n\nReturns:\n    Markdown formatted summary report.\n\nRaises:\n    ValueError: If data is not a dictionary or title is empty.\n    Exception: If report generation fails."},{"name":"cleanup_old_files","lineno":344,"docstring":"Clean up old files in the module's output directory.\n\nArgs:\n    days_old: Age threshold in days for file deletion.\n\nRaises:\n    Exception: If cleanup operation fails."},{"name":"_prepare_analysis_context","lineno":387,"docstring":"Prepare analysis context from input data.\n\nArgs:\n    input_data: Input data object.\n\nReturns:\n    Dictionary containing analysis context.\n\nRaises:\n    Exception: If context preparation fails."},{"name":"_load_context_files","lineno":423,"docstring":"Load and concatenate context files for prompt inclusion.\n\nArgs:\n    file_paths: List of file paths to include.\n\nReturns:\n    Concatenated content of all context files.\n\nRaises:\n    Exception: If file reading fails."}],"docstring":"Comprehensive class for centralized processing workflows in the O3 Code Generator.\n\nAttributes:\n    config_manager: Configuration manager instance.\n    logger: O3Logger instance.\n    module_name: Name of the current module for directory management.\n    directory_manager: DirectoryManager instance for filesystem operations.\n    input_loader: UniversalInputLoader instance for loading input files.\n    prompt_builder: PromptBuilder instance for constructing prompts.\n    o3_model_generator: O3ModelGenerator instance for interacting with models.\n    output_formatter: OutputFormatter instance for formatting outputs.\n    file_generator: FileGenerator instance for file creation.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","name":"O3ModelGenerator","data":{"name":"O3ModelGenerator","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","lineno":38,"bases":[],"methods":[{"name":"__init__","lineno":48,"docstring":"Initialize the O3ModelGenerator with API key and model name.\n\nArgs:\n    api_key (Optional[str]): OpenAI API key; if None, fetched from environment variable 'OPENAI_API_KEY'.\n    model (str): Model identifier for the generation. Defaults to 'o4-mini'."},{"name":"generate","lineno":79,"docstring":"Generate a response from the model using the appropriate API.\n\nArgs:\n    messages (list): List of message dicts (role/content)\n    response_format (Optional[Dict[str, Any]]): JSON schema for structured output\n\nReturns:\n    str: Model output (JSON string if requested by prompt)"},{"name":"_ensure_json_string","lineno":165,"docstring":"Helper to ensure the output is a JSON string if possible, else return as-is."},{"name":"generate_stream","lineno":181,"docstring":"Generate a streaming response. This method streams tokens as they are generated.\n\nArgs:\n    messages (List[Dict[str, str]]): List of messages in the conversation.\n    response_format (Optional[Union[str, Dict[str, Any]]]): Expected response format schema or identifier.\n    temperature (float): Sampling temperature.\n    stream_handler (Optional[Any]): A callable that processes each streamed token. Should accept a single argument.\n    **kwargs: Additional arguments to pass to the API call.\n\nRaises:\n    OpenAIError: If there is an error during the API streaming call.\n    Exception: For other unforeseen errors."}],"docstring":"Modernized O3ModelGenerator class using the latest OpenAI Python SDK patterns.\nSupports both ChatCompletions and Responses APIs with structured JSON outputs.\n\nAttributes:\n    api_key (str): OpenAI API key for authentication.\n    model (str): Model name (supports gpt-4.1* and o3* families).","agent_type":"bot"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","name":"OpenAIError","data":{"name":"OpenAIError","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/o3_model_generator.py","lineno":17,"bases":["Exception"],"methods":[],"docstring":"Generic OpenAI error for compatibility.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/prompt_builder.py","name":"PromptBuilder","data":{"name":"PromptBuilder","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/utils/prompt_builder.py","lineno":26,"bases":[],"methods":[{"name":"__init__","lineno":42,"docstring":"Initialize PromptBuilder.\n\nLoads project and universal rules, sets up default prompt templates,\nand maximum prompt length."},{"name":"_load_rules","lineno":58,"docstring":"Load project_rules.md and universal_rules.md into memory.\n\nLogs a warning if either file is missing or unreadable."},{"name":"_prepend_rules","lineno":89,"docstring":"Prepend loaded project and universal rules to the system prompt.\n\nArgs:\n    system_prompt: Original system prompt.\n\nReturns:\n    Combined prompt string with rules at the top."},{"name":"_build_prompt","lineno":111,"docstring":"Generic prompt builder that handles rule injection, formatting, and validation.\n\nArgs:\n    template_key: Key for default_templates to use.\n    input_data: Input data object for the prompt.\n    system_prompt: Base system prompt.\n    template_vars: Additional variables required by the template.\n\nReturns:\n    Formatted prompt string with rules prepended.\n\nRaises:\n    ValueError: If input_data is None."},{"name":"build_analysis_prompt","lineno":171,"docstring":"Build comprehensive prompt for analysis with prepended rules.\n\nArgs:\n    input_data: Input data object containing analysis parameters.\n    analysis_data: Dictionary containing analysis context and results.\n    system_prompt: Base system prompt (cannot be empty).\n    instructions: Optional additional instructions.\n\nReturns:\n    Formatted prompt string for analysis.\n\nRaises:\n    ValueError: If input_data is None or system_prompt is empty."},{"name":"build_generation_prompt","lineno":206,"docstring":"Build prompt for code generation with prepended rules.\n\nArgs:\n    input_data: Input data object containing generation parameters.\n    context: Optional context dictionary for generation.\n    system_prompt: Base system prompt.\n    format_instructions: Optional format instructions.\n\nReturns:\n    Formatted prompt string for code generation.\n\nRaises:\n    ValueError: If input_data is None."},{"name":"validate_prompt_length","lineno":237,"docstring":"Validate prompt length for model limits.\n\nArgs:\n    prompt: Prompt string to validate.\n    max_length: Maximum allowed length (defaults to instance max_prompt_length).\n\nReturns:\n    True if prompt is within length limits, False otherwise."},{"name":"_get_default_templates","lineno":264,"docstring":"Get default prompt templates.\n\nReturns:\n    Dictionary of default prompt templates."}],"docstring":"Centralized prompt construction for O3 models with automatic rule injection.\n\nOn initialization, loads project-specific and universal rules and injects them\nat the top of every system prompt in analysis and generation methods.\n\nAttributes:\n    max_prompt_length: Maximum allowed prompt length.\n    default_templates: Default templates for prompts.\n    project_rules: Contents of project_rules.md or empty string if unavailable.\n    universal_rules: Contents of universal_rules.md or empty string if unavailable.\n    logger: Logger instance.\n    loader: UniversalInputLoader instance.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/validate_with_analyzer.py","name":"ValidateWithAnalyzer","data":{"name":"ValidateWithAnalyzer","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/validate_with_analyzer.py","lineno":25,"bases":[],"methods":[{"name":"__init__","lineno":34,"docstring":"Initialize the validator with logger and analyzer."},{"name":"validate_syntax","lineno":41,"docstring":"Check for syntax errors in a Python file.\n\nArgs:\n    file_path: Path to the Python file to validate.\n\nRaises:\n    SyntaxError: If a syntax error is found in the file.\n    Exception: If there is an error reading the file."},{"name":"run","lineno":66,"docstring":"Run syntax validation and analysis on the specified file.\n\nArgs:\n    file_path_str: String path to the file to process."}],"docstring":"Class to validate Python files using a syntax check and IntelligentFileAnalyzer.\n\nAttributes:\n    logger: O3Logger instance for logging messages.\n    analyzer: IntelligentFileAnalyzer instance for file quality analysis.","agent_type":"analyzer"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/workflow/autonomous_workflow.py","name":"AutonomousWorkflow","data":{"name":"AutonomousWorkflow","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/workflow/autonomous_workflow.py","lineno":18,"bases":[],"methods":[{"name":"__init__","lineno":39,"docstring":"Initialize the autonomous workflow orchestrator.\n\nArgs:\n    output_base_dir: Base directory for workflow outputs"},{"name":"_initialize_step_executors","lineno":54,"docstring":"Initialize step executors for each workflow phase."},{"name":"execute_workflow","lineno":103,"docstring":"Execute the complete autonomous workflow.\n\nArgs:\n    problem_statement: The initial problem to solve\n    enabled_steps: Optional list of steps to execute (defaults to all)\n    workflow_config: Optional configuration for workflow execution\n\nReturns:\n    Completed WorkflowContext with all results"},{"name":"_execute_step","lineno":204,"docstring":"Execute a single workflow step with context.\n\nArgs:\n    step_name: Name of the step to execute\n    context: Current workflow context\n\nReturns:\n    Step output"},{"name":"_execute_brainstorm","lineno":225,"docstring":"Execute brainstorm step with workflow context."},{"name":"_execute_idea_analyze","lineno":265,"docstring":"Execute idea analysis step with automatic best idea selection."},{"name":"_execute_market_research","lineno":300,"docstring":"Execute market research step with workflow context."},{"name":"_execute_feasibility_assess","lineno":395,"docstring":"Execute feasibility assessment step with workflow context."},{"name":"_execute_requirements_analyze","lineno":475,"docstring":"Execute requirements analysis step - SDLC focused, no market research."},{"name":"_format_competitor_info","lineno":551,"docstring":"Format competitor information for requirements context."},{"name":"_extract_technical_reqs","lineno":567,"docstring":"Extract technical requirements from requirements analysis result."},{"name":"_extract_performance_reqs","lineno":578,"docstring":"Extract performance requirements."},{"name":"_extract_security_reqs","lineno":595,"docstring":"Extract security requirements."},{"name":"_extract_scalability_reqs","lineno":612,"docstring":"Extract scalability requirements."},{"name":"_extract_usability_reqs","lineno":623,"docstring":"Extract usability requirements."},{"name":"_extract_reliability_reqs","lineno":640,"docstring":"Extract reliability requirements."},{"name":"_generate_use_cases","lineno":657,"docstring":"Generate use cases from user stories."},{"name":"_execute_tech_spec_generate","lineno":674,"docstring":"Generate technical specifications with real AI (replacing broken generator)."},{"name":"_execute_api_spec_generate","lineno":746,"docstring":"Generate API specification using O3 model (removes logger issues)."},{"name":"_execute_database_generate","lineno":809,"docstring":"Execute database schema generation step with workflow context."},{"name":"_create_placeholder_market_research_result","lineno":868,"docstring":"Create a placeholder market research result when the actual processor fails."},{"name":"_extract_opportunities","lineno":950,"docstring":"Extract market opportunities from analysis."},{"name":"_extract_threats","lineno":978,"docstring":"Extract market threats from analysis."},{"name":"_execute_system_design","lineno":1010,"docstring":"Execute system design step with real AI generation."},{"name":"_format_requirements_list","lineno":1137,"docstring":"Format requirements list for prompts."},{"name":"_format_system_components","lineno":1153,"docstring":"Format system components for prompts."},{"name":"_extract_components_from_text","lineno":1174,"docstring":"Extract system components from text response."},{"name":"_extract_tech_stack_from_text","lineno":1215,"docstring":"Extract technology stack from text response."},{"name":"_extract_components_from_design_text","lineno":1255,"docstring":"Extract detailed components from design text response."},{"name":"_extract_component_name","lineno":1296,"docstring":"Extract component name from text."},{"name":"_extract_component_description","lineno":1316,"docstring":"Extract component description from text."},{"name":"_extract_responsibilities","lineno":1330,"docstring":"Extract component responsibilities from text."},{"name":"_extract_interfaces","lineno":1348,"docstring":"Extract component interfaces from text."},{"name":"_extract_relationships_from_text","lineno":1360,"docstring":"Extract component relationships from text."},{"name":"_extract_user_interfaces_from_text","lineno":1382,"docstring":"Extract user interface specifications from text."},{"name":"_extract_api_interfaces_from_text","lineno":1431,"docstring":"Extract API interface specifications from text."},{"name":"_extract_integration_patterns_from_text","lineno":1462,"docstring":"Extract integration patterns from text."},{"name":"_extract_interface_name","lineno":1483,"docstring":"Extract interface name from line."},{"name":"_extract_ui_components","lineno":1503,"docstring":"Extract UI components from line."},{"name":"_map_api_protocol","lineno":1525,"docstring":"Map API keyword to protocol."},{"name":"_execute_component_design","lineno":1536,"docstring":"Execute component design step with real AI generation."},{"name":"_execute_interface_design","lineno":1685,"docstring":"Execute interface design step with real AI generation."},{"name":"_execute_implementation_plan","lineno":1846,"docstring":"Generate a detailed implementation roadmap using an O3 model."},{"name":"_execute_testing_strategy","lineno":1954,"docstring":"Generate a comprehensive testing strategy using an O3 model."},{"name":"_format_user_stories","lineno":2042,"docstring":"Format user stories for technical specification context."},{"name":"_generate_api_endpoints","lineno":2055,"docstring":"Generate API endpoints based on functional requirements."},{"name":"_generate_api_models","lineno":2110,"docstring":"Generate API models based on data models."},{"name":"_generate_database_tables","lineno":2140,"docstring":"Generate database tables based on API models."},{"name":"_generate_database_relationships","lineno":2171,"docstring":"Generate database relationships."},{"name":"_generate_database_indexes","lineno":2185,"docstring":"Generate database indexes."},{"name":"_map_api_type_to_db_type","lineno":2195,"docstring":"Map API types to database types."},{"name":"_create_placeholder_tech_spec_result","lineno":2207,"docstring":"Create placeholder technical specification result."},{"name":"_create_placeholder_api_spec_result","lineno":2261,"docstring":"Create placeholder API specification result."},{"name":"_create_placeholder_database_result","lineno":2315,"docstring":"Create placeholder database schema result."},{"name":"_placeholder_executor","lineno":2380,"docstring":"Placeholder executor for steps not yet implemented."},{"name":"_generate_workflow_summary","lineno":2396,"docstring":"Generate a comprehensive workflow summary."},{"name":"resume_workflow","lineno":2503,"docstring":"Resume a workflow from a saved context.\n\nArgs:\n    context_file: Path to saved workflow context\n    from_step: Optional step to resume from (defaults to next incomplete step)\n\nReturns:\n    Updated WorkflowContext"},{"name":"get_available_steps","lineno":2580,"docstring":"Get list of all available workflow steps."},{"name":"validate_step_sequence","lineno":2584,"docstring":"Validate and reorder steps according to dependencies.\n\nArgs:\n    steps: List of steps to validate\n\nReturns:\n    Validated and properly ordered step list"}],"docstring":"Orchestrates autonomous execution of the complete code generation workflow.\n\nTakes a single problem statement and executes all phases automatically,\nmanaging context flow between steps and ensuring optimal idea selection.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/workflow/idea_selector.py","name":"BestIdeaSelector","data":{"name":"BestIdeaSelector","file_path":"opsvi/opsvi_opsvi/tools/code_generation/o3_code_generator/workflow/idea_selector.py","lineno":12,"bases":[],"methods":[{"name":"__init__","lineno":24,"docstring":"Initialize the idea selector."},{"name":"select_best_idea","lineno":37,"docstring":"Select the best idea from brainstorm results.\n\nArgs:\n    brainstorm_results: Results from brainstorm step\n    original_problem: The original problem statement\n    selection_criteria: Optional custom weights for criteria\n\nReturns:\n    Tuple of (selected_idea, selection_rationale)"},{"name":"_score_idea","lineno":99,"docstring":"Score an individual idea across all criteria.\n\nArgs:\n    idea: The idea to score\n    original_problem: Original problem statement for alignment scoring\n\nReturns:\n    Dictionary of scores for each criterion (0.0 to 1.0)"},{"name":"_score_feasibility","lineno":120,"docstring":"Score the feasibility of implementing the idea.\n\nConsiders:\n- Implementation complexity\n- Resource requirements\n- Technical difficulty\n- Timeline feasibility"},{"name":"_score_impact","lineno":199,"docstring":"Score the potential impact of the idea.\n\nConsiders:\n- User value\n- Market potential\n- Problem-solving effectiveness\n- Scalability"},{"name":"_score_novelty","lineno":276,"docstring":"Score the novelty and innovation of the idea.\n\nConsiders:\n- Uniqueness\n- Innovation level\n- Creative approach\n- Differentiation"},{"name":"_score_alignment","lineno":351,"docstring":"Score how well the idea aligns with the original problem.\n\nUses keyword matching and semantic similarity to determine alignment."},{"name":"_score_clarity","lineno":391,"docstring":"Score how clearly defined and detailed the idea is.\n\nConsiders:\n- Description completeness\n- Implementation detail\n- Specificity\n- Structure"},{"name":"_generate_selection_rationale","lineno":442,"docstring":"Generate a human-readable rationale for why this idea was selected.\n\nArgs:\n    best_idea_entry: The selected best idea with scores\n    all_scored_ideas: All ideas with their scores\n    original_problem: Original problem statement\n\nReturns:\n    Detailed rationale string"},{"name":"compare_ideas","lineno":543,"docstring":"Compare and rank all ideas with detailed scoring.\n\nArgs:\n    ideas: List of ideas to compare\n    original_problem: Original problem statement\n\nReturns:\n    List of ideas with scores, sorted by total score"}],"docstring":"Intelligent algorithm for automatically selecting the best idea from brainstorm results.\n\nUses a multi-criteria scoring system that considers:\n- Feasibility (ease of implementation)\n- Impact (potential value and reach)\n- Novelty (innovation and uniqueness)\n- Alignment (match with original problem)\n- Clarity (how well-defined the idea is)","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"optimized_critic_implementation.py","name":"CriticConfig","data":{"name":"CriticConfig","file_path":"optimized_critic_implementation.py","lineno":18,"bases":[],"methods":[],"docstring":"Configuration for the optimized critic agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"optimized_critic_implementation.py","name":"OptimizedCriticAgent","data":{"name":"OptimizedCriticAgent","file_path":"optimized_critic_implementation.py","lineno":28,"bases":[],"methods":[{"name":"__init__","lineno":40,"docstring":null},{"name":"start_critic_session","lineno":45,"docstring":"Start a new critic session with reasoning threading."},{"name":"analyze_code_with_structured_feedback","lineno":56,"docstring":"Analyze code with structured JSON feedback using o3 model.\n\nArgs:\n    code: The code to analyze\n    session_id: Session ID for threading\n    iteration: Current iteration number (1-3)\n    previous_feedback: Previous feedback to build upon\n\nReturns:\n    Structured JSON feedback with concrete fixes"},{"name":"_build_iteration_prompt","lineno":160,"docstring":"Build iteration-specific prompt for systematic analysis."},{"name":"get_session_summary","lineno":253,"docstring":"Get summary of critic session performance."},{"name":"_calculate_performance_rating","lineno":280,"docstring":"Calculate critic performance rating."},{"name":"validate_fixes","lineno":296,"docstring":"Validate that provided fixes are implementable."},{"name":"_is_fix_valid","lineno":315,"docstring":"Check if a fix is valid and implementable."}],"docstring":"Optimized critic agent using o3 model with structured JSON output.\n\nKey improvements:\n- Structured JSON output for machine-readable feedback\n- Severity-based iteration approach\n- Concrete evidence collection\n- Reasoning threading for o3 model\n- Accountability tracking","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"optimized_main_agent.py","name":"AgentConfig","data":{"name":"AgentConfig","file_path":"optimized_main_agent.py","lineno":21,"bases":[],"methods":[],"docstring":"Configuration for the optimized main agent.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"optimized_main_agent.py","name":"OptimizedMainAgent","data":{"name":"OptimizedMainAgent","file_path":"optimized_main_agent.py","lineno":32,"bases":[],"methods":[{"name":"__init__","lineno":35,"docstring":null},{"name":"_get_python_grammar","lineno":59,"docstring":"Get a simplified Python grammar for syntax validation."},{"name":"_build_optimized_prompt","lineno":84,"docstring":"Build optimized prompt based on task type and GPT-5 best practices."},{"name":"_get_verbosity_for_task","lineno":144,"docstring":"Determine optimal verbosity based on task type."},{"name":"_get_reasoning_effort_for_task","lineno":156,"docstring":"Determine optimal reasoning effort based on task type and complexity."},{"name":"start_conversation","lineno":176,"docstring":"Start a new conversation thread."},{"name":"continue_conversation","lineno":185,"docstring":"Continue a conversation thread using previous_response_id for stateful context.\n\nThis leverages GPT-5's threading capability to maintain context without\nre-sending the entire conversation history."},{"name":"generate_code","lineno":282,"docstring":"Generate code using optimized GPT-5 parameters.\n\nArgs:\n    task: The coding task to complete\n    context: Additional context or requirements\n    task_type: Type of task (code_generation, bug_fix, refactoring, etc.)\n    complexity: Task complexity (low, medium, high)\n    session_id: Optional session ID for threading\n\nReturns:\n    Dict with generated code, metadata, and performance metrics"},{"name":"_generate_single_shot","lineno":313,"docstring":"Generate code in a single shot without threading."},{"name":"_estimate_cost","lineno":374,"docstring":"Estimate cost based on model and token count."},{"name":"validate_code_syntax","lineno":386,"docstring":"Validate code syntax using CFG."},{"name":"execute_code","lineno":418,"docstring":"Execute code using free-form function calling."}],"docstring":"Optimized main agent using GPT-5 new parameters and tools.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"real_research_assistant.py","name":"RealResearchAssistant","data":{"name":"RealResearchAssistant","file_path":"real_research_assistant.py","lineno":19,"bases":[],"methods":[{"name":"__init__","lineno":22,"docstring":null},{"name":"_parse_arxiv_response","lineno":131,"docstring":"Parse real ArXiv API response."},{"name":"_parse_pubmed_response","lineno":170,"docstring":"Parse real PubMed API response."}],"docstring":"Real Research Assistant that actually works with OPSVI ecosystem.","agent_type":"assistant"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"scripts/generate_agents_components.py","name":"AgentsComponentGenerator","data":{"name":"AgentsComponentGenerator","file_path":"scripts/generate_agents_components.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":null},{"name":"_load_templates","lineno":18,"docstring":"Load template strings."},{"name":"generate_component","lineno":366,"docstring":"Generate a component file."},{"name":"write_file","lineno":375,"docstring":"Write content to file."},{"name":"generate_all_core","lineno":382,"docstring":"Generate all core files."},{"name":"generate_all_workflows","lineno":397,"docstring":"Generate all workflow files."},{"name":"generate_all_orchestration","lineno":412,"docstring":"Generate all orchestration files."},{"name":"generate_all_memory","lineno":427,"docstring":"Generate all memory files."},{"name":"generate_all_communication","lineno":442,"docstring":"Generate all communication files."},{"name":"generate_all_planning","lineno":456,"docstring":"Generate all planning files."},{"name":"generate_all_learning","lineno":470,"docstring":"Generate all learning files."},{"name":"generate_all_testing","lineno":484,"docstring":"Generate all testing files."}],"docstring":"Generates agent components from templates.","agent_type":"general"},"valid":true}
{"type":"collector_item","parent_collector":"AgentArchitectureCollector","item_type":"agent_class","file_path":"scripts/generate_remaining_rag.py","name":"RemainingRAGGenerator","data":{"name":"RemainingRAGGenerator","file_path":"scripts/generate_remaining_rag.py","lineno":11,"bases":[],"methods":[{"name":"__init__","lineno":14,"docstring":null},{"name":"_load_templates","lineno":18,"docstring":"Load template strings."},{"name":"generate_component","lineno":289,"docstring":"Generate a component file."},{"name":"write_file","lineno":298,"docstring":"Write content to file."},{"name":"generate_all_retrieval","lineno":305,"docstring":"Generate all retrieval files."},{"name":"generate_all_indexing","lineno":321,"docstring":"Generate all indexing files."},{"name":"generate_all_pipelines","lineno":336,"docstring":"Generate all pipeline files."},{"name":"generate_all_analytics","lineno":351,"docstring":"Generate all analytics files."},{"name":"generate_all_quality","lineno":365,"docstring":"Generate all quality assessment files."},{"name":"generate_all_cache","lineno":379,"docstring":"Generate all cache files."}],"docstring":"Generates remaining RAG components from templates.","agent_type":"general"},"valid":true}
