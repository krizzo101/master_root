# PROJECT MAP - AI AGENT OPTIMIZED
# ===============================
# Comprehensive project analysis for AI agents
# Generated by genfilemap utility
#
# AGENT USAGE:
# - project_structure: File organization and type distribution
# - entry_points: Application entry points and CLI interface
# - statistics: Overall code metrics and statistics
# - dependency_analysis: Import relationships and dependency mapping
# - workflow_analysis: Execution paths and workflow diagrams
# - files: Detailed analysis of each file in the project
#
# KEY INSIGHTS:
# - Find entry points in entry_points section
# - Understand dependencies in dependency_analysis section
# - Trace execution flows in workflow_analysis section
# - Navigate codebase using files section
#
# Generated: 2025-08-06T01:31:24+00:00
# Tool: genfilemap --project-map-in-memory

project_name: master_root
base_path: /home/opsvi/master_root
generated_at: '2025-08-06T01:31:24+00:00'
# Module organization and file type distribution
project_structure:
  file_type_distribution:
    python_files: 17
    config_files: 1
    total_files: 17
  module_structure:
    libs:
      files:
      - libs/opsvi-rag/src/opsvi_rag/__init__.py
      - libs/opsvi-rag/src/opsvi_rag/embeddings.py
      - libs/opsvi-rag/src/opsvi_rag/client.py
      - libs/opsvi-rag/src/opsvi_rag/search.py
      - libs/opsvi-llm/src/opsvi/__init__.py
      - libs/opsvi-llm/src/opsvi/llm/__init__.py
      - libs/opsvi-llm/src/opsvi/llm/client.py
      - libs/opsvi-core/src/opsvi_core/__init__.py
      - libs/opsvi-core/src/opsvi_core/exceptions.py
      - libs/opsvi-core/src/opsvi_core/config.py
      - libs/opsvi-core/src/opsvi_core/logging.py
      - libs/opsvi-agents/src/opsvi/__init__.py
      - libs/opsvi-agents/src/opsvi/agents/__init__.py
      - libs/opsvi-agents/src/opsvi/agents/crew_adapter.py
      - libs/opsvi-agents/src/opsvi/agents/graph_adapter.py
      total_lines: 320
      total_functions: 5
      total_classes: 10
    tests:
      files:
      - tests/opsvi_core/test_logging.py
      total_lines: 11
      total_functions: 1
      total_classes: 0
    tools:
      files:
      - tools/rag_init.py
      total_lines: 129
      total_functions: 2
      total_classes: 0
entry_points: {}
# Overall code metrics and statistics
statistics:
  total_functions: 8
  total_classes: 10
  total_imports: 36
  total_lines: 460
  external_dependencies: []
# Import relationships and dependency mapping between files
dependency_analysis:
  most_imported_files:
  - file_path: libs/opsvi-rag/src/opsvi_rag/client.py
    imported_by_count: 2
    imported_by:
    - libs/opsvi-rag/src/opsvi_rag/__init__.py
    - libs/opsvi-llm/src/opsvi/llm/__init__.py
  - file_path: libs/opsvi-core/src/opsvi_core/logging.py
    imported_by_count: 2
    imported_by:
    - libs/opsvi-core/src/opsvi_core/__init__.py
    - tests/opsvi_core/test_logging.py
  - file_path: libs/opsvi-core/src/opsvi_core/exceptions.py
    imported_by_count: 2
    imported_by:
    - libs/opsvi-core/src/opsvi_core/__init__.py
    - libs/opsvi-core/src/opsvi_core/config.py
  - file_path: libs/opsvi-rag/src/opsvi_rag/embeddings.py
    imported_by_count: 1
    imported_by:
    - libs/opsvi-rag/src/opsvi_rag/__init__.py
  - file_path: libs/opsvi-rag/src/opsvi_rag/search.py
    imported_by_count: 1
    imported_by:
    - libs/opsvi-rag/src/opsvi_rag/__init__.py
  - file_path: libs/opsvi-core/src/opsvi_core/config.py
    imported_by_count: 1
    imported_by:
    - libs/opsvi-core/src/opsvi_core/__init__.py
  - file_path: libs/opsvi-agents/src/opsvi/agents/crew_adapter.py
    imported_by_count: 1
    imported_by:
    - libs/opsvi-agents/src/opsvi/agents/__init__.py
  - file_path: libs/opsvi-agents/src/opsvi/agents/graph_adapter.py
    imported_by_count: 1
    imported_by:
    - libs/opsvi-agents/src/opsvi/agents/__init__.py
  circular_dependencies: []
# Execution paths and workflow diagrams
workflow_analysis:
  workflow_paths: {}
  conditional_branches: []
  function_calls: {}
  workflow_diagram: "graph TD\n    A[Entry Point] --> B{Parse Arguments}\n    B --> C{Check Flags}\n\n    C -->|Flags Found| D[Process Flags]\n    C -->|No Flags| E[Default Processing]\n\n    D --> F[Execute Workflow]\n    E --> F\n\n    F --> G[Complete]\n\n    style A fill:#e1f5fe\n    style G fill:#c8e6c9\n    style C fill:#fff3e0\n    style F fill:#f3e5f5\n"
# Detailed analysis of each file in the project
files:
- path: libs/opsvi-rag/src/opsvi_rag/__init__.py
  line_count: 15
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [{"module": "client", "alias": null, "line": 9, "statement": "from client import RAGClient"}, {"module": "embeddings", "alias": null, "line": 10, "statement": "from embeddings import get_embeddings"}, {"module": "search", "alias": null, "line": 11, "statement": "from search import search_documents"}], "constants": []}, "key_elements": [{"name": "from client import RAGClient", "type": "import", "line": 9}, {"name": "from embeddings import get_embeddings", "type": "import", "line": 10}, {"name": "from search import search_documents", "type": "import", "line": 11}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 9, "line_end": 11}], "content_hash": "189e619bb0de1bb9fe68b05cc94f9598"}'
- path: libs/opsvi-rag/src/opsvi_rag/embeddings.py
  line_count: 7
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "embeddings.py", "description": "Python module with 1 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "get_embeddings", "line": 6, "parameters": [{"name": "texts", "type": "list[str]"}], "is_async": false, "return_type": "list[list[float]]", "description": "Generates vector embeddings for a list of input texts.", "signature": "get_embeddings(texts: list[str]) -> list[list[float]]"}], "classes": [], "imports": [], "constants": []}, "key_elements": [{"name": "get_embeddings", "type": "function", "line": 6}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 7}, {"name": "get_embeddings Function", "description": "Function get_embeddings implementation.", "line_start": 6, "line_end": 11}], "content_hash": "14bc756b0b53324013d3438feed141f7"}'
- path: libs/opsvi-rag/src/opsvi_rag/client.py
  line_count: 17
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "client.py", "description": "Python module with 0 functions and 1 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [{"name": "RAGClient", "line": 8, "inherits_from": [], "methods": [{"name": "__init__", "line": 11, "parameters": [{"name": "self", "type": "self"}], "is_async": false, "return_type": "None", "description": "Initialize the RAG client.", "signature": "__init__(self) -> None"}, {"name": "search", "line": 16, "parameters": [{"name": "self", "type": "self"}, {"name": "query", "type": "str, limit: int = 10"}, {"name": "limit", "type": "int = 10", "default": "10"}], "is_async": false, "return_type": "list[dict[str, Any]]", "description": "Search for documents.", "signature": "search(self, query: str, limit: int = 10, limit: int = 10 = 10) -> list[dict[str, Any]]"}], "properties": [], "description": "Client class for Retrieval-Augmented Generation, providing methods to retrieve relevant documents and generate responses."}], "imports": [{"module": "typing", "alias": null, "line": 5, "statement": "from typing import Any"}], "constants": []}, "key_elements": [{"name": "from typing import Any", "type": "import", "line": 5}, {"name": "RAGClient", "type": "class", "line": 8}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 9}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}, {"name": "RAGClient Class", "description": "Class RAGClient definition and methods.", "line_start": 8, "line_end": 19}], "content_hash": "e35ae653c6717944b1e72b62b47d526f"}'
- path: libs/opsvi-rag/src/opsvi_rag/search.py
  line_count: 11
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "search.py", "description": "Python module with 1 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "search_documents", "line": 8, "parameters": [{"name": "query", "type": "str"}, {"name": "collection", "type": "str"}, {"name": "limit", "type": "int", "default": "10"}], "is_async": false, "return_type": "list[dict[str, Any]]", "description": "Searches for documents in a specified collection matching the query and returns a list of results.", "signature": "search_documents(query: str, collection: str, limit: int = 10) -> list[dict[str, Any]]"}], "classes": [], "imports": [{"module": "typing", "alias": null, "line": 5, "statement": "from typing import Any"}], "constants": []}, "key_elements": [{"name": "from typing import Any", "type": "import", "line": 5}, {"name": "search_documents", "type": "function", "line": 8}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 11}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}, {"name": "search_documents Function", "description": "Function search_documents implementation.", "line_start": 8, "line_end": 13}], "content_hash": "060e86690fd0693ecf53f12d574078cd"}'
- path: libs/opsvi-llm/src/opsvi/__init__.py
  line_count: 1
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [], "constants": []}, "key_elements": [], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}], "content_hash": "2a35222043dd8c22b1c74cc97aeffcaa"}'
- path: libs/opsvi-llm/src/opsvi/llm/__init__.py
  line_count: 5
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [{"module": "client", "alias": null, "line": 5, "statement": "from client import call"}], "constants": []}, "key_elements": [{"name": "from client import call", "type": "import", "line": 5}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}], "content_hash": "9f81acd101b728b8e160bdd535094860"}'
- path: libs/opsvi-llm/src/opsvi/llm/client.py
  line_count: 28
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "client.py", "description": "Python module with 1 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "call", "line": 8, "parameters": [{"name": "model", "type": "str"}], "is_async": false, "return_type": "dict[str, Any]", "description": "Executes the specified model and returns the results as a dictionary.", "signature": "call(model: str) -> dict[str, Any]"}], "classes": [], "imports": [{"module": "typing", "alias": null, "line": 5, "statement": "from typing import Any"}], "constants": []}, "key_elements": [{"name": "from typing import Any", "type": "import", "line": 5}, {"name": "call", "type": "function", "line": 8}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 14}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}, {"name": "call Function", "description": "Function call implementation.", "line_start": 8, "line_end": 13}], "content_hash": "f2f318569567704c205c563c540b7e1d"}'
- path: libs/opsvi-core/src/opsvi_core/__init__.py
  line_count: 19
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [{"module": "config", "alias": null, "line": 9, "statement": "from config import Config"}, {"module": "config", "alias": null, "line": 9, "statement": "from config import ConfigManager"}, {"module": "exceptions", "alias": null, "line": 10, "statement": "from exceptions import ConfigurationError"}, {"module": "exceptions", "alias": null, "line": 10, "statement": "from exceptions import OPSVIError"}, {"module": "exceptions", "alias": null, "line": 10, "statement": "from exceptions import ValidationError"}, {"module": "logging", "alias": null, "line": 11, "statement": "from logging import get_logger"}, {"module": "logging", "alias": null, "line": 11, "statement": "from logging import setup_logging"}], "constants": []}, "key_elements": [{"name": "from config import Config", "type": "import", "line": 9}, {"name": "from config import ConfigManager", "type": "import", "line": 9}, {"name": "from exceptions import ConfigurationError", "type": "import", "line": 10}, {"name": "from exceptions import OPSVIError", "type": "import", "line": 10}, {"name": "from exceptions import ValidationError", "type": "import", "line": 10}, {"name": "from logging import get_logger", "type": "import", "line": 11}, {"name": "from logging import setup_logging", "type": "import", "line": 11}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 9, "line_end": 11}], "content_hash": "326b440bcc9e4fccf4ece5504ab93c4e"}'
- path: libs/opsvi-core/src/opsvi_core/exceptions.py
  line_count: 34
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "exceptions.py", "description": "Python module with 0 functions and 5 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [{"name": "OPSVIError", "line": 6, "inherits_from": ["Exception):"], "methods": [{"name": "__init__", "line": 9, "parameters": [{"name": "self", "type": "self"}, {"name": "message", "type": "str"}, {"name": "details", "type": "dict | None", "default": "None"}], "is_async": false, "signature": "__init__(self, message: str, details: dict | None = None)"}], "properties": [], "description": "Base exception class for OPSVI-related errors."}, {"name": "ConfigurationError", "line": 15, "inherits_from": ["OPSVIError):"], "methods": [], "properties": [], "description": "Exception raised for configuration-related issues."}, {"name": "ValidationError", "line": 21, "inherits_from": ["OPSVIError):"], "methods": [], "properties": [], "description": "Exception raised when validation of data fails."}, {"name": "ConnectionError", "line": 27, "inherits_from": ["OPSVIError):"], "methods": [], "properties": [], "description": "Exception raised for connection-related problems."}, {"name": "TimeoutError", "line": 33, "inherits_from": ["OPSVIError):"], "methods": [], "properties": [], "description": "Exception raised when an operation times out."}], "imports": [], "constants": []}, "key_elements": [{"name": "OPSVIError", "type": "class", "line": 6}, {"name": "ConfigurationError", "type": "class", "line": 15}, {"name": "ValidationError", "type": "class", "line": 21}, {"name": "ConnectionError", "type": "class", "line": 27}, {"name": "TimeoutError", "type": "class", "line": 33}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 7}, {"name": "OPSVIError Class", "description": "Class OPSVIError definition and methods.", "line_start": 6, "line_end": 12}, {"name": "ConfigurationError Class", "description": "Class ConfigurationError definition and methods.", "line_start": 15, "line_end": 25}, {"name": "ValidationError Class", "description": "Class ValidationError definition and methods.", "line_start": 21, "line_end": 31}, {"name": "ConnectionError Class", "description": "Class ConnectionError definition and methods.", "line_start": 27, "line_end": 37}, {"name": "TimeoutError Class", "description": "Class TimeoutError definition and methods.", "line_start": 33, "line_end": 43}], "content_hash": "c8d70126b2ff92f0990f78b78b4ed33c"}'
- path: libs/opsvi-core/src/opsvi_core/config.py
  line_count: 79
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "config.py", "description": "Python module with 0 functions and 2 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [{"name": "Config", "line": 17, "inherits_from": ["BaseModel):"], "methods": [], "properties": [], "description": "Represents configuration settings."}, {"name": "ConfigManager", "line": 30, "inherits_from": [], "methods": [{"name": "__init__", "line": 33, "parameters": [{"name": "self", "type": "self"}, {"name": "config_class", "type": "type[Config]", "default": "Config):"}], "is_async": false, "signature": "__init__(self, config_class: type[Config] = Config):)"}, {"name": "load_from_env", "line": 38, "parameters": [{"name": "self", "type": "self"}, {"name": "env_file", "type": "Path | None = None", "default": "None"}], "is_async": false, "return_type": "Config", "description": "Load configuration from environment variables and optional .env file.", "signature": "load_from_env(self, env_file: Path | None = None = None) -> Config"}, {"name": "_load_env_file", "line": 55, "parameters": [{"name": "self", "type": "self"}, {"name": "env_file", "type": "Path"}], "is_async": false, "return_type": "None", "description": "Load environment variables from .env file.", "signature": "_load_env_file(self, env_file: Path) -> None"}, {"name": "config", "line": 71, "parameters": [{"name": "self", "type": "self"}], "is_async": false, "return_type": "Config", "description": "Get the current configuration.", "signature": "config(self) -> Config"}, {"name": "get", "line": 79, "parameters": [{"name": "self", "type": "self"}, {"name": "key", "type": "str, default: Any = None"}, {"name": "default", "type": "Any = None", "default": "None"}], "is_async": false, "return_type": "Any", "description": "Get a configuration value.", "signature": "get(self, key: str, default: Any = None, default: Any = None = None) -> Any"}], "properties": [], "description": "Manages loading, saving, and updating configuration data."}], "imports": [{"module": "os", "alias": null, "line": 5, "statement": "import os"}, {"module": "structlog", "alias": null, "line": 9, "statement": "import structlog"}, {"module": "pathlib", "alias": null, "line": 6, "statement": "from pathlib import Path"}, {"module": "typing", "alias": null, "line": 7, "statement": "from typing import Any"}, {"module": "pydantic", "alias": null, "line": 10, "statement": "from pydantic import BaseModel"}, {"module": "pydantic", "alias": null, "line": 10, "statement": "from pydantic import Field"}, {"module": "exceptions", "alias": null, "line": 12, "statement": "from exceptions import ConfigurationError"}], "constants": []}, "key_elements": [{"name": "os", "type": "import", "line": 5}, {"name": "structlog", "type": "import", "line": 9}, {"name": "from pathlib import Path", "type": "import", "line": 6}, {"name": "from typing import Any", "type": "import", "line": 7}, {"name": "from pydantic import BaseModel", "type": "import", "line": 10}, {"name": "from pydantic import Field", "type": "import", "line": 10}, {"name": "from exceptions import ConfigurationError", "type": "import", "line": 12}, {"name": "Config", "type": "class", "line": 17}, {"name": "ConfigManager", "type": "class", "line": 30}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 18}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 12}, {"name": "Config Class", "description": "Class Config definition and methods.", "line_start": 17, "line_end": 27}, {"name": "ConfigManager Class", "description": "Class ConfigManager definition and methods.", "line_start": 30, "line_end": 82}], "content_hash": "86bed1166db1bdc68af7df87bc8a0550"}'
- path: libs/opsvi-core/src/opsvi_core/logging.py
  line_count: 63
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "logging.py", "description": "Python module with 2 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "setup_logging", "line": 10, "parameters": [{"name": "level", "type": "str", "default": "INFO"}, {"name": "format", "type": "str", "default": "json"}, {"name": "include_timestamp", "type": "bool", "default": "True"}, {"name": "include_process", "type": "bool", "default": "True"}, {"name": "include_thread", "type": "bool", "default": "True"}], "is_async": false, "return_type": "None", "description": "Configures the logging system with specified level, format, and optional inclusion of timestamp, process, and thread information.", "signature": "setup_logging(level: str = INFO, format: str = json, include_timestamp: bool = True, include_process: bool = True, include_thread: bool = True) -> None"}, {"name": "get_logger", "line": 63, "parameters": [{"name": "name", "type": "str | None = None", "default": "None"}], "is_async": false, "return_type": "structlog.BoundLogger", "description": "Retrieves a structured logger instance optionally bound to a specific name.", "signature": "get_logger(name: str | None = None = None) -> structlog.BoundLogger"}], "classes": [], "imports": [{"module": "sys", "alias": null, "line": 5, "statement": "import sys"}, {"module": "structlog", "alias": null, "line": 7, "statement": "import structlog"}], "constants": []}, "key_elements": [{"name": "sys", "type": "import", "line": 5}, {"name": "structlog", "type": "import", "line": 7}, {"name": "setup_logging", "type": "function", "line": 10}, {"name": "get_logger", "type": "function", "line": 63}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 17}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 7}, {"name": "setup_logging Function", "description": "Function setup_logging implementation.", "line_start": 10, "line_end": 62}, {"name": "get_logger Function", "description": "Function get_logger implementation.", "line_start": 63, "line_end": 68}], "content_hash": "5d061a67fba4627a0caa16a1bb452560"}'
- path: libs/opsvi-agents/src/opsvi/__init__.py
  line_count: 1
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [], "constants": []}, "key_elements": [], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}], "content_hash": "2a35222043dd8c22b1c74cc97aeffcaa"}'
- path: libs/opsvi-agents/src/opsvi/agents/__init__.py
  line_count: 6
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "__init__.py", "description": "Python module with 0 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [], "imports": [{"module": "crew_adapter", "alias": null, "line": 5, "statement": "from crew_adapter import CrewAdapter"}, {"module": "graph_adapter", "alias": null, "line": 6, "statement": "from graph_adapter import GraphAdapter"}], "constants": []}, "key_elements": [{"name": "from crew_adapter import CrewAdapter", "type": "import", "line": 5}, {"name": "from graph_adapter import GraphAdapter", "type": "import", "line": 6}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 3}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 6}], "content_hash": "a4e41f15112783048c0cee9e4b8eb8de"}'
- path: libs/opsvi-agents/src/opsvi/agents/crew_adapter.py
  line_count: 17
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "crew_adapter.py", "description": "Python module with 0 functions and 1 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [{"name": "CrewAdapter", "line": 8, "inherits_from": [], "methods": [{"name": "__init__", "line": 11, "parameters": [{"name": "self", "type": "self"}], "is_async": false, "return_type": "None", "description": "Initialize the CrewAI adapter.", "signature": "__init__(self) -> None"}, {"name": "create_crew", "line": 16, "parameters": [{"name": "self", "type": "self"}, {"name": "agents", "type": "Any, tasks: Any"}, {"name": "tasks", "type": "Any"}], "is_async": false, "return_type": "dict[str, Any]", "description": "Create a crew with agents and tasks.", "signature": "create_crew(self, agents: Any, tasks: Any, tasks: Any) -> dict[str, Any]"}], "properties": [], "description": "Handles the adaptation and management of crew data for display or processing."}], "imports": [{"module": "typing", "alias": null, "line": 5, "statement": "from typing import Any"}], "constants": []}, "key_elements": [{"name": "from typing import Any", "type": "import", "line": 5}, {"name": "CrewAdapter", "type": "class", "line": 8}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 9}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}, {"name": "CrewAdapter Class", "description": "Class CrewAdapter definition and methods.", "line_start": 8, "line_end": 19}], "content_hash": "3df954d155323de4992d7cfc8bf95ef8"}'
- path: libs/opsvi-agents/src/opsvi/agents/graph_adapter.py
  line_count: 17
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "graph_adapter.py", "description": "Python module with 0 functions and 1 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [], "classes": [{"name": "GraphAdapter", "line": 8, "inherits_from": [], "methods": [{"name": "__init__", "line": 11, "parameters": [{"name": "self", "type": "self"}], "is_async": false, "return_type": "None", "description": "Initialize the LangGraph adapter.", "signature": "__init__(self) -> None"}, {"name": "create_graph", "line": 16, "parameters": [{"name": "self", "type": "self"}, {"name": "nodes", "type": "Any, edges: Any"}, {"name": "edges", "type": "Any"}], "is_async": false, "return_type": "dict[str, Any]", "description": "Create a graph with nodes and edges.", "signature": "create_graph(self, nodes: Any, edges: Any, edges: Any) -> dict[str, Any]"}], "properties": [], "description": "Adapter class to interface with graph data structures, providing methods for graph manipulation and querying."}], "imports": [{"module": "typing", "alias": null, "line": 5, "statement": "from typing import Any"}], "constants": []}, "key_elements": [{"name": "from typing import Any", "type": "import", "line": 5}, {"name": "GraphAdapter", "type": "class", "line": 8}], "sections": [{"name": "Module Docstring", "description": "Module-level documentation describing the file''s purpose.", "line_start": 3, "line_end": 9}, {"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 5, "line_end": 5}, {"name": "GraphAdapter Class", "description": "Class GraphAdapter definition and methods.", "line_start": 8, "line_end": 19}], "content_hash": "50169f8f554f08d027a8b72fedbe932b"}'
- path: tests/opsvi_core/test_logging.py
  line_count: 11
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "test_logging.py", "description": "Python module with 1 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "test_get_logger_returns_logger", "line": 6, "parameters": [], "is_async": false, "return_type": "None", "signature": "test_get_logger_returns_logger() -> None", "description": "Tests that get_logger function returns a valid logger instance."}], "classes": [], "imports": [{"module": "opsvi_core.logging", "alias": "log_mod", "line": 3, "statement": "import opsvi_core.logging as log_mod"}], "constants": []}, "key_elements": [{"name": "opsvi_core.logging", "type": "import", "line": 3}, {"name": "test_get_logger_returns_logger", "type": "function", "line": 6}], "sections": [{"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 3, "line_end": 3}, {"name": "test_get_logger_returns_logger Function", "description": "Function test_get_logger_returns_logger implementation.", "line_start": 6, "line_end": 11}], "content_hash": "944ebe676ed84ac91ffe6c096fbe9e20"}'
- path: tools/rag_init.py
  line_count: 129
  filemap: '{"file_metadata": {"type": "python", "language": "python", "title": "rag_init.py", "description": "Python module with 2 functions and 0 classes", "last_updated": "2025-08-05"}, "code_elements": {"functions": [{"name": "init_rag_system", "line": 22, "parameters": [{"name": "collection_name", "type": "str = \"global__demo\"", "default": "global__demo"}], "is_async": true, "return_type": "None", "description": "Initializes the RAG (Retrieval-Augmented Generation) system with the specified collection name.", "signature": "async init_rag_system(collection_name: str = \"global__demo\" = global__demo) -> None"}, {"name": "main", "line": 114, "parameters": [], "is_async": false, "return_type": "None", "description": "Entry point of the program that runs the main application logic.", "signature": "main() -> None"}], "classes": [], "imports": [{"module": "asyncio", "alias": null, "line": 6, "statement": "import asyncio"}, {"module": "sys", "alias": null, "line": 7, "statement": "import sys"}, {"module": "pathlib", "alias": null, "line": 8, "statement": "from pathlib import Path"}, {"module": "opsvi_core", "alias": null, "line": 15, "statement": "from opsvi_core import get_logger"}, {"module": "opsvi_core", "alias": null, "line": 15, "statement": "from opsvi_core import setup_logging"}, {"module": "qdrant_client", "alias": null, "line": 16, "statement": "from qdrant_client import QdrantClient"}, {"module": "qdrant_client.models", "alias": null, "line": 17, "statement": "from qdrant_client.models import Distance"}, {"module": "qdrant_client.models", "alias": null, "line": 17, "statement": "from qdrant_client.models import VectorParams"}], "constants": []}, "key_elements": [{"name": "asyncio", "type": "import", "line": 6}, {"name": "sys", "type": "import", "line": 7}, {"name": "from pathlib import Path", "type": "import", "line": 8}, {"name": "from opsvi_core import get_logger", "type": "import", "line": 15}, {"name": "from opsvi_core import setup_logging", "type": "import", "line": 15}, {"name": "from qdrant_client import QdrantClient", "type": "import", "line": 16}, {"name": "from qdrant_client.models import Distance", "type": "import", "line": 17}, {"name": "from qdrant_client.models import VectorParams", "type": "import", "line": 17}, {"name": "init_rag_system", "type": "function", "line": 22}, {"name": "main", "type": "function", "line": 114}], "sections": [{"name": "Imports", "description": "Import statements for required modules and libraries.", "line_start": 6, "line_end": 17}, {"name": "init_rag_system Function", "description": "Function init_rag_system implementation.", "line_start": 22, "line_end": 113}, {"name": "main Function", "description": "Function main implementation.", "line_start": 114, "line_end": 119}], "content_hash": "39167ba7fbb839ddb12cdbf519704ce8"}'
